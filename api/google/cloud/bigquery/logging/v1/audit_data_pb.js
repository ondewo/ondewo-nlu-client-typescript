// source: google/cloud/bigquery/logging/v1/audit_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_rpc_status_pb = require('../../../../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.AuditData', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.AuditData.RequestCase', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.AuditData.ResponseCase', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.BigQueryAcl', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.Dataset', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.DatasetInfo', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.DatasetListRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.DatasetName', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.Job', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobCompletedEvent', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobConfiguration', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobConfiguration.ConfigurationCase', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobInsertRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobInsertResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobName', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobQueryRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobQueryResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobStatistics', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.JobStatus', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.Table', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableDataListRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableDefinition', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableInfo', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableInsertRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableInsertResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableName', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableUpdateRequest', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableUpdateResponse', null, global);
goog.exportSymbol('proto.google.cloud.bigquery.logging.v1.TableViewDefinition', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.AuditData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.AuditData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.AuditData.displayName = 'proto.google.cloud.bigquery.logging.v1.AuditData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableInsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableInsertRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.TableInsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.TableUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableInsertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableInsertResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.TableInsertResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.TableUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.DatasetListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.DatasetListRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.DatasetListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobInsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobInsertRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.JobInsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobInsertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobInsertResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.JobInsertResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobQueryRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.JobQueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobQueryResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.JobQueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.displayName = 'proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobCompletedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.displayName = 'proto.google.cloud.bigquery.logging.v1.JobCompletedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableDataListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableDataListRequest.displayName = 'proto.google.cloud.bigquery.logging.v1.TableDataListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.Table = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.Table, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.Table.displayName = 'proto.google.cloud.bigquery.logging.v1.Table';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableInfo.displayName = 'proto.google.cloud.bigquery.logging.v1.TableInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableViewDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableViewDefinition.displayName = 'proto.google.cloud.bigquery.logging.v1.TableViewDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.Dataset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.Dataset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.Dataset.displayName = 'proto.google.cloud.bigquery.logging.v1.Dataset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.DatasetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.DatasetInfo.displayName = 'proto.google.cloud.bigquery.logging.v1.DatasetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.bigquery.logging.v1.BigQueryAcl.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.BigQueryAcl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.BigQueryAcl.displayName = 'proto.google.cloud.bigquery.logging.v1.BigQueryAcl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.displayName = 'proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.Job = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.Job, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.Job.displayName = 'proto.google.cloud.bigquery.logging.v1.Job';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.cloud.bigquery.logging.v1.JobConfiguration.oneofGroups_);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.displayName = 'proto.google.cloud.bigquery.logging.v1.JobConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.displayName = 'proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.displayName = 'proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.displayName = 'proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.displayName = 'proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.bigquery.logging.v1.TableDefinition.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableDefinition.displayName = 'proto.google.cloud.bigquery.logging.v1.TableDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobStatus.displayName = 'proto.google.cloud.bigquery.logging.v1.JobStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobStatistics.displayName = 'proto.google.cloud.bigquery.logging.v1.JobStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.DatasetName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.DatasetName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.DatasetName.displayName = 'proto.google.cloud.bigquery.logging.v1.DatasetName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.TableName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.TableName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.TableName.displayName = 'proto.google.cloud.bigquery.logging.v1.TableName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.bigquery.logging.v1.JobName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.bigquery.logging.v1.JobName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.bigquery.logging.v1.JobName.displayName = 'proto.google.cloud.bigquery.logging.v1.JobName';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_ = [[1,16,2,3,4,5,6,7,8],[9,10,11,12,18,13,14,15]];

/**
 * @enum {number}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.RequestCase = {
  REQUEST_NOT_SET: 0,
  TABLE_INSERT_REQUEST: 1,
  TABLE_UPDATE_REQUEST: 16,
  DATASET_LIST_REQUEST: 2,
  DATASET_INSERT_REQUEST: 3,
  DATASET_UPDATE_REQUEST: 4,
  JOB_INSERT_REQUEST: 5,
  JOB_QUERY_REQUEST: 6,
  JOB_GET_QUERY_RESULTS_REQUEST: 7,
  TABLE_DATA_LIST_REQUEST: 8
};

/**
 * @return {proto.google.cloud.bigquery.logging.v1.AuditData.RequestCase}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getRequestCase = function() {
  return /** @type {proto.google.cloud.bigquery.logging.v1.AuditData.RequestCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  TABLE_INSERT_RESPONSE: 9,
  TABLE_UPDATE_RESPONSE: 10,
  DATASET_INSERT_RESPONSE: 11,
  DATASET_UPDATE_RESPONSE: 12,
  JOB_INSERT_RESPONSE: 18,
  JOB_QUERY_RESPONSE: 13,
  JOB_GET_QUERY_RESULTS_RESPONSE: 14,
  JOB_QUERY_DONE_RESPONSE: 15
};

/**
 * @return {proto.google.cloud.bigquery.logging.v1.AuditData.ResponseCase}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getResponseCase = function() {
  return /** @type {proto.google.cloud.bigquery.logging.v1.AuditData.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.AuditData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.AuditData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.AuditData.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableInsertRequest: (f = msg.getTableInsertRequest()) && proto.google.cloud.bigquery.logging.v1.TableInsertRequest.toObject(includeInstance, f),
    tableUpdateRequest: (f = msg.getTableUpdateRequest()) && proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.toObject(includeInstance, f),
    datasetListRequest: (f = msg.getDatasetListRequest()) && proto.google.cloud.bigquery.logging.v1.DatasetListRequest.toObject(includeInstance, f),
    datasetInsertRequest: (f = msg.getDatasetInsertRequest()) && proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.toObject(includeInstance, f),
    datasetUpdateRequest: (f = msg.getDatasetUpdateRequest()) && proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.toObject(includeInstance, f),
    jobInsertRequest: (f = msg.getJobInsertRequest()) && proto.google.cloud.bigquery.logging.v1.JobInsertRequest.toObject(includeInstance, f),
    jobQueryRequest: (f = msg.getJobQueryRequest()) && proto.google.cloud.bigquery.logging.v1.JobQueryRequest.toObject(includeInstance, f),
    jobGetQueryResultsRequest: (f = msg.getJobGetQueryResultsRequest()) && proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.toObject(includeInstance, f),
    tableDataListRequest: (f = msg.getTableDataListRequest()) && proto.google.cloud.bigquery.logging.v1.TableDataListRequest.toObject(includeInstance, f),
    tableInsertResponse: (f = msg.getTableInsertResponse()) && proto.google.cloud.bigquery.logging.v1.TableInsertResponse.toObject(includeInstance, f),
    tableUpdateResponse: (f = msg.getTableUpdateResponse()) && proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.toObject(includeInstance, f),
    datasetInsertResponse: (f = msg.getDatasetInsertResponse()) && proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.toObject(includeInstance, f),
    datasetUpdateResponse: (f = msg.getDatasetUpdateResponse()) && proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.toObject(includeInstance, f),
    jobInsertResponse: (f = msg.getJobInsertResponse()) && proto.google.cloud.bigquery.logging.v1.JobInsertResponse.toObject(includeInstance, f),
    jobQueryResponse: (f = msg.getJobQueryResponse()) && proto.google.cloud.bigquery.logging.v1.JobQueryResponse.toObject(includeInstance, f),
    jobGetQueryResultsResponse: (f = msg.getJobGetQueryResultsResponse()) && proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.toObject(includeInstance, f),
    jobQueryDoneResponse: (f = msg.getJobQueryDoneResponse()) && proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.toObject(includeInstance, f),
    jobCompletedEvent: (f = msg.getJobCompletedEvent()) && proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.AuditData;
  return proto.google.cloud.bigquery.logging.v1.AuditData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.AuditData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.TableInsertRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableInsertRequest.deserializeBinaryFromReader);
      msg.setTableInsertRequest(value);
      break;
    case 16:
      var value = new proto.google.cloud.bigquery.logging.v1.TableUpdateRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.deserializeBinaryFromReader);
      msg.setTableUpdateRequest(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetListRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetListRequest.deserializeBinaryFromReader);
      msg.setDatasetListRequest(value);
      break;
    case 3:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.deserializeBinaryFromReader);
      msg.setDatasetInsertRequest(value);
      break;
    case 4:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.deserializeBinaryFromReader);
      msg.setDatasetUpdateRequest(value);
      break;
    case 5:
      var value = new proto.google.cloud.bigquery.logging.v1.JobInsertRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobInsertRequest.deserializeBinaryFromReader);
      msg.setJobInsertRequest(value);
      break;
    case 6:
      var value = new proto.google.cloud.bigquery.logging.v1.JobQueryRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobQueryRequest.deserializeBinaryFromReader);
      msg.setJobQueryRequest(value);
      break;
    case 7:
      var value = new proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.deserializeBinaryFromReader);
      msg.setJobGetQueryResultsRequest(value);
      break;
    case 8:
      var value = new proto.google.cloud.bigquery.logging.v1.TableDataListRequest;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableDataListRequest.deserializeBinaryFromReader);
      msg.setTableDataListRequest(value);
      break;
    case 9:
      var value = new proto.google.cloud.bigquery.logging.v1.TableInsertResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableInsertResponse.deserializeBinaryFromReader);
      msg.setTableInsertResponse(value);
      break;
    case 10:
      var value = new proto.google.cloud.bigquery.logging.v1.TableUpdateResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.deserializeBinaryFromReader);
      msg.setTableUpdateResponse(value);
      break;
    case 11:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.deserializeBinaryFromReader);
      msg.setDatasetInsertResponse(value);
      break;
    case 12:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.deserializeBinaryFromReader);
      msg.setDatasetUpdateResponse(value);
      break;
    case 18:
      var value = new proto.google.cloud.bigquery.logging.v1.JobInsertResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobInsertResponse.deserializeBinaryFromReader);
      msg.setJobInsertResponse(value);
      break;
    case 13:
      var value = new proto.google.cloud.bigquery.logging.v1.JobQueryResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobQueryResponse.deserializeBinaryFromReader);
      msg.setJobQueryResponse(value);
      break;
    case 14:
      var value = new proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.deserializeBinaryFromReader);
      msg.setJobGetQueryResultsResponse(value);
      break;
    case 15:
      var value = new proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.deserializeBinaryFromReader);
      msg.setJobQueryDoneResponse(value);
      break;
    case 17:
      var value = new proto.google.cloud.bigquery.logging.v1.JobCompletedEvent;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.deserializeBinaryFromReader);
      msg.setJobCompletedEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.AuditData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.AuditData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.AuditData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableInsertRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.TableInsertRequest.serializeBinaryToWriter
    );
  }
  f = message.getTableUpdateRequest();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.serializeBinaryToWriter
    );
  }
  f = message.getDatasetListRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetListRequest.serializeBinaryToWriter
    );
  }
  f = message.getDatasetInsertRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.serializeBinaryToWriter
    );
  }
  f = message.getDatasetUpdateRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.serializeBinaryToWriter
    );
  }
  f = message.getJobInsertRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.cloud.bigquery.logging.v1.JobInsertRequest.serializeBinaryToWriter
    );
  }
  f = message.getJobQueryRequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.cloud.bigquery.logging.v1.JobQueryRequest.serializeBinaryToWriter
    );
  }
  f = message.getJobGetQueryResultsRequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.serializeBinaryToWriter
    );
  }
  f = message.getTableDataListRequest();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.cloud.bigquery.logging.v1.TableDataListRequest.serializeBinaryToWriter
    );
  }
  f = message.getTableInsertResponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.google.cloud.bigquery.logging.v1.TableInsertResponse.serializeBinaryToWriter
    );
  }
  f = message.getTableUpdateResponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.serializeBinaryToWriter
    );
  }
  f = message.getDatasetInsertResponse();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.serializeBinaryToWriter
    );
  }
  f = message.getDatasetUpdateResponse();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.serializeBinaryToWriter
    );
  }
  f = message.getJobInsertResponse();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.google.cloud.bigquery.logging.v1.JobInsertResponse.serializeBinaryToWriter
    );
  }
  f = message.getJobQueryResponse();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.google.cloud.bigquery.logging.v1.JobQueryResponse.serializeBinaryToWriter
    );
  }
  f = message.getJobGetQueryResultsResponse();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.serializeBinaryToWriter
    );
  }
  f = message.getJobQueryDoneResponse();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.serializeBinaryToWriter
    );
  }
  f = message.getJobCompletedEvent();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional TableInsertRequest table_insert_request = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getTableInsertRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableInsertRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableInsertRequest, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableInsertRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setTableInsertRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearTableInsertRequest = function() {
  return this.setTableInsertRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasTableInsertRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TableUpdateRequest table_update_request = 16;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableUpdateRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getTableUpdateRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableUpdateRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableUpdateRequest, 16));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableUpdateRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setTableUpdateRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearTableUpdateRequest = function() {
  return this.setTableUpdateRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasTableUpdateRequest = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional DatasetListRequest dataset_list_request = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetListRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getDatasetListRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetListRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetListRequest, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetListRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setDatasetListRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearDatasetListRequest = function() {
  return this.setDatasetListRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasDatasetListRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DatasetInsertRequest dataset_insert_request = 3;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getDatasetInsertRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest, 3));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setDatasetInsertRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearDatasetInsertRequest = function() {
  return this.setDatasetInsertRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasDatasetInsertRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DatasetUpdateRequest dataset_update_request = 4;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getDatasetUpdateRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest, 4));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setDatasetUpdateRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearDatasetUpdateRequest = function() {
  return this.setDatasetUpdateRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasDatasetUpdateRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional JobInsertRequest job_insert_request = 5;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobInsertRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobInsertRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobInsertRequest, 5));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobInsertRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobInsertRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobInsertRequest = function() {
  return this.setJobInsertRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobInsertRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional JobQueryRequest job_query_request = 6;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobQueryRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobQueryRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobQueryRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobQueryRequest, 6));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobQueryRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobQueryRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobQueryRequest = function() {
  return this.setJobQueryRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobQueryRequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional JobGetQueryResultsRequest job_get_query_results_request = 7;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobGetQueryResultsRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest, 7));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobGetQueryResultsRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobGetQueryResultsRequest = function() {
  return this.setJobGetQueryResultsRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobGetQueryResultsRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TableDataListRequest table_data_list_request = 8;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableDataListRequest}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getTableDataListRequest = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableDataListRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableDataListRequest, 8));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableDataListRequest|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setTableDataListRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearTableDataListRequest = function() {
  return this.setTableDataListRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasTableDataListRequest = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TableInsertResponse table_insert_response = 9;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getTableInsertResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableInsertResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableInsertResponse, 9));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableInsertResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setTableInsertResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearTableInsertResponse = function() {
  return this.setTableInsertResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasTableInsertResponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TableUpdateResponse table_update_response = 10;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableUpdateResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getTableUpdateResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableUpdateResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableUpdateResponse, 10));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableUpdateResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setTableUpdateResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearTableUpdateResponse = function() {
  return this.setTableUpdateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasTableUpdateResponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional DatasetInsertResponse dataset_insert_response = 11;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getDatasetInsertResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse, 11));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setDatasetInsertResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearDatasetInsertResponse = function() {
  return this.setDatasetInsertResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasDatasetInsertResponse = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DatasetUpdateResponse dataset_update_response = 12;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getDatasetUpdateResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse, 12));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setDatasetUpdateResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearDatasetUpdateResponse = function() {
  return this.setDatasetUpdateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasDatasetUpdateResponse = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional JobInsertResponse job_insert_response = 18;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobInsertResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobInsertResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobInsertResponse, 18));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobInsertResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobInsertResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobInsertResponse = function() {
  return this.setJobInsertResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobInsertResponse = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional JobQueryResponse job_query_response = 13;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobQueryResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobQueryResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobQueryResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobQueryResponse, 13));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobQueryResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobQueryResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobQueryResponse = function() {
  return this.setJobQueryResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobQueryResponse = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional JobGetQueryResultsResponse job_get_query_results_response = 14;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobGetQueryResultsResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse, 14));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobGetQueryResultsResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobGetQueryResultsResponse = function() {
  return this.setJobGetQueryResultsResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobGetQueryResultsResponse = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional JobQueryDoneResponse job_query_done_response = 15;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobQueryDoneResponse = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse, 15));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobQueryDoneResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.google.cloud.bigquery.logging.v1.AuditData.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobQueryDoneResponse = function() {
  return this.setJobQueryDoneResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobQueryDoneResponse = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional JobCompletedEvent job_completed_event = 17;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobCompletedEvent}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.getJobCompletedEvent = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobCompletedEvent} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobCompletedEvent, 17));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobCompletedEvent|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
*/
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.setJobCompletedEvent = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.AuditData} returns this
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.clearJobCompletedEvent = function() {
  return this.setJobCompletedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.AuditData.prototype.hasJobCompletedEvent = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableInsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Table.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableInsertRequest;
  return proto.google.cloud.bigquery.logging.v1.TableInsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Table;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Table.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableInsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Table.serializeBinaryToWriter
    );
  }
};


/**
 * optional Table resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Table}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Table} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Table, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Table|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertRequest} returns this
*/
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Table.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateRequest}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableUpdateRequest;
  return proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateRequest}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Table;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Table.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Table.serializeBinaryToWriter
    );
  }
};


/**
 * optional Table resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Table}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Table} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Table, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Table|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateRequest} returns this
*/
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableInsertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInsertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Table.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableInsertResponse;
  return proto.google.cloud.bigquery.logging.v1.TableInsertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInsertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Table;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Table.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableInsertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInsertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Table.serializeBinaryToWriter
    );
  }
};


/**
 * optional Table resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Table}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Table} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Table, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Table|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInsertResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.TableInsertResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Table.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateResponse}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableUpdateResponse;
  return proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateResponse}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Table;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Table.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Table.serializeBinaryToWriter
    );
  }
};


/**
 * optional Table resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Table}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Table} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Table, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Table|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableUpdateResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.TableUpdateResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.DatasetListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listAll: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetListRequest}
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.DatasetListRequest;
  return proto.google.cloud.bigquery.logging.v1.DatasetListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetListRequest}
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setListAll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.DatasetListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListAll();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool list_all = 1;
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.prototype.getListAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetListRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetListRequest.prototype.setListAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Dataset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest;
  return proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Dataset;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Dataset.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Dataset.serializeBinaryToWriter
    );
  }
};


/**
 * optional Dataset resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Dataset}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Dataset} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Dataset, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Dataset|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest} returns this
*/
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Dataset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse;
  return proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Dataset;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Dataset.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Dataset.serializeBinaryToWriter
    );
  }
};


/**
 * optional Dataset resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Dataset}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Dataset} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Dataset, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Dataset|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInsertResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Dataset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest;
  return proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Dataset;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Dataset.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Dataset.serializeBinaryToWriter
    );
  }
};


/**
 * optional Dataset resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Dataset}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Dataset} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Dataset, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Dataset|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest} returns this
*/
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Dataset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse;
  return proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Dataset;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Dataset.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Dataset.serializeBinaryToWriter
    );
  }
};


/**
 * optional Dataset resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Dataset}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Dataset} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Dataset, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Dataset|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.DatasetUpdateResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobInsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobInsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobInsertRequest;
  return proto.google.cloud.bigquery.logging.v1.JobInsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobInsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertRequest}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Job;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobInsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobInsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional Job resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Job} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Job, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Job|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertRequest} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobInsertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobInsertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.google.cloud.bigquery.logging.v1.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobInsertResponse;
  return proto.google.cloud.bigquery.logging.v1.JobInsertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobInsertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Job;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobInsertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobInsertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional Job resource = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.prototype.getResource = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Job} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Job, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Job|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobInsertResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobInsertResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxResults: jspb.Message.getFieldWithDefault(msg, 2, 0),
    defaultDataset: (f = msg.getDefaultDataset()) && proto.google.cloud.bigquery.logging.v1.DatasetName.toObject(includeInstance, f),
    projectId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dryRun: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobQueryRequest;
  return proto.google.cloud.bigquery.logging.v1.JobQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxResults(value);
      break;
    case 3:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetName.deserializeBinaryFromReader);
      msg.setDefaultDataset(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDryRun(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDefaultDataset();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetName.serializeBinaryToWriter
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDryRun();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 max_results = 2;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional DatasetName default_dataset = 3;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetName}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.getDefaultDataset = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetName, 3));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.setDefaultDataset = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.clearDefaultDataset = function() {
  return this.setDefaultDataset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.hasDefaultDataset = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string project_id = 4;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool dry_run = 5;
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.getDryRun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryRequest.prototype.setDryRun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalResults: jspb.Message.getFieldWithDefault(msg, 1, 0),
    job: (f = msg.getJob()) && proto.google.cloud.bigquery.logging.v1.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobQueryResponse;
  return proto.google.cloud.bigquery.logging.v1.JobQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalResults(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.Job;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalResults();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 total_results = 1;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.getTotalResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.setTotalResults = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Job job = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.getJob = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Job} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Job, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Job|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxResults: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startRow: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest;
  return proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartRow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getStartRow();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 max_results = 1;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 start_row = 2;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.prototype.getStartRow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsRequest.prototype.setStartRow = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalResults: jspb.Message.getFieldWithDefault(msg, 1, 0),
    job: (f = msg.getJob()) && proto.google.cloud.bigquery.logging.v1.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse;
  return proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalResults(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.Job;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalResults();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 total_results = 1;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.getTotalResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.setTotalResults = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Job job = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.getJob = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Job} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Job, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Job|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobGetQueryResultsResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.google.cloud.bigquery.logging.v1.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse;
  return proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.Job;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional Job job = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.prototype.getJob = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Job} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Job, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Job|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobQueryDoneResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    job: (f = msg.getJob()) && proto.google.cloud.bigquery.logging.v1.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent}
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobCompletedEvent;
  return proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent}
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventName(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.Job;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional string event_name = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.getEventName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.setEventName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Job job = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.getJob = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.Job} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.Job, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.Job|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobCompletedEvent} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobCompletedEvent.prototype.hasJob = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableDataListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableDataListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startRow: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxResults: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDataListRequest}
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableDataListRequest;
  return proto.google.cloud.bigquery.logging.v1.TableDataListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableDataListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDataListRequest}
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartRow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableDataListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableDataListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartRow();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 start_row = 1;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.prototype.getStartRow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDataListRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.prototype.setStartRow = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 max_results = 2;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDataListRequest} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableDataListRequest.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.Table.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.Table} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.Table.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: (f = msg.getTableName()) && proto.google.cloud.bigquery.logging.v1.TableName.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && proto.google.cloud.bigquery.logging.v1.TableInfo.toObject(includeInstance, f),
    schemaJson: jspb.Message.getFieldWithDefault(msg, 8, ""),
    view: (f = msg.getView()) && proto.google.cloud.bigquery.logging.v1.TableViewDefinition.toObject(includeInstance, f),
    expireTime: (f = msg.getExpireTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    truncateTime: (f = msg.getTruncateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table}
 */
proto.google.cloud.bigquery.logging.v1.Table.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.Table;
  return proto.google.cloud.bigquery.logging.v1.Table.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.Table} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table}
 */
proto.google.cloud.bigquery.logging.v1.Table.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.TableName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader);
      msg.setTableName(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.TableInfo;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaJson(value);
      break;
    case 4:
      var value = new proto.google.cloud.bigquery.logging.v1.TableViewDefinition;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableViewDefinition.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpireTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTruncateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.Table.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.Table} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.Table.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.TableInfo.serializeBinaryToWriter
    );
  }
  f = message.getSchemaJson();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.cloud.bigquery.logging.v1.TableViewDefinition.serializeBinaryToWriter
    );
  }
  f = message.getExpireTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTruncateTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional TableName table_name = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.getTableName = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableName, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
*/
proto.google.cloud.bigquery.logging.v1.Table.prototype.setTableName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.clearTableName = function() {
  return this.setTableName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.hasTableName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TableInfo info = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableInfo}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.getInfo = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableInfo} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableInfo, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableInfo|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
*/
proto.google.cloud.bigquery.logging.v1.Table.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string schema_json = 8;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.getSchemaJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.setSchemaJson = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional TableViewDefinition view = 4;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableViewDefinition}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.getView = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableViewDefinition} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableViewDefinition, 4));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableViewDefinition|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
*/
proto.google.cloud.bigquery.logging.v1.Table.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.hasView = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp expire_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.getExpireTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
*/
proto.google.cloud.bigquery.logging.v1.Table.prototype.setExpireTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.clearExpireTime = function() {
  return this.setExpireTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.hasExpireTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp create_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
*/
proto.google.cloud.bigquery.logging.v1.Table.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp truncate_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.getTruncateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
*/
proto.google.cloud.bigquery.logging.v1.Table.prototype.setTruncateTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Table} returns this
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.clearTruncateTime = function() {
  return this.setTruncateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Table.prototype.hasTruncateTime = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    friendlyName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInfo}
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableInfo;
  return proto.google.cloud.bigquery.logging.v1.TableInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInfo}
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFriendlyName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFriendlyName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string friendly_name = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.prototype.getFriendlyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInfo} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.prototype.setFriendlyName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableInfo} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableViewDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableViewDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableViewDefinition}
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableViewDefinition;
  return proto.google.cloud.bigquery.logging.v1.TableViewDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableViewDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableViewDefinition}
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableViewDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableViewDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableViewDefinition} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableViewDefinition.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.Dataset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.Dataset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.Dataset.toObject = function(includeInstance, msg) {
  var f, obj = {
    datasetName: (f = msg.getDatasetName()) && proto.google.cloud.bigquery.logging.v1.DatasetName.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && proto.google.cloud.bigquery.logging.v1.DatasetInfo.toObject(includeInstance, f),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateTime: (f = msg.getUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    acl: (f = msg.getAcl()) && proto.google.cloud.bigquery.logging.v1.BigQueryAcl.toObject(includeInstance, f),
    defaultTableExpireDuration: (f = msg.getDefaultTableExpireDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.Dataset;
  return proto.google.cloud.bigquery.logging.v1.Dataset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.Dataset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetName.deserializeBinaryFromReader);
      msg.setDatasetName(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetInfo;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateTime(value);
      break;
    case 6:
      var value = new proto.google.cloud.bigquery.logging.v1.BigQueryAcl;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.BigQueryAcl.deserializeBinaryFromReader);
      msg.setAcl(value);
      break;
    case 8:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDefaultTableExpireDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.Dataset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.Dataset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.Dataset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatasetName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetName.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAcl();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.cloud.bigquery.logging.v1.BigQueryAcl.serializeBinaryToWriter
    );
  }
  f = message.getDefaultTableExpireDuration();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatasetName dataset_name = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetName}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.getDatasetName = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetName, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
*/
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.setDatasetName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.clearDatasetName = function() {
  return this.setDatasetName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.hasDatasetName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DatasetInfo info = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetInfo}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.getInfo = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetInfo} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetInfo, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetInfo|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
*/
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp create_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
*/
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp update_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.getUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
*/
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.setUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.clearUpdateTime = function() {
  return this.setUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BigQueryAcl acl = 6;
 * @return {?proto.google.cloud.bigquery.logging.v1.BigQueryAcl}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.getAcl = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.BigQueryAcl} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.BigQueryAcl, 6));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.BigQueryAcl|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
*/
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.setAcl = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.clearAcl = function() {
  return this.setAcl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.hasAcl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Duration default_table_expire_duration = 8;
 * @return {?proto.google.protobuf.Duration}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.getDefaultTableExpireDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 8));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
*/
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.setDefaultTableExpireDuration = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Dataset} returns this
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.clearDefaultTableExpireDuration = function() {
  return this.setDefaultTableExpireDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Dataset.prototype.hasDefaultTableExpireDuration = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.DatasetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    friendlyName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInfo}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.DatasetInfo;
  return proto.google.cloud.bigquery.logging.v1.DatasetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInfo}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFriendlyName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.DatasetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFriendlyName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string friendly_name = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.prototype.getFriendlyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInfo} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.prototype.setFriendlyName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetInfo} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.BigQueryAcl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.BigQueryAcl;
  return proto.google.cloud.bigquery.logging.v1.BigQueryAcl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.BigQueryAcl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, ""),
    groupEmail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userEmail: jspb.Message.getFieldWithDefault(msg, 3, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 4, ""),
    specialGroup: jspb.Message.getFieldWithDefault(msg, 5, ""),
    viewName: (f = msg.getViewName()) && proto.google.cloud.bigquery.logging.v1.TableName.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry;
  return proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecialGroup(value);
      break;
    case 6:
      var value = new proto.google.cloud.bigquery.logging.v1.TableName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader);
      msg.setViewName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGroupEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSpecialGroup();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getViewName();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter
    );
  }
};


/**
 * optional string role = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} returns this
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string group_email = 2;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.getGroupEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} returns this
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.setGroupEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_email = 3;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.getUserEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} returns this
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.setUserEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string domain = 4;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} returns this
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string special_group = 5;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.getSpecialGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} returns this
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.setSpecialGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional TableName view_name = 6;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.getViewName = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableName, 6));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} returns this
*/
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.setViewName = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry} returns this
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.clearViewName = function() {
  return this.setViewName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry.prototype.hasViewName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Entry entries = 1;
 * @return {!Array<!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry>}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry, 1));
};


/**
 * @param {!Array<!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry>} value
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl} returns this
*/
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry}
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.bigquery.logging.v1.BigQueryAcl.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.cloud.bigquery.logging.v1.BigQueryAcl} returns this
 */
proto.google.cloud.bigquery.logging.v1.BigQueryAcl.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.Job.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.Job} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.Job.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobName: (f = msg.getJobName()) && proto.google.cloud.bigquery.logging.v1.JobName.toObject(includeInstance, f),
    jobConfiguration: (f = msg.getJobConfiguration()) && proto.google.cloud.bigquery.logging.v1.JobConfiguration.toObject(includeInstance, f),
    jobStatus: (f = msg.getJobStatus()) && proto.google.cloud.bigquery.logging.v1.JobStatus.toObject(includeInstance, f),
    jobStatistics: (f = msg.getJobStatistics()) && proto.google.cloud.bigquery.logging.v1.JobStatistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.Job.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.Job;
  return proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.Job} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.Job}
 */
proto.google.cloud.bigquery.logging.v1.Job.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.JobName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobName.deserializeBinaryFromReader);
      msg.setJobName(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.JobConfiguration;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobConfiguration.deserializeBinaryFromReader);
      msg.setJobConfiguration(value);
      break;
    case 3:
      var value = new proto.google.cloud.bigquery.logging.v1.JobStatus;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobStatus.deserializeBinaryFromReader);
      msg.setJobStatus(value);
      break;
    case 4:
      var value = new proto.google.cloud.bigquery.logging.v1.JobStatistics;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobStatistics.deserializeBinaryFromReader);
      msg.setJobStatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.Job} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.Job.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.JobName.serializeBinaryToWriter
    );
  }
  f = message.getJobConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.JobConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getJobStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.cloud.bigquery.logging.v1.JobStatus.serializeBinaryToWriter
    );
  }
  f = message.getJobStatistics();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.cloud.bigquery.logging.v1.JobStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional JobName job_name = 1;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobName}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.getJobName = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobName, 1));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
*/
proto.google.cloud.bigquery.logging.v1.Job.prototype.setJobName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.clearJobName = function() {
  return this.setJobName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.hasJobName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JobConfiguration job_configuration = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobConfiguration}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.getJobConfiguration = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobConfiguration, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobConfiguration|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
*/
proto.google.cloud.bigquery.logging.v1.Job.prototype.setJobConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.clearJobConfiguration = function() {
  return this.setJobConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.hasJobConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional JobStatus job_status = 3;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobStatus}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.getJobStatus = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobStatus} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobStatus, 3));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobStatus|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
*/
proto.google.cloud.bigquery.logging.v1.Job.prototype.setJobStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.clearJobStatus = function() {
  return this.setJobStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.hasJobStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional JobStatistics job_statistics = 4;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobStatistics}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.getJobStatistics = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobStatistics} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobStatistics, 4));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobStatistics|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
*/
proto.google.cloud.bigquery.logging.v1.Job.prototype.setJobStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.Job} returns this
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.clearJobStatistics = function() {
  return this.setJobStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.Job.prototype.hasJobStatistics = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.oneofGroups_ = [[5,6,7,8]];

/**
 * @enum {number}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.ConfigurationCase = {
  CONFIGURATION_NOT_SET: 0,
  QUERY: 5,
  LOAD: 6,
  EXTRACT: 7,
  TABLE_COPY: 8
};

/**
 * @return {proto.google.cloud.bigquery.logging.v1.JobConfiguration.ConfigurationCase}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.getConfigurationCase = function() {
  return /** @type {proto.google.cloud.bigquery.logging.v1.JobConfiguration.ConfigurationCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.bigquery.logging.v1.JobConfiguration.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.toObject(includeInstance, f),
    load: (f = msg.getLoad()) && proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.toObject(includeInstance, f),
    extract: (f = msg.getExtract()) && proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.toObject(includeInstance, f),
    tableCopy: (f = msg.getTableCopy()) && proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.toObject(includeInstance, f),
    dryRun: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobConfiguration;
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 6:
      var value = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.deserializeBinaryFromReader);
      msg.setLoad(value);
      break;
    case 7:
      var value = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.deserializeBinaryFromReader);
      msg.setExtract(value);
      break;
    case 8:
      var value = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.deserializeBinaryFromReader);
      msg.setTableCopy(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDryRun(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.serializeBinaryToWriter
    );
  }
  f = message.getLoad();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.serializeBinaryToWriter
    );
  }
  f = message.getExtract();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.serializeBinaryToWriter
    );
  }
  f = message.getTableCopy();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.serializeBinaryToWriter
    );
  }
  f = message.getDryRun();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationTable: (f = msg.getDestinationTable()) && proto.google.cloud.bigquery.logging.v1.TableName.toObject(includeInstance, f),
    createDisposition: jspb.Message.getFieldWithDefault(msg, 3, ""),
    writeDisposition: jspb.Message.getFieldWithDefault(msg, 4, ""),
    defaultDataset: (f = msg.getDefaultDataset()) && proto.google.cloud.bigquery.logging.v1.DatasetName.toObject(includeInstance, f),
    tableDefinitionsList: jspb.Message.toObjectList(msg.getTableDefinitionsList(),
    proto.google.cloud.bigquery.logging.v1.TableDefinition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query;
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.TableName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader);
      msg.setDestinationTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDisposition(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDisposition(value);
      break;
    case 5:
      var value = new proto.google.cloud.bigquery.logging.v1.DatasetName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.DatasetName.deserializeBinaryFromReader);
      msg.setDefaultDataset(value);
      break;
    case 6:
      var value = new proto.google.cloud.bigquery.logging.v1.TableDefinition;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableDefinition.deserializeBinaryFromReader);
      msg.addTableDefinitions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationTable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter
    );
  }
  f = message.getCreateDisposition();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWriteDisposition();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDefaultDataset();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.cloud.bigquery.logging.v1.DatasetName.serializeBinaryToWriter
    );
  }
  f = message.getTableDefinitionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.google.cloud.bigquery.logging.v1.TableDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TableName destination_table = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.getDestinationTable = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableName, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.setDestinationTable = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.clearDestinationTable = function() {
  return this.setDestinationTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.hasDestinationTable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string create_disposition = 3;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.getCreateDisposition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.setCreateDisposition = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string write_disposition = 4;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.getWriteDisposition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.setWriteDisposition = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional DatasetName default_dataset = 5;
 * @return {?proto.google.cloud.bigquery.logging.v1.DatasetName}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.getDefaultDataset = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.DatasetName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.DatasetName, 5));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.DatasetName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.setDefaultDataset = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.clearDefaultDataset = function() {
  return this.setDefaultDataset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.hasDefaultDataset = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated TableDefinition table_definitions = 6;
 * @return {!Array<!proto.google.cloud.bigquery.logging.v1.TableDefinition>}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.getTableDefinitionsList = function() {
  return /** @type{!Array<!proto.google.cloud.bigquery.logging.v1.TableDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableDefinition, 6));
};


/**
 * @param {!Array<!proto.google.cloud.bigquery.logging.v1.TableDefinition>} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.setTableDefinitionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.cloud.bigquery.logging.v1.TableDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDefinition}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.addTableDefinitions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.cloud.bigquery.logging.v1.TableDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query.prototype.clearTableDefinitionsList = function() {
  return this.setTableDefinitionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceUrisList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    schemaJson: jspb.Message.getFieldWithDefault(msg, 6, ""),
    destinationTable: (f = msg.getDestinationTable()) && proto.google.cloud.bigquery.logging.v1.TableName.toObject(includeInstance, f),
    createDisposition: jspb.Message.getFieldWithDefault(msg, 4, ""),
    writeDisposition: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load;
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSourceUris(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaJson(value);
      break;
    case 3:
      var value = new proto.google.cloud.bigquery.logging.v1.TableName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader);
      msg.setDestinationTable(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDisposition(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDisposition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceUrisList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSchemaJson();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDestinationTable();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter
    );
  }
  f = message.getCreateDisposition();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWriteDisposition();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated string source_uris = 1;
 * @return {!Array<string>}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.getSourceUrisList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.setSourceUrisList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.addSourceUris = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.clearSourceUrisList = function() {
  return this.setSourceUrisList([]);
};


/**
 * optional string schema_json = 6;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.getSchemaJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.setSchemaJson = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional TableName destination_table = 3;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.getDestinationTable = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableName, 3));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.setDestinationTable = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.clearDestinationTable = function() {
  return this.setDestinationTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.hasDestinationTable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string create_disposition = 4;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.getCreateDisposition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.setCreateDisposition = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string write_disposition = 5;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.getWriteDisposition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load.prototype.setWriteDisposition = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationUrisList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourceTable: (f = msg.getSourceTable()) && proto.google.cloud.bigquery.logging.v1.TableName.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract;
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDestinationUris(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.TableName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader);
      msg.setSourceTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationUrisList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourceTable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string destination_uris = 1;
 * @return {!Array<string>}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.getDestinationUrisList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.setDestinationUrisList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.addDestinationUris = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.clearDestinationUrisList = function() {
  return this.setDestinationUrisList([]);
};


/**
 * optional TableName source_table = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.getSourceTable = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableName, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.setSourceTable = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.clearSourceTable = function() {
  return this.setSourceTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.prototype.hasSourceTable = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceTablesList: jspb.Message.toObjectList(msg.getSourceTablesList(),
    proto.google.cloud.bigquery.logging.v1.TableName.toObject, includeInstance),
    destinationTable: (f = msg.getDestinationTable()) && proto.google.cloud.bigquery.logging.v1.TableName.toObject(includeInstance, f),
    createDisposition: jspb.Message.getFieldWithDefault(msg, 3, ""),
    writeDisposition: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy;
  return proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.bigquery.logging.v1.TableName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader);
      msg.addSourceTables(value);
      break;
    case 2:
      var value = new proto.google.cloud.bigquery.logging.v1.TableName;
      reader.readMessage(value,proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader);
      msg.setDestinationTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateDisposition(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteDisposition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceTablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter
    );
  }
  f = message.getDestinationTable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter
    );
  }
  f = message.getCreateDisposition();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWriteDisposition();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated TableName source_tables = 1;
 * @return {!Array<!proto.google.cloud.bigquery.logging.v1.TableName>}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.getSourceTablesList = function() {
  return /** @type{!Array<!proto.google.cloud.bigquery.logging.v1.TableName>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableName, 1));
};


/**
 * @param {!Array<!proto.google.cloud.bigquery.logging.v1.TableName>} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.setSourceTablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.bigquery.logging.v1.TableName=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.addSourceTables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.bigquery.logging.v1.TableName, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.clearSourceTablesList = function() {
  return this.setSourceTablesList([]);
};


/**
 * optional TableName destination_table = 2;
 * @return {?proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.getDestinationTable = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.TableName} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.TableName, 2));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.TableName|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.setDestinationTable = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.clearDestinationTable = function() {
  return this.setDestinationTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.hasDestinationTable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string create_disposition = 3;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.getCreateDisposition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.setCreateDisposition = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string write_disposition = 4;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.getWriteDisposition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.prototype.setWriteDisposition = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Query query = 5;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.getQuery = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query, 5));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Query|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.google.cloud.bigquery.logging.v1.JobConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Load load = 6;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.getLoad = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load, 6));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Load|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.setLoad = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.google.cloud.bigquery.logging.v1.JobConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.clearLoad = function() {
  return this.setLoad(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.hasLoad = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Extract extract = 7;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.getExtract = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract, 7));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.Extract|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.setExtract = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.google.cloud.bigquery.logging.v1.JobConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.clearExtract = function() {
  return this.setExtract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.hasExtract = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TableCopy table_copy = 8;
 * @return {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.getTableCopy = function() {
  return /** @type{?proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy, 8));
};


/**
 * @param {?proto.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.setTableCopy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.google.cloud.bigquery.logging.v1.JobConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.clearTableCopy = function() {
  return this.setTableCopy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.hasTableCopy = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool dry_run = 9;
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.getDryRun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobConfiguration} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobConfiguration.prototype.setDryRun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceUrisList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDefinition}
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableDefinition;
  return proto.google.cloud.bigquery.logging.v1.TableDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDefinition}
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSourceUris(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceUrisList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDefinition} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string source_uris = 2;
 * @return {!Array<string>}
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.getSourceUrisList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDefinition} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.setSourceUrisList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDefinition} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.addSourceUris = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableDefinition} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableDefinition.prototype.clearSourceUrisList = function() {
  return this.setSourceUrisList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatus}
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobStatus;
  return proto.google.cloud.bigquery.logging.v1.JobStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatus}
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatus} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.rpc.Status error = 2;
 * @return {?proto.google.rpc.Status}
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.getError = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 2));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatus} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatus} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobStatus.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    totalProcessedBytes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalBilledBytes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    billingTier: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobStatistics;
  return proto.google.cloud.bigquery.logging.v1.JobStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalProcessedBytes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalBilledBytes(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBillingTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTotalProcessedBytes();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTotalBilledBytes();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getBillingTier();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp create_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp start_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
*/
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 total_processed_bytes = 4;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.getTotalProcessedBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.setTotalProcessedBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 total_billed_bytes = 5;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.getTotalBilledBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.setTotalBilledBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 billing_tier = 7;
 * @return {number}
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.getBillingTier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobStatistics} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobStatistics.prototype.setBillingTier = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.DatasetName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    datasetId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetName}
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.DatasetName;
  return proto.google.cloud.bigquery.logging.v1.DatasetName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetName}
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.DatasetName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.DatasetName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatasetId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetName} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dataset_id = 2;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.prototype.getDatasetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.DatasetName} returns this
 */
proto.google.cloud.bigquery.logging.v1.DatasetName.prototype.setDatasetId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.TableName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.TableName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableName.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    datasetId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tableId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.TableName;
  return proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.TableName}
 */
proto.google.cloud.bigquery.logging.v1.TableName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.TableName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.TableName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatasetId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTableId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableName} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dataset_id = 2;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.getDatasetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableName} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.setDatasetId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string table_id = 3;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.getTableId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.TableName} returns this
 */
proto.google.cloud.bigquery.logging.v1.TableName.prototype.setTableId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.bigquery.logging.v1.JobName.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.bigquery.logging.v1.JobName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.bigquery.logging.v1.JobName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobName.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    jobId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobName}
 */
proto.google.cloud.bigquery.logging.v1.JobName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.bigquery.logging.v1.JobName;
  return proto.google.cloud.bigquery.logging.v1.JobName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.bigquery.logging.v1.JobName}
 */
proto.google.cloud.bigquery.logging.v1.JobName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.bigquery.logging.v1.JobName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.bigquery.logging.v1.JobName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.bigquery.logging.v1.JobName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.bigquery.logging.v1.JobName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJobId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobName.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobName} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobName.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string job_id = 2;
 * @return {string}
 */
proto.google.cloud.bigquery.logging.v1.JobName.prototype.getJobId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.cloud.bigquery.logging.v1.JobName} returns this
 */
proto.google.cloud.bigquery.logging.v1.JobName.prototype.setJobId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.google.cloud.bigquery.logging.v1);
