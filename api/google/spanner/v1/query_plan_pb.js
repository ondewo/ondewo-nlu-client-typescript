// source: google/spanner/v1/query_plan.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.google.spanner.v1.PlanNode', null, global);
goog.exportSymbol('proto.google.spanner.v1.PlanNode.ChildLink', null, global);
goog.exportSymbol('proto.google.spanner.v1.PlanNode.Kind', null, global);
goog.exportSymbol('proto.google.spanner.v1.PlanNode.ShortRepresentation', null, global);
goog.exportSymbol('proto.google.spanner.v1.QueryPlan', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.spanner.v1.PlanNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.spanner.v1.PlanNode.repeatedFields_, null);
};
goog.inherits(proto.google.spanner.v1.PlanNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.spanner.v1.PlanNode.displayName = 'proto.google.spanner.v1.PlanNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.spanner.v1.PlanNode.ChildLink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.spanner.v1.PlanNode.ChildLink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.spanner.v1.PlanNode.ChildLink.displayName = 'proto.google.spanner.v1.PlanNode.ChildLink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.spanner.v1.PlanNode.ShortRepresentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.spanner.v1.PlanNode.ShortRepresentation.displayName = 'proto.google.spanner.v1.PlanNode.ShortRepresentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.spanner.v1.QueryPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.spanner.v1.QueryPlan.repeatedFields_, null);
};
goog.inherits(proto.google.spanner.v1.QueryPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.spanner.v1.QueryPlan.displayName = 'proto.google.spanner.v1.QueryPlan';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.spanner.v1.PlanNode.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.spanner.v1.PlanNode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.spanner.v1.PlanNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.spanner.v1.PlanNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.PlanNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    childLinksList: jspb.Message.toObjectList(msg.getChildLinksList(),
    proto.google.spanner.v1.PlanNode.ChildLink.toObject, includeInstance),
    shortRepresentation: (f = msg.getShortRepresentation()) && proto.google.spanner.v1.PlanNode.ShortRepresentation.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    executionStats: (f = msg.getExecutionStats()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.spanner.v1.PlanNode}
 */
proto.google.spanner.v1.PlanNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.spanner.v1.PlanNode;
  return proto.google.spanner.v1.PlanNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.spanner.v1.PlanNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.spanner.v1.PlanNode}
 */
proto.google.spanner.v1.PlanNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {!proto.google.spanner.v1.PlanNode.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = new proto.google.spanner.v1.PlanNode.ChildLink;
      reader.readMessage(value,proto.google.spanner.v1.PlanNode.ChildLink.deserializeBinaryFromReader);
      msg.addChildLinks(value);
      break;
    case 5:
      var value = new proto.google.spanner.v1.PlanNode.ShortRepresentation;
      reader.readMessage(value,proto.google.spanner.v1.PlanNode.ShortRepresentation.deserializeBinaryFromReader);
      msg.setShortRepresentation(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 7:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExecutionStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.spanner.v1.PlanNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.spanner.v1.PlanNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.spanner.v1.PlanNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.PlanNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChildLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.spanner.v1.PlanNode.ChildLink.serializeBinaryToWriter
    );
  }
  f = message.getShortRepresentation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.spanner.v1.PlanNode.ShortRepresentation.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getExecutionStats();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.spanner.v1.PlanNode.Kind = {
  KIND_UNSPECIFIED: 0,
  RELATIONAL: 1,
  SCALAR: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.toObject = function(opt_includeInstance) {
  return proto.google.spanner.v1.PlanNode.ChildLink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.spanner.v1.PlanNode.ChildLink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.PlanNode.ChildLink.toObject = function(includeInstance, msg) {
  var f, obj = {
    childIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    variable: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.spanner.v1.PlanNode.ChildLink}
 */
proto.google.spanner.v1.PlanNode.ChildLink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.spanner.v1.PlanNode.ChildLink;
  return proto.google.spanner.v1.PlanNode.ChildLink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.spanner.v1.PlanNode.ChildLink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.spanner.v1.PlanNode.ChildLink}
 */
proto.google.spanner.v1.PlanNode.ChildLink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChildIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.spanner.v1.PlanNode.ChildLink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.spanner.v1.PlanNode.ChildLink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.PlanNode.ChildLink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChildIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVariable();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 child_index = 1;
 * @return {number}
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.getChildIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.spanner.v1.PlanNode.ChildLink} returns this
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.setChildIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.spanner.v1.PlanNode.ChildLink} returns this
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string variable = 3;
 * @return {string}
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.getVariable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.spanner.v1.PlanNode.ChildLink} returns this
 */
proto.google.spanner.v1.PlanNode.ChildLink.prototype.setVariable = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.prototype.toObject = function(opt_includeInstance) {
  return proto.google.spanner.v1.PlanNode.ShortRepresentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.spanner.v1.PlanNode.ShortRepresentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subqueriesMap: (f = msg.getSubqueriesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.spanner.v1.PlanNode.ShortRepresentation}
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.spanner.v1.PlanNode.ShortRepresentation;
  return proto.google.spanner.v1.PlanNode.ShortRepresentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.spanner.v1.PlanNode.ShortRepresentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.spanner.v1.PlanNode.ShortRepresentation}
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = msg.getSubqueriesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.spanner.v1.PlanNode.ShortRepresentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.spanner.v1.PlanNode.ShortRepresentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubqueriesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.spanner.v1.PlanNode.ShortRepresentation} returns this
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, int32> subqueries = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.prototype.getSubqueriesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.spanner.v1.PlanNode.ShortRepresentation} returns this
 */
proto.google.spanner.v1.PlanNode.ShortRepresentation.prototype.clearSubqueriesMap = function() {
  this.getSubqueriesMap().clear();
  return this;};


/**
 * optional int32 index = 1;
 * @return {number}
 */
proto.google.spanner.v1.PlanNode.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.spanner.v1.PlanNode} returns this
 */
proto.google.spanner.v1.PlanNode.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Kind kind = 2;
 * @return {!proto.google.spanner.v1.PlanNode.Kind}
 */
proto.google.spanner.v1.PlanNode.prototype.getKind = function() {
  return /** @type {!proto.google.spanner.v1.PlanNode.Kind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.spanner.v1.PlanNode.Kind} value
 * @return {!proto.google.spanner.v1.PlanNode} returns this
 */
proto.google.spanner.v1.PlanNode.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.google.spanner.v1.PlanNode.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.spanner.v1.PlanNode} returns this
 */
proto.google.spanner.v1.PlanNode.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ChildLink child_links = 4;
 * @return {!Array<!proto.google.spanner.v1.PlanNode.ChildLink>}
 */
proto.google.spanner.v1.PlanNode.prototype.getChildLinksList = function() {
  return /** @type{!Array<!proto.google.spanner.v1.PlanNode.ChildLink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.spanner.v1.PlanNode.ChildLink, 4));
};


/**
 * @param {!Array<!proto.google.spanner.v1.PlanNode.ChildLink>} value
 * @return {!proto.google.spanner.v1.PlanNode} returns this
*/
proto.google.spanner.v1.PlanNode.prototype.setChildLinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.spanner.v1.PlanNode.ChildLink=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.spanner.v1.PlanNode.ChildLink}
 */
proto.google.spanner.v1.PlanNode.prototype.addChildLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.spanner.v1.PlanNode.ChildLink, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.spanner.v1.PlanNode} returns this
 */
proto.google.spanner.v1.PlanNode.prototype.clearChildLinksList = function() {
  return this.setChildLinksList([]);
};


/**
 * optional ShortRepresentation short_representation = 5;
 * @return {?proto.google.spanner.v1.PlanNode.ShortRepresentation}
 */
proto.google.spanner.v1.PlanNode.prototype.getShortRepresentation = function() {
  return /** @type{?proto.google.spanner.v1.PlanNode.ShortRepresentation} */ (
    jspb.Message.getWrapperField(this, proto.google.spanner.v1.PlanNode.ShortRepresentation, 5));
};


/**
 * @param {?proto.google.spanner.v1.PlanNode.ShortRepresentation|undefined} value
 * @return {!proto.google.spanner.v1.PlanNode} returns this
*/
proto.google.spanner.v1.PlanNode.prototype.setShortRepresentation = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.spanner.v1.PlanNode} returns this
 */
proto.google.spanner.v1.PlanNode.prototype.clearShortRepresentation = function() {
  return this.setShortRepresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.spanner.v1.PlanNode.prototype.hasShortRepresentation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Struct metadata = 6;
 * @return {?proto.google.protobuf.Struct}
 */
proto.google.spanner.v1.PlanNode.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 6));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.google.spanner.v1.PlanNode} returns this
*/
proto.google.spanner.v1.PlanNode.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.spanner.v1.PlanNode} returns this
 */
proto.google.spanner.v1.PlanNode.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.spanner.v1.PlanNode.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Struct execution_stats = 7;
 * @return {?proto.google.protobuf.Struct}
 */
proto.google.spanner.v1.PlanNode.prototype.getExecutionStats = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 7));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.google.spanner.v1.PlanNode} returns this
*/
proto.google.spanner.v1.PlanNode.prototype.setExecutionStats = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.spanner.v1.PlanNode} returns this
 */
proto.google.spanner.v1.PlanNode.prototype.clearExecutionStats = function() {
  return this.setExecutionStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.spanner.v1.PlanNode.prototype.hasExecutionStats = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.spanner.v1.QueryPlan.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.spanner.v1.QueryPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.google.spanner.v1.QueryPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.spanner.v1.QueryPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.QueryPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    planNodesList: jspb.Message.toObjectList(msg.getPlanNodesList(),
    proto.google.spanner.v1.PlanNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.spanner.v1.QueryPlan}
 */
proto.google.spanner.v1.QueryPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.spanner.v1.QueryPlan;
  return proto.google.spanner.v1.QueryPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.spanner.v1.QueryPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.spanner.v1.QueryPlan}
 */
proto.google.spanner.v1.QueryPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.spanner.v1.PlanNode;
      reader.readMessage(value,proto.google.spanner.v1.PlanNode.deserializeBinaryFromReader);
      msg.addPlanNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.spanner.v1.QueryPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.spanner.v1.QueryPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.spanner.v1.QueryPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.spanner.v1.QueryPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlanNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.spanner.v1.PlanNode.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PlanNode plan_nodes = 1;
 * @return {!Array<!proto.google.spanner.v1.PlanNode>}
 */
proto.google.spanner.v1.QueryPlan.prototype.getPlanNodesList = function() {
  return /** @type{!Array<!proto.google.spanner.v1.PlanNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.spanner.v1.PlanNode, 1));
};


/**
 * @param {!Array<!proto.google.spanner.v1.PlanNode>} value
 * @return {!proto.google.spanner.v1.QueryPlan} returns this
*/
proto.google.spanner.v1.QueryPlan.prototype.setPlanNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.spanner.v1.PlanNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.spanner.v1.PlanNode}
 */
proto.google.spanner.v1.QueryPlan.prototype.addPlanNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.spanner.v1.PlanNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.spanner.v1.QueryPlan} returns this
 */
proto.google.spanner.v1.QueryPlan.prototype.clearPlanNodesList = function() {
  return this.setPlanNodesList([]);
};


goog.object.extend(exports, proto.google.spanner.v1);
