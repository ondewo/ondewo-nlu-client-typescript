// source: google/streetview/publish/v1/rpcmessages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_rpc_status_pb = require('../../../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
var google_streetview_publish_v1_resources_pb = require('../../../../google/streetview/publish/v1/resources_pb.js');
goog.object.extend(proto, google_streetview_publish_v1_resources_pb);
goog.exportSymbol('proto.google.streetview.publish.v1.BatchDeletePhotosRequest', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.BatchDeletePhotosResponse', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.BatchGetPhotosRequest', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.BatchGetPhotosResponse', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.BatchUpdatePhotosRequest', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.BatchUpdatePhotosResponse', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.CreatePhotoRequest', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.DeletePhotoRequest', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.GetPhotoRequest', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.ListPhotosRequest', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.ListPhotosResponse', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.PhotoResponse', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.PhotoView', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.UpdatePhotoRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.CreatePhotoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.CreatePhotoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.CreatePhotoRequest.displayName = 'proto.google.streetview.publish.v1.CreatePhotoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.GetPhotoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.GetPhotoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.GetPhotoRequest.displayName = 'proto.google.streetview.publish.v1.GetPhotoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.BatchGetPhotosRequest.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.BatchGetPhotosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.BatchGetPhotosRequest.displayName = 'proto.google.streetview.publish.v1.BatchGetPhotosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.BatchGetPhotosResponse.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.BatchGetPhotosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.BatchGetPhotosResponse.displayName = 'proto.google.streetview.publish.v1.BatchGetPhotosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.PhotoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.PhotoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.PhotoResponse.displayName = 'proto.google.streetview.publish.v1.PhotoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.ListPhotosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.ListPhotosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.ListPhotosRequest.displayName = 'proto.google.streetview.publish.v1.ListPhotosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.ListPhotosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.ListPhotosResponse.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.ListPhotosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.ListPhotosResponse.displayName = 'proto.google.streetview.publish.v1.ListPhotosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.UpdatePhotoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.UpdatePhotoRequest.displayName = 'proto.google.streetview.publish.v1.UpdatePhotoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.BatchUpdatePhotosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.displayName = 'proto.google.streetview.publish.v1.BatchUpdatePhotosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.BatchUpdatePhotosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.displayName = 'proto.google.streetview.publish.v1.BatchUpdatePhotosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.DeletePhotoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.DeletePhotoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.DeletePhotoRequest.displayName = 'proto.google.streetview.publish.v1.DeletePhotoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.BatchDeletePhotosRequest.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.BatchDeletePhotosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.BatchDeletePhotosRequest.displayName = 'proto.google.streetview.publish.v1.BatchDeletePhotosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.BatchDeletePhotosResponse.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.BatchDeletePhotosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.BatchDeletePhotosResponse.displayName = 'proto.google.streetview.publish.v1.BatchDeletePhotosResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.CreatePhotoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.CreatePhotoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    photo: (f = msg.getPhoto()) && google_streetview_publish_v1_resources_pb.Photo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.CreatePhotoRequest}
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.CreatePhotoRequest;
  return proto.google.streetview.publish.v1.CreatePhotoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.CreatePhotoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.CreatePhotoRequest}
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_streetview_publish_v1_resources_pb.Photo;
      reader.readMessage(value,google_streetview_publish_v1_resources_pb.Photo.deserializeBinaryFromReader);
      msg.setPhoto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.CreatePhotoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.CreatePhotoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhoto();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_streetview_publish_v1_resources_pb.Photo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Photo photo = 1;
 * @return {?proto.google.streetview.publish.v1.Photo}
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.prototype.getPhoto = function() {
  return /** @type{?proto.google.streetview.publish.v1.Photo} */ (
    jspb.Message.getWrapperField(this, google_streetview_publish_v1_resources_pb.Photo, 1));
};


/**
 * @param {?proto.google.streetview.publish.v1.Photo|undefined} value
 * @return {!proto.google.streetview.publish.v1.CreatePhotoRequest} returns this
*/
proto.google.streetview.publish.v1.CreatePhotoRequest.prototype.setPhoto = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.CreatePhotoRequest} returns this
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.prototype.clearPhoto = function() {
  return this.setPhoto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.CreatePhotoRequest.prototype.hasPhoto = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.GetPhotoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.GetPhotoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.GetPhotoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.GetPhotoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    photoId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    view: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.GetPhotoRequest}
 */
proto.google.streetview.publish.v1.GetPhotoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.GetPhotoRequest;
  return proto.google.streetview.publish.v1.GetPhotoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.GetPhotoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.GetPhotoRequest}
 */
proto.google.streetview.publish.v1.GetPhotoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhotoId(value);
      break;
    case 2:
      var value = /** @type {!proto.google.streetview.publish.v1.PhotoView} */ (reader.readEnum());
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.GetPhotoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.GetPhotoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.GetPhotoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.GetPhotoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotoId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string photo_id = 1;
 * @return {string}
 */
proto.google.streetview.publish.v1.GetPhotoRequest.prototype.getPhotoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.GetPhotoRequest} returns this
 */
proto.google.streetview.publish.v1.GetPhotoRequest.prototype.setPhotoId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PhotoView view = 2;
 * @return {!proto.google.streetview.publish.v1.PhotoView}
 */
proto.google.streetview.publish.v1.GetPhotoRequest.prototype.getView = function() {
  return /** @type {!proto.google.streetview.publish.v1.PhotoView} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.streetview.publish.v1.PhotoView} value
 * @return {!proto.google.streetview.publish.v1.GetPhotoRequest} returns this
 */
proto.google.streetview.publish.v1.GetPhotoRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.BatchGetPhotosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.BatchGetPhotosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    photoIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    view: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosRequest}
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.BatchGetPhotosRequest;
  return proto.google.streetview.publish.v1.BatchGetPhotosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.BatchGetPhotosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosRequest}
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhotoIds(value);
      break;
    case 2:
      var value = /** @type {!proto.google.streetview.publish.v1.PhotoView} */ (reader.readEnum());
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.BatchGetPhotosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.BatchGetPhotosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotoIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * repeated string photo_ids = 1;
 * @return {!Array<string>}
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.getPhotoIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.setPhotoIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.addPhotoIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.clearPhotoIdsList = function() {
  return this.setPhotoIdsList([]);
};


/**
 * optional PhotoView view = 2;
 * @return {!proto.google.streetview.publish.v1.PhotoView}
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.getView = function() {
  return /** @type {!proto.google.streetview.publish.v1.PhotoView} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.streetview.publish.v1.PhotoView} value
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchGetPhotosRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.BatchGetPhotosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.BatchGetPhotosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.google.streetview.publish.v1.PhotoResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosResponse}
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.BatchGetPhotosResponse;
  return proto.google.streetview.publish.v1.BatchGetPhotosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.BatchGetPhotosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosResponse}
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.streetview.publish.v1.PhotoResponse;
      reader.readMessage(value,proto.google.streetview.publish.v1.PhotoResponse.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.BatchGetPhotosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.BatchGetPhotosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.streetview.publish.v1.PhotoResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PhotoResponse results = 1;
 * @return {!Array<!proto.google.streetview.publish.v1.PhotoResponse>}
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.google.streetview.publish.v1.PhotoResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.streetview.publish.v1.PhotoResponse, 1));
};


/**
 * @param {!Array<!proto.google.streetview.publish.v1.PhotoResponse>} value
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosResponse} returns this
*/
proto.google.streetview.publish.v1.BatchGetPhotosResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.streetview.publish.v1.PhotoResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.PhotoResponse}
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.streetview.publish.v1.PhotoResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.BatchGetPhotosResponse} returns this
 */
proto.google.streetview.publish.v1.BatchGetPhotosResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.PhotoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.PhotoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.PhotoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    photo: (f = msg.getPhoto()) && google_streetview_publish_v1_resources_pb.Photo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.PhotoResponse}
 */
proto.google.streetview.publish.v1.PhotoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.PhotoResponse;
  return proto.google.streetview.publish.v1.PhotoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.PhotoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.PhotoResponse}
 */
proto.google.streetview.publish.v1.PhotoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new google_streetview_publish_v1_resources_pb.Photo;
      reader.readMessage(value,google_streetview_publish_v1_resources_pb.Photo.deserializeBinaryFromReader);
      msg.setPhoto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.PhotoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.PhotoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.PhotoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getPhoto();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_streetview_publish_v1_resources_pb.Photo.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.google.streetview.publish.v1.PhotoResponse} returns this
*/
proto.google.streetview.publish.v1.PhotoResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.PhotoResponse} returns this
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Photo photo = 2;
 * @return {?proto.google.streetview.publish.v1.Photo}
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.getPhoto = function() {
  return /** @type{?proto.google.streetview.publish.v1.Photo} */ (
    jspb.Message.getWrapperField(this, google_streetview_publish_v1_resources_pb.Photo, 2));
};


/**
 * @param {?proto.google.streetview.publish.v1.Photo|undefined} value
 * @return {!proto.google.streetview.publish.v1.PhotoResponse} returns this
*/
proto.google.streetview.publish.v1.PhotoResponse.prototype.setPhoto = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.PhotoResponse} returns this
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.clearPhoto = function() {
  return this.setPhoto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.PhotoResponse.prototype.hasPhoto = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.ListPhotosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.ListPhotosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.ListPhotosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    view: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.ListPhotosRequest}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.ListPhotosRequest;
  return proto.google.streetview.publish.v1.ListPhotosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.ListPhotosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.ListPhotosRequest}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.streetview.publish.v1.PhotoView} */ (reader.readEnum());
      msg.setView(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.ListPhotosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.ListPhotosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.ListPhotosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional PhotoView view = 1;
 * @return {!proto.google.streetview.publish.v1.PhotoView}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.getView = function() {
  return /** @type {!proto.google.streetview.publish.v1.PhotoView} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.streetview.publish.v1.PhotoView} value
 * @return {!proto.google.streetview.publish.v1.ListPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.streetview.publish.v1.ListPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.ListPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string filter = 4;
 * @return {string}
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.ListPhotosRequest} returns this
 */
proto.google.streetview.publish.v1.ListPhotosRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.ListPhotosResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.ListPhotosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.ListPhotosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.ListPhotosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    photosList: jspb.Message.toObjectList(msg.getPhotosList(),
    google_streetview_publish_v1_resources_pb.Photo.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.ListPhotosResponse}
 */
proto.google.streetview.publish.v1.ListPhotosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.ListPhotosResponse;
  return proto.google.streetview.publish.v1.ListPhotosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.ListPhotosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.ListPhotosResponse}
 */
proto.google.streetview.publish.v1.ListPhotosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_streetview_publish_v1_resources_pb.Photo;
      reader.readMessage(value,google_streetview_publish_v1_resources_pb.Photo.deserializeBinaryFromReader);
      msg.addPhotos(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.ListPhotosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.ListPhotosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.ListPhotosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_streetview_publish_v1_resources_pb.Photo.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Photo photos = 1;
 * @return {!Array<!proto.google.streetview.publish.v1.Photo>}
 */
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.getPhotosList = function() {
  return /** @type{!Array<!proto.google.streetview.publish.v1.Photo>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_streetview_publish_v1_resources_pb.Photo, 1));
};


/**
 * @param {!Array<!proto.google.streetview.publish.v1.Photo>} value
 * @return {!proto.google.streetview.publish.v1.ListPhotosResponse} returns this
*/
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.setPhotosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.streetview.publish.v1.Photo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.Photo}
 */
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.addPhotos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.streetview.publish.v1.Photo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.ListPhotosResponse} returns this
 */
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.ListPhotosResponse} returns this
 */
proto.google.streetview.publish.v1.ListPhotosResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.UpdatePhotoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.UpdatePhotoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    photo: (f = msg.getPhoto()) && google_streetview_publish_v1_resources_pb.Photo.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.UpdatePhotoRequest}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.UpdatePhotoRequest;
  return proto.google.streetview.publish.v1.UpdatePhotoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.UpdatePhotoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.UpdatePhotoRequest}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_streetview_publish_v1_resources_pb.Photo;
      reader.readMessage(value,google_streetview_publish_v1_resources_pb.Photo.deserializeBinaryFromReader);
      msg.setPhoto(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.UpdatePhotoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.UpdatePhotoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhoto();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_streetview_publish_v1_resources_pb.Photo.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional Photo photo = 1;
 * @return {?proto.google.streetview.publish.v1.Photo}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.getPhoto = function() {
  return /** @type{?proto.google.streetview.publish.v1.Photo} */ (
    jspb.Message.getWrapperField(this, google_streetview_publish_v1_resources_pb.Photo, 1));
};


/**
 * @param {?proto.google.streetview.publish.v1.Photo|undefined} value
 * @return {!proto.google.streetview.publish.v1.UpdatePhotoRequest} returns this
*/
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.setPhoto = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.UpdatePhotoRequest} returns this
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.clearPhoto = function() {
  return this.setPhoto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.hasPhoto = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.google.streetview.publish.v1.UpdatePhotoRequest} returns this
*/
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.UpdatePhotoRequest} returns this
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.UpdatePhotoRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.BatchUpdatePhotosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatePhotoRequestsList: jspb.Message.toObjectList(msg.getUpdatePhotoRequestsList(),
    proto.google.streetview.publish.v1.UpdatePhotoRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosRequest}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.BatchUpdatePhotosRequest;
  return proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.BatchUpdatePhotosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosRequest}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.streetview.publish.v1.UpdatePhotoRequest;
      reader.readMessage(value,proto.google.streetview.publish.v1.UpdatePhotoRequest.deserializeBinaryFromReader);
      msg.addUpdatePhotoRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.BatchUpdatePhotosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatePhotoRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.streetview.publish.v1.UpdatePhotoRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpdatePhotoRequest update_photo_requests = 1;
 * @return {!Array<!proto.google.streetview.publish.v1.UpdatePhotoRequest>}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.prototype.getUpdatePhotoRequestsList = function() {
  return /** @type{!Array<!proto.google.streetview.publish.v1.UpdatePhotoRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.streetview.publish.v1.UpdatePhotoRequest, 1));
};


/**
 * @param {!Array<!proto.google.streetview.publish.v1.UpdatePhotoRequest>} value
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosRequest} returns this
*/
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.prototype.setUpdatePhotoRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.streetview.publish.v1.UpdatePhotoRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.UpdatePhotoRequest}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.prototype.addUpdatePhotoRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.streetview.publish.v1.UpdatePhotoRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosRequest.prototype.clearUpdatePhotoRequestsList = function() {
  return this.setUpdatePhotoRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.BatchUpdatePhotosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.google.streetview.publish.v1.PhotoResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosResponse}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.BatchUpdatePhotosResponse;
  return proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.BatchUpdatePhotosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosResponse}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.streetview.publish.v1.PhotoResponse;
      reader.readMessage(value,proto.google.streetview.publish.v1.PhotoResponse.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.BatchUpdatePhotosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.streetview.publish.v1.PhotoResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PhotoResponse results = 1;
 * @return {!Array<!proto.google.streetview.publish.v1.PhotoResponse>}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.google.streetview.publish.v1.PhotoResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.streetview.publish.v1.PhotoResponse, 1));
};


/**
 * @param {!Array<!proto.google.streetview.publish.v1.PhotoResponse>} value
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosResponse} returns this
*/
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.streetview.publish.v1.PhotoResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.PhotoResponse}
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.streetview.publish.v1.PhotoResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.BatchUpdatePhotosResponse} returns this
 */
proto.google.streetview.publish.v1.BatchUpdatePhotosResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.DeletePhotoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.DeletePhotoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    photoId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.DeletePhotoRequest}
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.DeletePhotoRequest;
  return proto.google.streetview.publish.v1.DeletePhotoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.DeletePhotoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.DeletePhotoRequest}
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhotoId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.DeletePhotoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.DeletePhotoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotoId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string photo_id = 1;
 * @return {string}
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.prototype.getPhotoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.DeletePhotoRequest} returns this
 */
proto.google.streetview.publish.v1.DeletePhotoRequest.prototype.setPhotoId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.BatchDeletePhotosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    photoIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.BatchDeletePhotosRequest;
  return proto.google.streetview.publish.v1.BatchDeletePhotosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhotoIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.BatchDeletePhotosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotoIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string photo_ids = 1;
 * @return {!Array<string>}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.prototype.getPhotoIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.prototype.setPhotoIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.prototype.addPhotoIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosRequest} returns this
 */
proto.google.streetview.publish.v1.BatchDeletePhotosRequest.prototype.clearPhotoIdsList = function() {
  return this.setPhotoIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.BatchDeletePhotosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.BatchDeletePhotosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusList: jspb.Message.toObjectList(msg.getStatusList(),
    google_rpc_status_pb.Status.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosResponse}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.BatchDeletePhotosResponse;
  return proto.google.streetview.publish.v1.BatchDeletePhotosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.BatchDeletePhotosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosResponse}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.addStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.BatchDeletePhotosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.BatchDeletePhotosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.rpc.Status status = 1;
 * @return {!Array<!proto.google.rpc.Status>}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.prototype.getStatusList = function() {
  return /** @type{!Array<!proto.google.rpc.Status>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {!Array<!proto.google.rpc.Status>} value
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosResponse} returns this
*/
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.prototype.setStatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.rpc.Status=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.rpc.Status}
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.prototype.addStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.rpc.Status, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.BatchDeletePhotosResponse} returns this
 */
proto.google.streetview.publish.v1.BatchDeletePhotosResponse.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * @enum {number}
 */
proto.google.streetview.publish.v1.PhotoView = {
  BASIC: 0,
  INCLUDE_DOWNLOAD_URL: 1
};

goog.object.extend(exports, proto.google.streetview.publish.v1);
