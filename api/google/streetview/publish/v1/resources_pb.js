// source: google/streetview/publish/v1/resources.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_type_latlng_pb = require('../../../../google/type/latlng_pb.js');
goog.object.extend(proto, google_type_latlng_pb);
goog.exportSymbol('proto.google.streetview.publish.v1.Connection', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.Level', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.Photo', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.PhotoId', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.Place', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.Pose', null, global);
goog.exportSymbol('proto.google.streetview.publish.v1.UploadRef', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.UploadRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.UploadRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.UploadRef.displayName = 'proto.google.streetview.publish.v1.UploadRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.PhotoId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.PhotoId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.PhotoId.displayName = 'proto.google.streetview.publish.v1.PhotoId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.Level = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.Level, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.Level.displayName = 'proto.google.streetview.publish.v1.Level';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.Pose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.Pose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.Pose.displayName = 'proto.google.streetview.publish.v1.Pose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.Place = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.Place, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.Place.displayName = 'proto.google.streetview.publish.v1.Place';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.Connection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.streetview.publish.v1.Connection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.Connection.displayName = 'proto.google.streetview.publish.v1.Connection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.streetview.publish.v1.Photo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.streetview.publish.v1.Photo.repeatedFields_, null);
};
goog.inherits(proto.google.streetview.publish.v1.Photo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.streetview.publish.v1.Photo.displayName = 'proto.google.streetview.publish.v1.Photo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.UploadRef.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.UploadRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.UploadRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.UploadRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    uploadUrl: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.UploadRef}
 */
proto.google.streetview.publish.v1.UploadRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.UploadRef;
  return proto.google.streetview.publish.v1.UploadRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.UploadRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.UploadRef}
 */
proto.google.streetview.publish.v1.UploadRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.UploadRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.UploadRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.UploadRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.UploadRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUploadUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string upload_url = 1;
 * @return {string}
 */
proto.google.streetview.publish.v1.UploadRef.prototype.getUploadUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.UploadRef} returns this
 */
proto.google.streetview.publish.v1.UploadRef.prototype.setUploadUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.PhotoId.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.PhotoId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.PhotoId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.PhotoId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.PhotoId}
 */
proto.google.streetview.publish.v1.PhotoId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.PhotoId;
  return proto.google.streetview.publish.v1.PhotoId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.PhotoId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.PhotoId}
 */
proto.google.streetview.publish.v1.PhotoId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.PhotoId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.PhotoId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.PhotoId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.PhotoId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.google.streetview.publish.v1.PhotoId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.PhotoId} returns this
 */
proto.google.streetview.publish.v1.PhotoId.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.Level.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.Level.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.Level} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Level.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.Level}
 */
proto.google.streetview.publish.v1.Level.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.Level;
  return proto.google.streetview.publish.v1.Level.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.Level} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.Level}
 */
proto.google.streetview.publish.v1.Level.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.Level.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.Level.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.Level} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Level.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional double number = 1;
 * @return {number}
 */
proto.google.streetview.publish.v1.Level.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.streetview.publish.v1.Level} returns this
 */
proto.google.streetview.publish.v1.Level.prototype.setNumber = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.google.streetview.publish.v1.Level.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.Level} returns this
 */
proto.google.streetview.publish.v1.Level.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.Pose.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.Pose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.Pose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Pose.toObject = function(includeInstance, msg) {
  var f, obj = {
    latLngPair: (f = msg.getLatLngPair()) && google_type_latlng_pb.LatLng.toObject(includeInstance, f),
    altitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    heading: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    pitch: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    roll: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    level: (f = msg.getLevel()) && proto.google.streetview.publish.v1.Level.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.Pose}
 */
proto.google.streetview.publish.v1.Pose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.Pose;
  return proto.google.streetview.publish.v1.Pose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.Pose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.Pose}
 */
proto.google.streetview.publish.v1.Pose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_type_latlng_pb.LatLng;
      reader.readMessage(value,google_type_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setLatLngPair(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAltitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeading(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPitch(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRoll(value);
      break;
    case 7:
      var value = new proto.google.streetview.publish.v1.Level;
      reader.readMessage(value,proto.google.streetview.publish.v1.Level.deserializeBinaryFromReader);
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.Pose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.Pose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.Pose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Pose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatLngPair();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_type_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
  f = message.getAltitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getHeading();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPitch();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getRoll();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getLevel();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.streetview.publish.v1.Level.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.type.LatLng lat_lng_pair = 1;
 * @return {?proto.google.type.LatLng}
 */
proto.google.streetview.publish.v1.Pose.prototype.getLatLngPair = function() {
  return /** @type{?proto.google.type.LatLng} */ (
    jspb.Message.getWrapperField(this, google_type_latlng_pb.LatLng, 1));
};


/**
 * @param {?proto.google.type.LatLng|undefined} value
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
*/
proto.google.streetview.publish.v1.Pose.prototype.setLatLngPair = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
 */
proto.google.streetview.publish.v1.Pose.prototype.clearLatLngPair = function() {
  return this.setLatLngPair(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.Pose.prototype.hasLatLngPair = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double altitude = 2;
 * @return {number}
 */
proto.google.streetview.publish.v1.Pose.prototype.getAltitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
 */
proto.google.streetview.publish.v1.Pose.prototype.setAltitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double heading = 3;
 * @return {number}
 */
proto.google.streetview.publish.v1.Pose.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
 */
proto.google.streetview.publish.v1.Pose.prototype.setHeading = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double pitch = 4;
 * @return {number}
 */
proto.google.streetview.publish.v1.Pose.prototype.getPitch = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
 */
proto.google.streetview.publish.v1.Pose.prototype.setPitch = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double roll = 5;
 * @return {number}
 */
proto.google.streetview.publish.v1.Pose.prototype.getRoll = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
 */
proto.google.streetview.publish.v1.Pose.prototype.setRoll = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional Level level = 7;
 * @return {?proto.google.streetview.publish.v1.Level}
 */
proto.google.streetview.publish.v1.Pose.prototype.getLevel = function() {
  return /** @type{?proto.google.streetview.publish.v1.Level} */ (
    jspb.Message.getWrapperField(this, proto.google.streetview.publish.v1.Level, 7));
};


/**
 * @param {?proto.google.streetview.publish.v1.Level|undefined} value
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
*/
proto.google.streetview.publish.v1.Pose.prototype.setLevel = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.Pose} returns this
 */
proto.google.streetview.publish.v1.Pose.prototype.clearLevel = function() {
  return this.setLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.Pose.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.Place.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.Place.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.Place} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Place.toObject = function(includeInstance, msg) {
  var f, obj = {
    placeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.Place}
 */
proto.google.streetview.publish.v1.Place.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.Place;
  return proto.google.streetview.publish.v1.Place.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.Place} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.Place}
 */
proto.google.streetview.publish.v1.Place.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.Place.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.Place.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.Place} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Place.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string place_id = 1;
 * @return {string}
 */
proto.google.streetview.publish.v1.Place.prototype.getPlaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.Place} returns this
 */
proto.google.streetview.publish.v1.Place.prototype.setPlaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.Connection.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.Connection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.Connection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Connection.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: (f = msg.getTarget()) && proto.google.streetview.publish.v1.PhotoId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.Connection}
 */
proto.google.streetview.publish.v1.Connection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.Connection;
  return proto.google.streetview.publish.v1.Connection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.Connection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.Connection}
 */
proto.google.streetview.publish.v1.Connection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.streetview.publish.v1.PhotoId;
      reader.readMessage(value,proto.google.streetview.publish.v1.PhotoId.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.Connection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.Connection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.Connection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Connection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.streetview.publish.v1.PhotoId.serializeBinaryToWriter
    );
  }
};


/**
 * optional PhotoId target = 1;
 * @return {?proto.google.streetview.publish.v1.PhotoId}
 */
proto.google.streetview.publish.v1.Connection.prototype.getTarget = function() {
  return /** @type{?proto.google.streetview.publish.v1.PhotoId} */ (
    jspb.Message.getWrapperField(this, proto.google.streetview.publish.v1.PhotoId, 1));
};


/**
 * @param {?proto.google.streetview.publish.v1.PhotoId|undefined} value
 * @return {!proto.google.streetview.publish.v1.Connection} returns this
*/
proto.google.streetview.publish.v1.Connection.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.Connection} returns this
 */
proto.google.streetview.publish.v1.Connection.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.Connection.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.streetview.publish.v1.Photo.repeatedFields_ = [5,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.streetview.publish.v1.Photo.prototype.toObject = function(opt_includeInstance) {
  return proto.google.streetview.publish.v1.Photo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.streetview.publish.v1.Photo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Photo.toObject = function(includeInstance, msg) {
  var f, obj = {
    photoId: (f = msg.getPhotoId()) && proto.google.streetview.publish.v1.PhotoId.toObject(includeInstance, f),
    uploadReference: (f = msg.getUploadReference()) && proto.google.streetview.publish.v1.UploadRef.toObject(includeInstance, f),
    downloadUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    shareLink: jspb.Message.getFieldWithDefault(msg, 11, ""),
    pose: (f = msg.getPose()) && proto.google.streetview.publish.v1.Pose.toObject(includeInstance, f),
    connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(),
    proto.google.streetview.publish.v1.Connection.toObject, includeInstance),
    captureTime: (f = msg.getCaptureTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    placesList: jspb.Message.toObjectList(msg.getPlacesList(),
    proto.google.streetview.publish.v1.Place.toObject, includeInstance),
    viewCount: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.streetview.publish.v1.Photo}
 */
proto.google.streetview.publish.v1.Photo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.streetview.publish.v1.Photo;
  return proto.google.streetview.publish.v1.Photo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.streetview.publish.v1.Photo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.streetview.publish.v1.Photo}
 */
proto.google.streetview.publish.v1.Photo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.streetview.publish.v1.PhotoId;
      reader.readMessage(value,proto.google.streetview.publish.v1.PhotoId.deserializeBinaryFromReader);
      msg.setPhotoId(value);
      break;
    case 2:
      var value = new proto.google.streetview.publish.v1.UploadRef;
      reader.readMessage(value,proto.google.streetview.publish.v1.UploadRef.deserializeBinaryFromReader);
      msg.setUploadReference(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadUrl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setShareLink(value);
      break;
    case 4:
      var value = new proto.google.streetview.publish.v1.Pose;
      reader.readMessage(value,proto.google.streetview.publish.v1.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    case 5:
      var value = new proto.google.streetview.publish.v1.Connection;
      reader.readMessage(value,proto.google.streetview.publish.v1.Connection.deserializeBinaryFromReader);
      msg.addConnections(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCaptureTime(value);
      break;
    case 7:
      var value = new proto.google.streetview.publish.v1.Place;
      reader.readMessage(value,proto.google.streetview.publish.v1.Place.deserializeBinaryFromReader);
      msg.addPlaces(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setViewCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.streetview.publish.v1.Photo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.streetview.publish.v1.Photo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.streetview.publish.v1.Photo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.streetview.publish.v1.Photo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotoId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.streetview.publish.v1.PhotoId.serializeBinaryToWriter
    );
  }
  f = message.getUploadReference();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.streetview.publish.v1.UploadRef.serializeBinaryToWriter
    );
  }
  f = message.getDownloadUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getShareLink();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.streetview.publish.v1.Pose.serializeBinaryToWriter
    );
  }
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.google.streetview.publish.v1.Connection.serializeBinaryToWriter
    );
  }
  f = message.getCaptureTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.google.streetview.publish.v1.Place.serializeBinaryToWriter
    );
  }
  f = message.getViewCount();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional PhotoId photo_id = 1;
 * @return {?proto.google.streetview.publish.v1.PhotoId}
 */
proto.google.streetview.publish.v1.Photo.prototype.getPhotoId = function() {
  return /** @type{?proto.google.streetview.publish.v1.PhotoId} */ (
    jspb.Message.getWrapperField(this, proto.google.streetview.publish.v1.PhotoId, 1));
};


/**
 * @param {?proto.google.streetview.publish.v1.PhotoId|undefined} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
*/
proto.google.streetview.publish.v1.Photo.prototype.setPhotoId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.clearPhotoId = function() {
  return this.setPhotoId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.Photo.prototype.hasPhotoId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UploadRef upload_reference = 2;
 * @return {?proto.google.streetview.publish.v1.UploadRef}
 */
proto.google.streetview.publish.v1.Photo.prototype.getUploadReference = function() {
  return /** @type{?proto.google.streetview.publish.v1.UploadRef} */ (
    jspb.Message.getWrapperField(this, proto.google.streetview.publish.v1.UploadRef, 2));
};


/**
 * @param {?proto.google.streetview.publish.v1.UploadRef|undefined} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
*/
proto.google.streetview.publish.v1.Photo.prototype.setUploadReference = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.clearUploadReference = function() {
  return this.setUploadReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.Photo.prototype.hasUploadReference = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string download_url = 3;
 * @return {string}
 */
proto.google.streetview.publish.v1.Photo.prototype.getDownloadUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.setDownloadUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string thumbnail_url = 9;
 * @return {string}
 */
proto.google.streetview.publish.v1.Photo.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.setThumbnailUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string share_link = 11;
 * @return {string}
 */
proto.google.streetview.publish.v1.Photo.prototype.getShareLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.setShareLink = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional Pose pose = 4;
 * @return {?proto.google.streetview.publish.v1.Pose}
 */
proto.google.streetview.publish.v1.Photo.prototype.getPose = function() {
  return /** @type{?proto.google.streetview.publish.v1.Pose} */ (
    jspb.Message.getWrapperField(this, proto.google.streetview.publish.v1.Pose, 4));
};


/**
 * @param {?proto.google.streetview.publish.v1.Pose|undefined} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
*/
proto.google.streetview.publish.v1.Photo.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.Photo.prototype.hasPose = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Connection connections = 5;
 * @return {!Array<!proto.google.streetview.publish.v1.Connection>}
 */
proto.google.streetview.publish.v1.Photo.prototype.getConnectionsList = function() {
  return /** @type{!Array<!proto.google.streetview.publish.v1.Connection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.streetview.publish.v1.Connection, 5));
};


/**
 * @param {!Array<!proto.google.streetview.publish.v1.Connection>} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
*/
proto.google.streetview.publish.v1.Photo.prototype.setConnectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.google.streetview.publish.v1.Connection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.Connection}
 */
proto.google.streetview.publish.v1.Photo.prototype.addConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.streetview.publish.v1.Connection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.clearConnectionsList = function() {
  return this.setConnectionsList([]);
};


/**
 * optional google.protobuf.Timestamp capture_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.streetview.publish.v1.Photo.prototype.getCaptureTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
*/
proto.google.streetview.publish.v1.Photo.prototype.setCaptureTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.clearCaptureTime = function() {
  return this.setCaptureTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.streetview.publish.v1.Photo.prototype.hasCaptureTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Place places = 7;
 * @return {!Array<!proto.google.streetview.publish.v1.Place>}
 */
proto.google.streetview.publish.v1.Photo.prototype.getPlacesList = function() {
  return /** @type{!Array<!proto.google.streetview.publish.v1.Place>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.streetview.publish.v1.Place, 7));
};


/**
 * @param {!Array<!proto.google.streetview.publish.v1.Place>} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
*/
proto.google.streetview.publish.v1.Photo.prototype.setPlacesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.google.streetview.publish.v1.Place=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.streetview.publish.v1.Place}
 */
proto.google.streetview.publish.v1.Photo.prototype.addPlaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.google.streetview.publish.v1.Place, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.clearPlacesList = function() {
  return this.setPlacesList([]);
};


/**
 * optional int64 view_count = 10;
 * @return {number}
 */
proto.google.streetview.publish.v1.Photo.prototype.getViewCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.streetview.publish.v1.Photo} returns this
 */
proto.google.streetview.publish.v1.Photo.prototype.setViewCount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


goog.object.extend(exports, proto.google.streetview.publish.v1);
