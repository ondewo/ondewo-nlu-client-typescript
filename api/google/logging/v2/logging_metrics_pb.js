// source: google/logging/v2/logging_metrics.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_distribution_pb = require('../../../google/api/distribution_pb.js');
goog.object.extend(proto, google_api_distribution_pb);
var google_api_metric_pb = require('../../../google/api/metric_pb.js');
goog.object.extend(proto, google_api_metric_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
goog.exportSymbol('proto.google.logging.v2.CreateLogMetricRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.DeleteLogMetricRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.GetLogMetricRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.ListLogMetricsRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.ListLogMetricsResponse', null, global);
goog.exportSymbol('proto.google.logging.v2.LogMetric', null, global);
goog.exportSymbol('proto.google.logging.v2.LogMetric.ApiVersion', null, global);
goog.exportSymbol('proto.google.logging.v2.UpdateLogMetricRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.LogMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.LogMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.logging.v2.LogMetric.displayName = 'proto.google.logging.v2.LogMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListLogMetricsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.ListLogMetricsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.logging.v2.ListLogMetricsRequest.displayName = 'proto.google.logging.v2.ListLogMetricsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListLogMetricsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.ListLogMetricsResponse.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.ListLogMetricsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.logging.v2.ListLogMetricsResponse.displayName = 'proto.google.logging.v2.ListLogMetricsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.GetLogMetricRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.GetLogMetricRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.logging.v2.GetLogMetricRequest.displayName = 'proto.google.logging.v2.GetLogMetricRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.CreateLogMetricRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.CreateLogMetricRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.logging.v2.CreateLogMetricRequest.displayName = 'proto.google.logging.v2.CreateLogMetricRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.UpdateLogMetricRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.UpdateLogMetricRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.logging.v2.UpdateLogMetricRequest.displayName = 'proto.google.logging.v2.UpdateLogMetricRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.DeleteLogMetricRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.DeleteLogMetricRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.logging.v2.DeleteLogMetricRequest.displayName = 'proto.google.logging.v2.DeleteLogMetricRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.logging.v2.LogMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.google.logging.v2.LogMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.LogMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.LogMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metricDescriptor: (f = msg.getMetricDescriptor()) && google_api_metric_pb.MetricDescriptor.toObject(includeInstance, f),
    valueExtractor: jspb.Message.getFieldWithDefault(msg, 6, ""),
    labelExtractorsMap: (f = msg.getLabelExtractorsMap()) ? f.toObject(includeInstance, undefined) : [],
    bucketOptions: (f = msg.getBucketOptions()) && google_api_distribution_pb.Distribution.BucketOptions.toObject(includeInstance, f),
    version: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.LogMetric}
 */
proto.google.logging.v2.LogMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.logging.v2.LogMetric;
  return proto.google.logging.v2.LogMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.LogMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.LogMetric}
 */
proto.google.logging.v2.LogMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 5:
      var value = new google_api_metric_pb.MetricDescriptor;
      reader.readMessage(value,google_api_metric_pb.MetricDescriptor.deserializeBinaryFromReader);
      msg.setMetricDescriptor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueExtractor(value);
      break;
    case 7:
      var value = msg.getLabelExtractorsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = new google_api_distribution_pb.Distribution.BucketOptions;
      reader.readMessage(value,google_api_distribution_pb.Distribution.BucketOptions.deserializeBinaryFromReader);
      msg.setBucketOptions(value);
      break;
    case 4:
      var value = /** @type {!proto.google.logging.v2.LogMetric.ApiVersion} */ (reader.readEnum());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.LogMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.logging.v2.LogMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.LogMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.LogMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetricDescriptor();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_api_metric_pb.MetricDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getValueExtractor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLabelExtractorsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBucketOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_api_distribution_pb.Distribution.BucketOptions.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.logging.v2.LogMetric.ApiVersion = {
  V2: 0,
  V1: 1
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.logging.v2.LogMetric.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.google.logging.v2.LogMetric.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string filter = 3;
 * @return {string}
 */
proto.google.logging.v2.LogMetric.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.api.MetricDescriptor metric_descriptor = 5;
 * @return {?proto.google.api.MetricDescriptor}
 */
proto.google.logging.v2.LogMetric.prototype.getMetricDescriptor = function() {
  return /** @type{?proto.google.api.MetricDescriptor} */ (
    jspb.Message.getWrapperField(this, google_api_metric_pb.MetricDescriptor, 5));
};


/**
 * @param {?proto.google.api.MetricDescriptor|undefined} value
 * @return {!proto.google.logging.v2.LogMetric} returns this
*/
proto.google.logging.v2.LogMetric.prototype.setMetricDescriptor = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.clearMetricDescriptor = function() {
  return this.setMetricDescriptor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.logging.v2.LogMetric.prototype.hasMetricDescriptor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string value_extractor = 6;
 * @return {string}
 */
proto.google.logging.v2.LogMetric.prototype.getValueExtractor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.setValueExtractor = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * map<string, string> label_extractors = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.google.logging.v2.LogMetric.prototype.getLabelExtractorsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.clearLabelExtractorsMap = function() {
  this.getLabelExtractorsMap().clear();
  return this;};


/**
 * optional google.api.Distribution.BucketOptions bucket_options = 8;
 * @return {?proto.google.api.Distribution.BucketOptions}
 */
proto.google.logging.v2.LogMetric.prototype.getBucketOptions = function() {
  return /** @type{?proto.google.api.Distribution.BucketOptions} */ (
    jspb.Message.getWrapperField(this, google_api_distribution_pb.Distribution.BucketOptions, 8));
};


/**
 * @param {?proto.google.api.Distribution.BucketOptions|undefined} value
 * @return {!proto.google.logging.v2.LogMetric} returns this
*/
proto.google.logging.v2.LogMetric.prototype.setBucketOptions = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.clearBucketOptions = function() {
  return this.setBucketOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.logging.v2.LogMetric.prototype.hasBucketOptions = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ApiVersion version = 4;
 * @return {!proto.google.logging.v2.LogMetric.ApiVersion}
 */
proto.google.logging.v2.LogMetric.prototype.getVersion = function() {
  return /** @type {!proto.google.logging.v2.LogMetric.ApiVersion} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.google.logging.v2.LogMetric.ApiVersion} value
 * @return {!proto.google.logging.v2.LogMetric} returns this
 */
proto.google.logging.v2.LogMetric.prototype.setVersion = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.logging.v2.ListLogMetricsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListLogMetricsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogMetricsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListLogMetricsRequest}
 */
proto.google.logging.v2.ListLogMetricsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.logging.v2.ListLogMetricsRequest;
  return proto.google.logging.v2.ListLogMetricsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListLogMetricsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListLogMetricsRequest}
 */
proto.google.logging.v2.ListLogMetricsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListLogMetricsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListLogMetricsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogMetricsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.ListLogMetricsRequest} returns this
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.ListLogMetricsRequest} returns this
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 page_size = 3;
 * @return {number}
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.logging.v2.ListLogMetricsRequest} returns this
 */
proto.google.logging.v2.ListLogMetricsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.ListLogMetricsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.logging.v2.ListLogMetricsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.logging.v2.ListLogMetricsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListLogMetricsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogMetricsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricsList: jspb.Message.toObjectList(msg.getMetricsList(),
    proto.google.logging.v2.LogMetric.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListLogMetricsResponse}
 */
proto.google.logging.v2.ListLogMetricsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.logging.v2.ListLogMetricsResponse;
  return proto.google.logging.v2.ListLogMetricsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListLogMetricsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListLogMetricsResponse}
 */
proto.google.logging.v2.ListLogMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.logging.v2.LogMetric;
      reader.readMessage(value,proto.google.logging.v2.LogMetric.deserializeBinaryFromReader);
      msg.addMetrics(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListLogMetricsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListLogMetricsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListLogMetricsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogMetricsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.logging.v2.LogMetric.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated LogMetric metrics = 1;
 * @return {!Array<!proto.google.logging.v2.LogMetric>}
 */
proto.google.logging.v2.ListLogMetricsResponse.prototype.getMetricsList = function() {
  return /** @type{!Array<!proto.google.logging.v2.LogMetric>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.logging.v2.LogMetric, 1));
};


/**
 * @param {!Array<!proto.google.logging.v2.LogMetric>} value
 * @return {!proto.google.logging.v2.ListLogMetricsResponse} returns this
*/
proto.google.logging.v2.ListLogMetricsResponse.prototype.setMetricsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.logging.v2.LogMetric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.logging.v2.LogMetric}
 */
proto.google.logging.v2.ListLogMetricsResponse.prototype.addMetrics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.logging.v2.LogMetric, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.logging.v2.ListLogMetricsResponse} returns this
 */
proto.google.logging.v2.ListLogMetricsResponse.prototype.clearMetricsList = function() {
  return this.setMetricsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.logging.v2.ListLogMetricsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.ListLogMetricsResponse} returns this
 */
proto.google.logging.v2.ListLogMetricsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.logging.v2.GetLogMetricRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.logging.v2.GetLogMetricRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.GetLogMetricRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.GetLogMetricRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.GetLogMetricRequest}
 */
proto.google.logging.v2.GetLogMetricRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.logging.v2.GetLogMetricRequest;
  return proto.google.logging.v2.GetLogMetricRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.GetLogMetricRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.GetLogMetricRequest}
 */
proto.google.logging.v2.GetLogMetricRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetricName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.GetLogMetricRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.logging.v2.GetLogMetricRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.GetLogMetricRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.GetLogMetricRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string metric_name = 1;
 * @return {string}
 */
proto.google.logging.v2.GetLogMetricRequest.prototype.getMetricName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.GetLogMetricRequest} returns this
 */
proto.google.logging.v2.GetLogMetricRequest.prototype.setMetricName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.logging.v2.CreateLogMetricRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.logging.v2.CreateLogMetricRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.CreateLogMetricRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.CreateLogMetricRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metric: (f = msg.getMetric()) && proto.google.logging.v2.LogMetric.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.CreateLogMetricRequest}
 */
proto.google.logging.v2.CreateLogMetricRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.logging.v2.CreateLogMetricRequest;
  return proto.google.logging.v2.CreateLogMetricRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.CreateLogMetricRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.CreateLogMetricRequest}
 */
proto.google.logging.v2.CreateLogMetricRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = new proto.google.logging.v2.LogMetric;
      reader.readMessage(value,proto.google.logging.v2.LogMetric.deserializeBinaryFromReader);
      msg.setMetric(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.CreateLogMetricRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.logging.v2.CreateLogMetricRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.CreateLogMetricRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.CreateLogMetricRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetric();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.logging.v2.LogMetric.serializeBinaryToWriter
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.logging.v2.CreateLogMetricRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.CreateLogMetricRequest} returns this
 */
proto.google.logging.v2.CreateLogMetricRequest.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LogMetric metric = 2;
 * @return {?proto.google.logging.v2.LogMetric}
 */
proto.google.logging.v2.CreateLogMetricRequest.prototype.getMetric = function() {
  return /** @type{?proto.google.logging.v2.LogMetric} */ (
    jspb.Message.getWrapperField(this, proto.google.logging.v2.LogMetric, 2));
};


/**
 * @param {?proto.google.logging.v2.LogMetric|undefined} value
 * @return {!proto.google.logging.v2.CreateLogMetricRequest} returns this
*/
proto.google.logging.v2.CreateLogMetricRequest.prototype.setMetric = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.logging.v2.CreateLogMetricRequest} returns this
 */
proto.google.logging.v2.CreateLogMetricRequest.prototype.clearMetric = function() {
  return this.setMetric(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.logging.v2.CreateLogMetricRequest.prototype.hasMetric = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.logging.v2.UpdateLogMetricRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.logging.v2.UpdateLogMetricRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.UpdateLogMetricRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.UpdateLogMetricRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metric: (f = msg.getMetric()) && proto.google.logging.v2.LogMetric.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.UpdateLogMetricRequest}
 */
proto.google.logging.v2.UpdateLogMetricRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.logging.v2.UpdateLogMetricRequest;
  return proto.google.logging.v2.UpdateLogMetricRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.UpdateLogMetricRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.UpdateLogMetricRequest}
 */
proto.google.logging.v2.UpdateLogMetricRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetricName(value);
      break;
    case 2:
      var value = new proto.google.logging.v2.LogMetric;
      reader.readMessage(value,proto.google.logging.v2.LogMetric.deserializeBinaryFromReader);
      msg.setMetric(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.UpdateLogMetricRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.logging.v2.UpdateLogMetricRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.UpdateLogMetricRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.UpdateLogMetricRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetric();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.logging.v2.LogMetric.serializeBinaryToWriter
    );
  }
};


/**
 * optional string metric_name = 1;
 * @return {string}
 */
proto.google.logging.v2.UpdateLogMetricRequest.prototype.getMetricName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.UpdateLogMetricRequest} returns this
 */
proto.google.logging.v2.UpdateLogMetricRequest.prototype.setMetricName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LogMetric metric = 2;
 * @return {?proto.google.logging.v2.LogMetric}
 */
proto.google.logging.v2.UpdateLogMetricRequest.prototype.getMetric = function() {
  return /** @type{?proto.google.logging.v2.LogMetric} */ (
    jspb.Message.getWrapperField(this, proto.google.logging.v2.LogMetric, 2));
};


/**
 * @param {?proto.google.logging.v2.LogMetric|undefined} value
 * @return {!proto.google.logging.v2.UpdateLogMetricRequest} returns this
*/
proto.google.logging.v2.UpdateLogMetricRequest.prototype.setMetric = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.logging.v2.UpdateLogMetricRequest} returns this
 */
proto.google.logging.v2.UpdateLogMetricRequest.prototype.clearMetric = function() {
  return this.setMetric(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.logging.v2.UpdateLogMetricRequest.prototype.hasMetric = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.logging.v2.DeleteLogMetricRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.logging.v2.DeleteLogMetricRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.DeleteLogMetricRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.DeleteLogMetricRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.DeleteLogMetricRequest}
 */
proto.google.logging.v2.DeleteLogMetricRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.logging.v2.DeleteLogMetricRequest;
  return proto.google.logging.v2.DeleteLogMetricRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.DeleteLogMetricRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.DeleteLogMetricRequest}
 */
proto.google.logging.v2.DeleteLogMetricRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetricName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.DeleteLogMetricRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.logging.v2.DeleteLogMetricRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.DeleteLogMetricRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.DeleteLogMetricRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string metric_name = 1;
 * @return {string}
 */
proto.google.logging.v2.DeleteLogMetricRequest.prototype.getMetricName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.logging.v2.DeleteLogMetricRequest} returns this
 */
proto.google.logging.v2.DeleteLogMetricRequest.prototype.setMetricName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.google.logging.v2);
