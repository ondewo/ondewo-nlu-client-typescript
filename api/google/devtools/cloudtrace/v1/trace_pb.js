// source: google/devtools/cloudtrace/v1/trace.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.GetTraceRequest', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.ListTracesRequest', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.ListTracesRequest.ViewType', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.ListTracesResponse', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.PatchTracesRequest', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.Trace', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.TraceSpan', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.TraceSpan.SpanKind', null, global);
goog.exportSymbol('proto.google.devtools.cloudtrace.v1.Traces', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.cloudtrace.v1.Trace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.devtools.cloudtrace.v1.Trace.repeatedFields_, null);
};
goog.inherits(proto.google.devtools.cloudtrace.v1.Trace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.cloudtrace.v1.Trace.displayName = 'proto.google.devtools.cloudtrace.v1.Trace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.cloudtrace.v1.Traces = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.devtools.cloudtrace.v1.Traces.repeatedFields_, null);
};
goog.inherits(proto.google.devtools.cloudtrace.v1.Traces, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.cloudtrace.v1.Traces.displayName = 'proto.google.devtools.cloudtrace.v1.Traces';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.cloudtrace.v1.TraceSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.cloudtrace.v1.TraceSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.cloudtrace.v1.TraceSpan.displayName = 'proto.google.devtools.cloudtrace.v1.TraceSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.cloudtrace.v1.ListTracesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.cloudtrace.v1.ListTracesRequest.displayName = 'proto.google.devtools.cloudtrace.v1.ListTracesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.devtools.cloudtrace.v1.ListTracesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.devtools.cloudtrace.v1.ListTracesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.cloudtrace.v1.ListTracesResponse.displayName = 'proto.google.devtools.cloudtrace.v1.ListTracesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.cloudtrace.v1.GetTraceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.cloudtrace.v1.GetTraceRequest.displayName = 'proto.google.devtools.cloudtrace.v1.GetTraceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.cloudtrace.v1.PatchTracesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.cloudtrace.v1.PatchTracesRequest.displayName = 'proto.google.devtools.cloudtrace.v1.PatchTracesRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.devtools.cloudtrace.v1.Trace.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.cloudtrace.v1.Trace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.cloudtrace.v1.Trace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.Trace.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    traceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spansList: jspb.Message.toObjectList(msg.getSpansList(),
    proto.google.devtools.cloudtrace.v1.TraceSpan.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.cloudtrace.v1.Trace}
 */
proto.google.devtools.cloudtrace.v1.Trace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.cloudtrace.v1.Trace;
  return proto.google.devtools.cloudtrace.v1.Trace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.cloudtrace.v1.Trace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.cloudtrace.v1.Trace}
 */
proto.google.devtools.cloudtrace.v1.Trace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceId(value);
      break;
    case 3:
      var value = new proto.google.devtools.cloudtrace.v1.TraceSpan;
      reader.readMessage(value,proto.google.devtools.cloudtrace.v1.TraceSpan.deserializeBinaryFromReader);
      msg.addSpans(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.cloudtrace.v1.Trace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.cloudtrace.v1.Trace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.Trace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTraceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpansList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.google.devtools.cloudtrace.v1.TraceSpan.serializeBinaryToWriter
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.Trace} returns this
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string trace_id = 2;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.getTraceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.Trace} returns this
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.setTraceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated TraceSpan spans = 3;
 * @return {!Array<!proto.google.devtools.cloudtrace.v1.TraceSpan>}
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.getSpansList = function() {
  return /** @type{!Array<!proto.google.devtools.cloudtrace.v1.TraceSpan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.devtools.cloudtrace.v1.TraceSpan, 3));
};


/**
 * @param {!Array<!proto.google.devtools.cloudtrace.v1.TraceSpan>} value
 * @return {!proto.google.devtools.cloudtrace.v1.Trace} returns this
*/
proto.google.devtools.cloudtrace.v1.Trace.prototype.setSpansList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.devtools.cloudtrace.v1.TraceSpan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan}
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.addSpans = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.devtools.cloudtrace.v1.TraceSpan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.devtools.cloudtrace.v1.Trace} returns this
 */
proto.google.devtools.cloudtrace.v1.Trace.prototype.clearSpansList = function() {
  return this.setSpansList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.devtools.cloudtrace.v1.Traces.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.cloudtrace.v1.Traces.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.cloudtrace.v1.Traces.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.cloudtrace.v1.Traces} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.Traces.toObject = function(includeInstance, msg) {
  var f, obj = {
    tracesList: jspb.Message.toObjectList(msg.getTracesList(),
    proto.google.devtools.cloudtrace.v1.Trace.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.cloudtrace.v1.Traces}
 */
proto.google.devtools.cloudtrace.v1.Traces.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.cloudtrace.v1.Traces;
  return proto.google.devtools.cloudtrace.v1.Traces.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.cloudtrace.v1.Traces} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.cloudtrace.v1.Traces}
 */
proto.google.devtools.cloudtrace.v1.Traces.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.devtools.cloudtrace.v1.Trace;
      reader.readMessage(value,proto.google.devtools.cloudtrace.v1.Trace.deserializeBinaryFromReader);
      msg.addTraces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.cloudtrace.v1.Traces.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.cloudtrace.v1.Traces.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.cloudtrace.v1.Traces} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.Traces.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTracesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.devtools.cloudtrace.v1.Trace.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Trace traces = 1;
 * @return {!Array<!proto.google.devtools.cloudtrace.v1.Trace>}
 */
proto.google.devtools.cloudtrace.v1.Traces.prototype.getTracesList = function() {
  return /** @type{!Array<!proto.google.devtools.cloudtrace.v1.Trace>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.devtools.cloudtrace.v1.Trace, 1));
};


/**
 * @param {!Array<!proto.google.devtools.cloudtrace.v1.Trace>} value
 * @return {!proto.google.devtools.cloudtrace.v1.Traces} returns this
*/
proto.google.devtools.cloudtrace.v1.Traces.prototype.setTracesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.devtools.cloudtrace.v1.Trace=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.devtools.cloudtrace.v1.Trace}
 */
proto.google.devtools.cloudtrace.v1.Traces.prototype.addTraces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.devtools.cloudtrace.v1.Trace, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.devtools.cloudtrace.v1.Traces} returns this
 */
proto.google.devtools.cloudtrace.v1.Traces.prototype.clearTracesList = function() {
  return this.setTracesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.cloudtrace.v1.TraceSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.cloudtrace.v1.TraceSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    spanId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    parentSpanId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.cloudtrace.v1.TraceSpan;
  return proto.google.devtools.cloudtrace.v1.TraceSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.cloudtrace.v1.TraceSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSpanId(value);
      break;
    case 2:
      var value = /** @type {!proto.google.devtools.cloudtrace.v1.TraceSpan.SpanKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setParentSpanId(value);
      break;
    case 7:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.cloudtrace.v1.TraceSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.cloudtrace.v1.TraceSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpanId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getParentSpanId();
  if (f !== 0) {
    writer.writeFixed64(
      6,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.SpanKind = {
  SPAN_KIND_UNSPECIFIED: 0,
  RPC_SERVER: 1,
  RPC_CLIENT: 2
};

/**
 * optional fixed64 span_id = 1;
 * @return {number}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.getSpanId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.setSpanId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional SpanKind kind = 2;
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan.SpanKind}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.getKind = function() {
  return /** @type {!proto.google.devtools.cloudtrace.v1.TraceSpan.SpanKind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.devtools.cloudtrace.v1.TraceSpan.SpanKind} value
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
*/
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
*/
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional fixed64 parent_span_id = 6;
 * @return {number}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.getParentSpanId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.setParentSpanId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * map<string, string> labels = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.devtools.cloudtrace.v1.TraceSpan} returns this
 */
proto.google.devtools.cloudtrace.v1.TraceSpan.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.cloudtrace.v1.ListTracesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    view: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 4, ""),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    filter: jspb.Message.getFieldWithDefault(msg, 7, ""),
    orderBy: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.cloudtrace.v1.ListTracesRequest;
  return proto.google.devtools.cloudtrace.v1.ListTracesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {!proto.google.devtools.cloudtrace.v1.ListTracesRequest.ViewType} */ (reader.readEnum());
      msg.setView(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.cloudtrace.v1.ListTracesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.ViewType = {
  VIEW_TYPE_UNSPECIFIED: 0,
  MINIMAL: 1,
  ROOTSPAN: 2,
  COMPLETE: 3
};

/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ViewType view = 2;
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest.ViewType}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getView = function() {
  return /** @type {!proto.google.devtools.cloudtrace.v1.ListTracesRequest.ViewType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.devtools.cloudtrace.v1.ListTracesRequest.ViewType} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 page_size = 3;
 * @return {number}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string page_token = 4;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
*/
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
*/
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string filter = 7;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string order_by = 8;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesRequest.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.cloudtrace.v1.ListTracesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.cloudtrace.v1.ListTracesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tracesList: jspb.Message.toObjectList(msg.getTracesList(),
    proto.google.devtools.cloudtrace.v1.Trace.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesResponse}
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.cloudtrace.v1.ListTracesResponse;
  return proto.google.devtools.cloudtrace.v1.ListTracesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.cloudtrace.v1.ListTracesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesResponse}
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.devtools.cloudtrace.v1.Trace;
      reader.readMessage(value,proto.google.devtools.cloudtrace.v1.Trace.deserializeBinaryFromReader);
      msg.addTraces(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.cloudtrace.v1.ListTracesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.cloudtrace.v1.ListTracesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTracesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.devtools.cloudtrace.v1.Trace.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Trace traces = 1;
 * @return {!Array<!proto.google.devtools.cloudtrace.v1.Trace>}
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.getTracesList = function() {
  return /** @type{!Array<!proto.google.devtools.cloudtrace.v1.Trace>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.devtools.cloudtrace.v1.Trace, 1));
};


/**
 * @param {!Array<!proto.google.devtools.cloudtrace.v1.Trace>} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesResponse} returns this
*/
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.setTracesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.devtools.cloudtrace.v1.Trace=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.devtools.cloudtrace.v1.Trace}
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.addTraces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.devtools.cloudtrace.v1.Trace, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesResponse} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.clearTracesList = function() {
  return this.setTracesList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.ListTracesResponse} returns this
 */
proto.google.devtools.cloudtrace.v1.ListTracesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.cloudtrace.v1.GetTraceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.cloudtrace.v1.GetTraceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    traceId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.cloudtrace.v1.GetTraceRequest}
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.cloudtrace.v1.GetTraceRequest;
  return proto.google.devtools.cloudtrace.v1.GetTraceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.cloudtrace.v1.GetTraceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.cloudtrace.v1.GetTraceRequest}
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.cloudtrace.v1.GetTraceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.cloudtrace.v1.GetTraceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTraceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.GetTraceRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string trace_id = 2;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.prototype.getTraceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.GetTraceRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.GetTraceRequest.prototype.setTraceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.cloudtrace.v1.PatchTracesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    traces: (f = msg.getTraces()) && proto.google.devtools.cloudtrace.v1.Traces.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest}
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.cloudtrace.v1.PatchTracesRequest;
  return proto.google.devtools.cloudtrace.v1.PatchTracesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest}
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = new proto.google.devtools.cloudtrace.v1.Traces;
      reader.readMessage(value,proto.google.devtools.cloudtrace.v1.Traces.deserializeBinaryFromReader);
      msg.setTraces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.cloudtrace.v1.PatchTracesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTraces();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.devtools.cloudtrace.v1.Traces.serializeBinaryToWriter
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Traces traces = 2;
 * @return {?proto.google.devtools.cloudtrace.v1.Traces}
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.getTraces = function() {
  return /** @type{?proto.google.devtools.cloudtrace.v1.Traces} */ (
    jspb.Message.getWrapperField(this, proto.google.devtools.cloudtrace.v1.Traces, 2));
};


/**
 * @param {?proto.google.devtools.cloudtrace.v1.Traces|undefined} value
 * @return {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest} returns this
*/
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.setTraces = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.cloudtrace.v1.PatchTracesRequest} returns this
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.clearTraces = function() {
  return this.setTraces(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.cloudtrace.v1.PatchTracesRequest.prototype.hasTraces = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.google.devtools.cloudtrace.v1);
