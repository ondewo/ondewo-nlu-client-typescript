// source: google/devtools/clouddebugger/v2/debugger.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_devtools_clouddebugger_v2_data_pb = require('../../../../google/devtools/clouddebugger/v2/data_pb.js');
goog.object.extend(proto, google_devtools_clouddebugger_v2_data_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.GetBreakpointRequest', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.GetBreakpointResponse', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.SetBreakpointRequest', null, global);
goog.exportSymbol('proto.google.devtools.clouddebugger.v2.SetBreakpointResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.SetBreakpointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.displayName = 'proto.google.devtools.clouddebugger.v2.SetBreakpointRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.SetBreakpointResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.displayName = 'proto.google.devtools.clouddebugger.v2.SetBreakpointResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.GetBreakpointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.displayName = 'proto.google.devtools.clouddebugger.v2.GetBreakpointRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.GetBreakpointResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.displayName = 'proto.google.devtools.clouddebugger.v2.GetBreakpointResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.displayName = 'proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.displayName = 'proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.displayName = 'proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.repeatedFields_, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.displayName = 'proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.displayName = 'proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.displayName = 'proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    debuggeeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    breakpoint: (f = msg.getBreakpoint()) && google_devtools_clouddebugger_v2_data_pb.Breakpoint.toObject(includeInstance, f),
    clientVersion: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.SetBreakpointRequest;
  return proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebuggeeId(value);
      break;
    case 2:
      var value = new google_devtools_clouddebugger_v2_data_pb.Breakpoint;
      reader.readMessage(value,google_devtools_clouddebugger_v2_data_pb.Breakpoint.deserializeBinaryFromReader);
      msg.setBreakpoint(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDebuggeeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBreakpoint();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_devtools_clouddebugger_v2_data_pb.Breakpoint.serializeBinaryToWriter
    );
  }
  f = message.getClientVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string debuggee_id = 1;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.getDebuggeeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.setDebuggeeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Breakpoint breakpoint = 2;
 * @return {?proto.google.devtools.clouddebugger.v2.Breakpoint}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.getBreakpoint = function() {
  return /** @type{?proto.google.devtools.clouddebugger.v2.Breakpoint} */ (
    jspb.Message.getWrapperField(this, google_devtools_clouddebugger_v2_data_pb.Breakpoint, 2));
};


/**
 * @param {?proto.google.devtools.clouddebugger.v2.Breakpoint|undefined} value
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest} returns this
*/
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.setBreakpoint = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.clearBreakpoint = function() {
  return this.setBreakpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.hasBreakpoint = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string client_version = 4;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.SetBreakpointResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    breakpoint: (f = msg.getBreakpoint()) && google_devtools_clouddebugger_v2_data_pb.Breakpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointResponse}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.SetBreakpointResponse;
  return proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.SetBreakpointResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointResponse}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_devtools_clouddebugger_v2_data_pb.Breakpoint;
      reader.readMessage(value,google_devtools_clouddebugger_v2_data_pb.Breakpoint.deserializeBinaryFromReader);
      msg.setBreakpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.SetBreakpointResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBreakpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_devtools_clouddebugger_v2_data_pb.Breakpoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional Breakpoint breakpoint = 1;
 * @return {?proto.google.devtools.clouddebugger.v2.Breakpoint}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.prototype.getBreakpoint = function() {
  return /** @type{?proto.google.devtools.clouddebugger.v2.Breakpoint} */ (
    jspb.Message.getWrapperField(this, google_devtools_clouddebugger_v2_data_pb.Breakpoint, 1));
};


/**
 * @param {?proto.google.devtools.clouddebugger.v2.Breakpoint|undefined} value
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointResponse} returns this
*/
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.prototype.setBreakpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.clouddebugger.v2.SetBreakpointResponse} returns this
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.prototype.clearBreakpoint = function() {
  return this.setBreakpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.SetBreakpointResponse.prototype.hasBreakpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    debuggeeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    breakpointId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientVersion: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.GetBreakpointRequest;
  return proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebuggeeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBreakpointId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDebuggeeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBreakpointId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string debuggee_id = 1;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.getDebuggeeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.setDebuggeeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string breakpoint_id = 2;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.getBreakpointId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.setBreakpointId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_version = 4;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.GetBreakpointResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    breakpoint: (f = msg.getBreakpoint()) && google_devtools_clouddebugger_v2_data_pb.Breakpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointResponse}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.GetBreakpointResponse;
  return proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.GetBreakpointResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointResponse}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_devtools_clouddebugger_v2_data_pb.Breakpoint;
      reader.readMessage(value,google_devtools_clouddebugger_v2_data_pb.Breakpoint.deserializeBinaryFromReader);
      msg.setBreakpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.GetBreakpointResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBreakpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_devtools_clouddebugger_v2_data_pb.Breakpoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional Breakpoint breakpoint = 1;
 * @return {?proto.google.devtools.clouddebugger.v2.Breakpoint}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.prototype.getBreakpoint = function() {
  return /** @type{?proto.google.devtools.clouddebugger.v2.Breakpoint} */ (
    jspb.Message.getWrapperField(this, google_devtools_clouddebugger_v2_data_pb.Breakpoint, 1));
};


/**
 * @param {?proto.google.devtools.clouddebugger.v2.Breakpoint|undefined} value
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointResponse} returns this
*/
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.prototype.setBreakpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.clouddebugger.v2.GetBreakpointResponse} returns this
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.prototype.clearBreakpoint = function() {
  return this.setBreakpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.GetBreakpointResponse.prototype.hasBreakpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    debuggeeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    breakpointId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientVersion: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest}
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest;
  return proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest}
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebuggeeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBreakpointId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDebuggeeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBreakpointId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string debuggee_id = 1;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.getDebuggeeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.setDebuggeeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string breakpoint_id = 2;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.getBreakpointId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.setBreakpointId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_version = 3;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.DeleteBreakpointRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    debuggeeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeAllUsers: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    includeInactive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    action: (f = msg.getAction()) && proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.toObject(includeInstance, f),
    stripResults: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    waitToken: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clientVersion: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest;
  return proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebuggeeId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeAllUsers(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInactive(value);
      break;
    case 4:
      var value = new proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue;
      reader.readMessage(value,proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripResults(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWaitToken(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDebuggeeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeAllUsers();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIncludeInactive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.serializeBinaryToWriter
    );
  }
  f = message.getStripResults();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getWaitToken();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClientVersion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue;
  return proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.devtools.clouddebugger.v2.Breakpoint.Action} */ (reader.readEnum());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Breakpoint.Action value = 1;
 * @return {!proto.google.devtools.clouddebugger.v2.Breakpoint.Action}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.prototype.getValue = function() {
  return /** @type {!proto.google.devtools.clouddebugger.v2.Breakpoint.Action} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.devtools.clouddebugger.v2.Breakpoint.Action} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string debuggee_id = 1;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.getDebuggeeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.setDebuggeeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_all_users = 2;
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.getIncludeAllUsers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.setIncludeAllUsers = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool include_inactive = 3;
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.getIncludeInactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.setIncludeInactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional BreakpointActionValue action = 4;
 * @return {?proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.getAction = function() {
  return /** @type{?proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue} */ (
    jspb.Message.getWrapperField(this, proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue, 4));
};


/**
 * @param {?proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue|undefined} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
*/
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.setAction = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.hasAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool strip_results = 5;
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.getStripResults = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.setStripResults = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string wait_token = 6;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.getWaitToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.setWaitToken = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string client_version = 8;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    breakpointsList: jspb.Message.toObjectList(msg.getBreakpointsList(),
    google_devtools_clouddebugger_v2_data_pb.Breakpoint.toObject, includeInstance),
    nextWaitToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse;
  return proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_devtools_clouddebugger_v2_data_pb.Breakpoint;
      reader.readMessage(value,google_devtools_clouddebugger_v2_data_pb.Breakpoint.deserializeBinaryFromReader);
      msg.addBreakpoints(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextWaitToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBreakpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_devtools_clouddebugger_v2_data_pb.Breakpoint.serializeBinaryToWriter
    );
  }
  f = message.getNextWaitToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Breakpoint breakpoints = 1;
 * @return {!Array<!proto.google.devtools.clouddebugger.v2.Breakpoint>}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.getBreakpointsList = function() {
  return /** @type{!Array<!proto.google.devtools.clouddebugger.v2.Breakpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_devtools_clouddebugger_v2_data_pb.Breakpoint, 1));
};


/**
 * @param {!Array<!proto.google.devtools.clouddebugger.v2.Breakpoint>} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse} returns this
*/
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.setBreakpointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.devtools.clouddebugger.v2.Breakpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.devtools.clouddebugger.v2.Breakpoint}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.addBreakpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.devtools.clouddebugger.v2.Breakpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.clearBreakpointsList = function() {
  return this.setBreakpointsList([]);
};


/**
 * optional string next_wait_token = 2;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.getNextWaitToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse} returns this
 */
proto.google.devtools.clouddebugger.v2.ListBreakpointsResponse.prototype.setNextWaitToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 2, ""),
    includeInactive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    clientVersion: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest;
  return proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInactive(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIncludeInactive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getClientVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string project = 2;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool include_inactive = 3;
 * @return {boolean}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.getIncludeInactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.setIncludeInactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string client_version = 4;
 * @return {string}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest} returns this
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    debuggeesList: jspb.Message.toObjectList(msg.getDebuggeesList(),
    google_devtools_clouddebugger_v2_data_pb.Debuggee.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse;
  return proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_devtools_clouddebugger_v2_data_pb.Debuggee;
      reader.readMessage(value,google_devtools_clouddebugger_v2_data_pb.Debuggee.deserializeBinaryFromReader);
      msg.addDebuggees(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDebuggeesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_devtools_clouddebugger_v2_data_pb.Debuggee.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Debuggee debuggees = 1;
 * @return {!Array<!proto.google.devtools.clouddebugger.v2.Debuggee>}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.prototype.getDebuggeesList = function() {
  return /** @type{!Array<!proto.google.devtools.clouddebugger.v2.Debuggee>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_devtools_clouddebugger_v2_data_pb.Debuggee, 1));
};


/**
 * @param {!Array<!proto.google.devtools.clouddebugger.v2.Debuggee>} value
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse} returns this
*/
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.prototype.setDebuggeesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.devtools.clouddebugger.v2.Debuggee=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.devtools.clouddebugger.v2.Debuggee}
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.prototype.addDebuggees = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.devtools.clouddebugger.v2.Debuggee, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse} returns this
 */
proto.google.devtools.clouddebugger.v2.ListDebuggeesResponse.prototype.clearDebuggeesList = function() {
  return this.setDebuggeesList([]);
};


goog.object.extend(exports, proto.google.devtools.clouddebugger.v2);
