// source: google/bigtable/v2/bigtable.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_bigtable_v2_data_pb = require('../../../google/bigtable/v2/data_pb.js');
goog.object.extend(proto, google_bigtable_v2_data_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_rpc_status_pb = require('../../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.google.bigtable.v2.CheckAndMutateRowRequest', null, global);
goog.exportSymbol('proto.google.bigtable.v2.CheckAndMutateRowResponse', null, global);
goog.exportSymbol('proto.google.bigtable.v2.MutateRowRequest', null, global);
goog.exportSymbol('proto.google.bigtable.v2.MutateRowResponse', null, global);
goog.exportSymbol('proto.google.bigtable.v2.MutateRowsRequest', null, global);
goog.exportSymbol('proto.google.bigtable.v2.MutateRowsRequest.Entry', null, global);
goog.exportSymbol('proto.google.bigtable.v2.MutateRowsResponse', null, global);
goog.exportSymbol('proto.google.bigtable.v2.MutateRowsResponse.Entry', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadModifyWriteRowRequest', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadModifyWriteRowResponse', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadRowsRequest', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadRowsResponse', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadRowsResponse.CellChunk', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadRowsResponse.CellChunk.RowStatusCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.SampleRowKeysRequest', null, global);
goog.exportSymbol('proto.google.bigtable.v2.SampleRowKeysResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ReadRowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.ReadRowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ReadRowsRequest.displayName = 'proto.google.bigtable.v2.ReadRowsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ReadRowsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.ReadRowsResponse.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.ReadRowsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ReadRowsResponse.displayName = 'proto.google.bigtable.v2.ReadRowsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.ReadRowsResponse.CellChunk.repeatedFields_, proto.google.bigtable.v2.ReadRowsResponse.CellChunk.oneofGroups_);
};
goog.inherits(proto.google.bigtable.v2.ReadRowsResponse.CellChunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ReadRowsResponse.CellChunk.displayName = 'proto.google.bigtable.v2.ReadRowsResponse.CellChunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.SampleRowKeysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.SampleRowKeysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.SampleRowKeysRequest.displayName = 'proto.google.bigtable.v2.SampleRowKeysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.SampleRowKeysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.SampleRowKeysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.SampleRowKeysResponse.displayName = 'proto.google.bigtable.v2.SampleRowKeysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.MutateRowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.MutateRowRequest.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.MutateRowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.MutateRowRequest.displayName = 'proto.google.bigtable.v2.MutateRowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.MutateRowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.MutateRowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.MutateRowResponse.displayName = 'proto.google.bigtable.v2.MutateRowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.MutateRowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.MutateRowsRequest.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.MutateRowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.MutateRowsRequest.displayName = 'proto.google.bigtable.v2.MutateRowsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.MutateRowsRequest.Entry.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.MutateRowsRequest.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.MutateRowsRequest.Entry.displayName = 'proto.google.bigtable.v2.MutateRowsRequest.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.MutateRowsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.MutateRowsResponse.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.MutateRowsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.MutateRowsResponse.displayName = 'proto.google.bigtable.v2.MutateRowsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.MutateRowsResponse.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.MutateRowsResponse.Entry.displayName = 'proto.google.bigtable.v2.MutateRowsResponse.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.CheckAndMutateRowRequest.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.CheckAndMutateRowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.CheckAndMutateRowRequest.displayName = 'proto.google.bigtable.v2.CheckAndMutateRowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.CheckAndMutateRowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.CheckAndMutateRowResponse.displayName = 'proto.google.bigtable.v2.CheckAndMutateRowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.ReadModifyWriteRowRequest.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.ReadModifyWriteRowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ReadModifyWriteRowRequest.displayName = 'proto.google.bigtable.v2.ReadModifyWriteRowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.ReadModifyWriteRowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ReadModifyWriteRowResponse.displayName = 'proto.google.bigtable.v2.ReadModifyWriteRowResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ReadRowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ReadRowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadRowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appProfileId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    rows: (f = msg.getRows()) && google_bigtable_v2_data_pb.RowSet.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && google_bigtable_v2_data_pb.RowFilter.toObject(includeInstance, f),
    rowsLimit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ReadRowsRequest}
 */
proto.google.bigtable.v2.ReadRowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ReadRowsRequest;
  return proto.google.bigtable.v2.ReadRowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ReadRowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ReadRowsRequest}
 */
proto.google.bigtable.v2.ReadRowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppProfileId(value);
      break;
    case 2:
      var value = new google_bigtable_v2_data_pb.RowSet;
      reader.readMessage(value,google_bigtable_v2_data_pb.RowSet.deserializeBinaryFromReader);
      msg.setRows(value);
      break;
    case 3:
      var value = new google_bigtable_v2_data_pb.RowFilter;
      reader.readMessage(value,google_bigtable_v2_data_pb.RowFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRowsLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ReadRowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ReadRowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadRowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppProfileId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRows();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_bigtable_v2_data_pb.RowSet.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_bigtable_v2_data_pb.RowFilter.serializeBinaryToWriter
    );
  }
  f = message.getRowsLimit();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.ReadRowsRequest} returns this
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string app_profile_id = 5;
 * @return {string}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.getAppProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.ReadRowsRequest} returns this
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.setAppProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional RowSet rows = 2;
 * @return {?proto.google.bigtable.v2.RowSet}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.getRows = function() {
  return /** @type{?proto.google.bigtable.v2.RowSet} */ (
    jspb.Message.getWrapperField(this, google_bigtable_v2_data_pb.RowSet, 2));
};


/**
 * @param {?proto.google.bigtable.v2.RowSet|undefined} value
 * @return {!proto.google.bigtable.v2.ReadRowsRequest} returns this
*/
proto.google.bigtable.v2.ReadRowsRequest.prototype.setRows = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadRowsRequest} returns this
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.clearRows = function() {
  return this.setRows(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.hasRows = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RowFilter filter = 3;
 * @return {?proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.getFilter = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter} */ (
    jspb.Message.getWrapperField(this, google_bigtable_v2_data_pb.RowFilter, 3));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter|undefined} value
 * @return {!proto.google.bigtable.v2.ReadRowsRequest} returns this
*/
proto.google.bigtable.v2.ReadRowsRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadRowsRequest} returns this
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 rows_limit = 4;
 * @return {number}
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.getRowsLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.ReadRowsRequest} returns this
 */
proto.google.bigtable.v2.ReadRowsRequest.prototype.setRowsLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.ReadRowsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ReadRowsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ReadRowsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadRowsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    chunksList: jspb.Message.toObjectList(msg.getChunksList(),
    proto.google.bigtable.v2.ReadRowsResponse.CellChunk.toObject, includeInstance),
    lastScannedRowKey: msg.getLastScannedRowKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse}
 */
proto.google.bigtable.v2.ReadRowsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ReadRowsResponse;
  return proto.google.bigtable.v2.ReadRowsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ReadRowsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse}
 */
proto.google.bigtable.v2.ReadRowsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.v2.ReadRowsResponse.CellChunk;
      reader.readMessage(value,proto.google.bigtable.v2.ReadRowsResponse.CellChunk.deserializeBinaryFromReader);
      msg.addChunks(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLastScannedRowKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ReadRowsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ReadRowsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadRowsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChunksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.bigtable.v2.ReadRowsResponse.CellChunk.serializeBinaryToWriter
    );
  }
  f = message.getLastScannedRowKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.repeatedFields_ = [5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.oneofGroups_ = [[8,9]];

/**
 * @enum {number}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.RowStatusCase = {
  ROW_STATUS_NOT_SET: 0,
  RESET_ROW: 8,
  COMMIT_ROW: 9
};

/**
 * @return {proto.google.bigtable.v2.ReadRowsResponse.CellChunk.RowStatusCase}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getRowStatusCase = function() {
  return /** @type {proto.google.bigtable.v2.ReadRowsResponse.CellChunk.RowStatusCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.ReadRowsResponse.CellChunk.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ReadRowsResponse.CellChunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowKey: msg.getRowKey_asB64(),
    familyName: (f = msg.getFamilyName()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    qualifier: (f = msg.getQualifier()) && google_protobuf_wrappers_pb.BytesValue.toObject(includeInstance, f),
    timestampMicros: jspb.Message.getFieldWithDefault(msg, 4, 0),
    labelsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    value: msg.getValue_asB64(),
    valueSize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    resetRow: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    commitRow: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ReadRowsResponse.CellChunk;
  return proto.google.bigtable.v2.ReadRowsResponse.CellChunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKey(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setFamilyName(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.BytesValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BytesValue.deserializeBinaryFromReader);
      msg.setQualifier(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampMicros(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabels(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValueSize(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResetRow(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCommitRow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ReadRowsResponse.CellChunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFamilyName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getQualifier();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.BytesValue.serializeBinaryToWriter
    );
  }
  f = message.getTimestampMicros();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getValueSize();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional bytes row_key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getRowKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes row_key = 1;
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {string}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getRowKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKey()));
};


/**
 * optional bytes row_key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getRowKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setRowKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue family_name = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getFamilyName = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
*/
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setFamilyName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.clearFamilyName = function() {
  return this.setFamilyName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.hasFamilyName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.BytesValue qualifier = 3;
 * @return {?proto.google.protobuf.BytesValue}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getQualifier = function() {
  return /** @type{?proto.google.protobuf.BytesValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BytesValue, 3));
};


/**
 * @param {?proto.google.protobuf.BytesValue|undefined} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
*/
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setQualifier = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.clearQualifier = function() {
  return this.setQualifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.hasQualifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 timestamp_micros = 4;
 * @return {number}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getTimestampMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setTimestampMicros = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string labels = 5;
 * @return {!Array<string>}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setLabelsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.addLabels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.clearLabelsList = function() {
  return this.setLabelsList([]);
};


/**
 * optional bytes value = 6;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes value = 6;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int32 value_size = 7;
 * @return {number}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getValueSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setValueSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool reset_row = 8;
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getResetRow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setResetRow = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.google.bigtable.v2.ReadRowsResponse.CellChunk.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.clearResetRow = function() {
  return jspb.Message.setOneofField(this, 8, proto.google.bigtable.v2.ReadRowsResponse.CellChunk.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.hasResetRow = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool commit_row = 9;
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.getCommitRow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.setCommitRow = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.google.bigtable.v2.ReadRowsResponse.CellChunk.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.clearCommitRow = function() {
  return jspb.Message.setOneofField(this, 9, proto.google.bigtable.v2.ReadRowsResponse.CellChunk.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadRowsResponse.CellChunk.prototype.hasCommitRow = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated CellChunk chunks = 1;
 * @return {!Array<!proto.google.bigtable.v2.ReadRowsResponse.CellChunk>}
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.getChunksList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.ReadRowsResponse.CellChunk>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.ReadRowsResponse.CellChunk, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.ReadRowsResponse.CellChunk>} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse} returns this
*/
proto.google.bigtable.v2.ReadRowsResponse.prototype.setChunksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.ReadRowsResponse.CellChunk}
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.addChunks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.v2.ReadRowsResponse.CellChunk, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.ReadRowsResponse} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.clearChunksList = function() {
  return this.setChunksList([]);
};


/**
 * optional bytes last_scanned_row_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.getLastScannedRowKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes last_scanned_row_key = 2;
 * This is a type-conversion wrapper around `getLastScannedRowKey()`
 * @return {string}
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.getLastScannedRowKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLastScannedRowKey()));
};


/**
 * optional bytes last_scanned_row_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLastScannedRowKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.getLastScannedRowKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLastScannedRowKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ReadRowsResponse} returns this
 */
proto.google.bigtable.v2.ReadRowsResponse.prototype.setLastScannedRowKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.SampleRowKeysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.SampleRowKeysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.SampleRowKeysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.SampleRowKeysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appProfileId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.SampleRowKeysRequest}
 */
proto.google.bigtable.v2.SampleRowKeysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.SampleRowKeysRequest;
  return proto.google.bigtable.v2.SampleRowKeysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.SampleRowKeysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.SampleRowKeysRequest}
 */
proto.google.bigtable.v2.SampleRowKeysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppProfileId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.SampleRowKeysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.SampleRowKeysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.SampleRowKeysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.SampleRowKeysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppProfileId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.SampleRowKeysRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.SampleRowKeysRequest} returns this
 */
proto.google.bigtable.v2.SampleRowKeysRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string app_profile_id = 2;
 * @return {string}
 */
proto.google.bigtable.v2.SampleRowKeysRequest.prototype.getAppProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.SampleRowKeysRequest} returns this
 */
proto.google.bigtable.v2.SampleRowKeysRequest.prototype.setAppProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.SampleRowKeysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.SampleRowKeysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.SampleRowKeysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowKey: msg.getRowKey_asB64(),
    offsetBytes: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.SampleRowKeysResponse}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.SampleRowKeysResponse;
  return proto.google.bigtable.v2.SampleRowKeysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.SampleRowKeysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.SampleRowKeysResponse}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffsetBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.SampleRowKeysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.SampleRowKeysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.SampleRowKeysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOffsetBytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional bytes row_key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.getRowKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes row_key = 1;
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {string}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.getRowKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKey()));
};


/**
 * optional bytes row_key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.getRowKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.SampleRowKeysResponse} returns this
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.setRowKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int64 offset_bytes = 2;
 * @return {number}
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.getOffsetBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.SampleRowKeysResponse} returns this
 */
proto.google.bigtable.v2.SampleRowKeysResponse.prototype.setOffsetBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.MutateRowRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.MutateRowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.MutateRowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appProfileId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rowKey: msg.getRowKey_asB64(),
    mutationsList: jspb.Message.toObjectList(msg.getMutationsList(),
    google_bigtable_v2_data_pb.Mutation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.MutateRowRequest}
 */
proto.google.bigtable.v2.MutateRowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.MutateRowRequest;
  return proto.google.bigtable.v2.MutateRowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.MutateRowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.MutateRowRequest}
 */
proto.google.bigtable.v2.MutateRowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppProfileId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKey(value);
      break;
    case 3:
      var value = new google_bigtable_v2_data_pb.Mutation;
      reader.readMessage(value,google_bigtable_v2_data_pb.Mutation.deserializeBinaryFromReader);
      msg.addMutations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.MutateRowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.MutateRowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppProfileId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRowKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getMutationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_bigtable_v2_data_pb.Mutation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.MutateRowRequest} returns this
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string app_profile_id = 4;
 * @return {string}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.getAppProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.MutateRowRequest} returns this
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.setAppProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes row_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.getRowKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes row_key = 2;
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {string}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.getRowKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKey()));
};


/**
 * optional bytes row_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.getRowKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.MutateRowRequest} returns this
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.setRowKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated Mutation mutations = 3;
 * @return {!Array<!proto.google.bigtable.v2.Mutation>}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.getMutationsList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.Mutation>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_bigtable_v2_data_pb.Mutation, 3));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.Mutation>} value
 * @return {!proto.google.bigtable.v2.MutateRowRequest} returns this
*/
proto.google.bigtable.v2.MutateRowRequest.prototype.setMutationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.bigtable.v2.Mutation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Mutation}
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.addMutations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.bigtable.v2.Mutation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.MutateRowRequest} returns this
 */
proto.google.bigtable.v2.MutateRowRequest.prototype.clearMutationsList = function() {
  return this.setMutationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.MutateRowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.MutateRowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.MutateRowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.MutateRowResponse}
 */
proto.google.bigtable.v2.MutateRowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.MutateRowResponse;
  return proto.google.bigtable.v2.MutateRowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.MutateRowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.MutateRowResponse}
 */
proto.google.bigtable.v2.MutateRowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.MutateRowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.MutateRowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.MutateRowsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.MutateRowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.MutateRowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appProfileId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.google.bigtable.v2.MutateRowsRequest.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.MutateRowsRequest}
 */
proto.google.bigtable.v2.MutateRowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.MutateRowsRequest;
  return proto.google.bigtable.v2.MutateRowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.MutateRowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.MutateRowsRequest}
 */
proto.google.bigtable.v2.MutateRowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppProfileId(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.MutateRowsRequest.Entry;
      reader.readMessage(value,proto.google.bigtable.v2.MutateRowsRequest.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.MutateRowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.MutateRowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppProfileId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.bigtable.v2.MutateRowsRequest.Entry.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.MutateRowsRequest.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.MutateRowsRequest.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowKey: msg.getRowKey_asB64(),
    mutationsList: jspb.Message.toObjectList(msg.getMutationsList(),
    google_bigtable_v2_data_pb.Mutation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.MutateRowsRequest.Entry}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.MutateRowsRequest.Entry;
  return proto.google.bigtable.v2.MutateRowsRequest.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.MutateRowsRequest.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.MutateRowsRequest.Entry}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKey(value);
      break;
    case 2:
      var value = new google_bigtable_v2_data_pb.Mutation;
      reader.readMessage(value,google_bigtable_v2_data_pb.Mutation.deserializeBinaryFromReader);
      msg.addMutations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.MutateRowsRequest.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.MutateRowsRequest.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMutationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_bigtable_v2_data_pb.Mutation.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes row_key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.getRowKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes row_key = 1;
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {string}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.getRowKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKey()));
};


/**
 * optional bytes row_key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.getRowKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.MutateRowsRequest.Entry} returns this
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.setRowKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated Mutation mutations = 2;
 * @return {!Array<!proto.google.bigtable.v2.Mutation>}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.getMutationsList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.Mutation>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_bigtable_v2_data_pb.Mutation, 2));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.Mutation>} value
 * @return {!proto.google.bigtable.v2.MutateRowsRequest.Entry} returns this
*/
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.setMutationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.bigtable.v2.Mutation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Mutation}
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.addMutations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.bigtable.v2.Mutation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.MutateRowsRequest.Entry} returns this
 */
proto.google.bigtable.v2.MutateRowsRequest.Entry.prototype.clearMutationsList = function() {
  return this.setMutationsList([]);
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.MutateRowsRequest} returns this
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string app_profile_id = 3;
 * @return {string}
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.getAppProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.MutateRowsRequest} returns this
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.setAppProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Entry entries = 2;
 * @return {!Array<!proto.google.bigtable.v2.MutateRowsRequest.Entry>}
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.MutateRowsRequest.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.MutateRowsRequest.Entry, 2));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.MutateRowsRequest.Entry>} value
 * @return {!proto.google.bigtable.v2.MutateRowsRequest} returns this
*/
proto.google.bigtable.v2.MutateRowsRequest.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.bigtable.v2.MutateRowsRequest.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.MutateRowsRequest.Entry}
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.bigtable.v2.MutateRowsRequest.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.MutateRowsRequest} returns this
 */
proto.google.bigtable.v2.MutateRowsRequest.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.MutateRowsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.MutateRowsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.MutateRowsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.MutateRowsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.google.bigtable.v2.MutateRowsResponse.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.MutateRowsResponse}
 */
proto.google.bigtable.v2.MutateRowsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.MutateRowsResponse;
  return proto.google.bigtable.v2.MutateRowsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.MutateRowsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.MutateRowsResponse}
 */
proto.google.bigtable.v2.MutateRowsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.v2.MutateRowsResponse.Entry;
      reader.readMessage(value,proto.google.bigtable.v2.MutateRowsResponse.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.MutateRowsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.MutateRowsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.bigtable.v2.MutateRowsResponse.Entry.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.MutateRowsResponse.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.MutateRowsResponse.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.MutateRowsResponse.Entry}
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.MutateRowsResponse.Entry;
  return proto.google.bigtable.v2.MutateRowsResponse.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.MutateRowsResponse.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.MutateRowsResponse.Entry}
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    case 2:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.MutateRowsResponse.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.MutateRowsResponse.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 index = 1;
 * @return {number}
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.MutateRowsResponse.Entry} returns this
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.rpc.Status status = 2;
 * @return {?proto.google.rpc.Status}
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 2));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.google.bigtable.v2.MutateRowsResponse.Entry} returns this
*/
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.MutateRowsResponse.Entry} returns this
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.MutateRowsResponse.Entry.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Entry entries = 1;
 * @return {!Array<!proto.google.bigtable.v2.MutateRowsResponse.Entry>}
 */
proto.google.bigtable.v2.MutateRowsResponse.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.MutateRowsResponse.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.MutateRowsResponse.Entry, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.MutateRowsResponse.Entry>} value
 * @return {!proto.google.bigtable.v2.MutateRowsResponse} returns this
*/
proto.google.bigtable.v2.MutateRowsResponse.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.v2.MutateRowsResponse.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.MutateRowsResponse.Entry}
 */
proto.google.bigtable.v2.MutateRowsResponse.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.v2.MutateRowsResponse.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.MutateRowsResponse} returns this
 */
proto.google.bigtable.v2.MutateRowsResponse.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.CheckAndMutateRowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.CheckAndMutateRowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appProfileId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    rowKey: msg.getRowKey_asB64(),
    predicateFilter: (f = msg.getPredicateFilter()) && google_bigtable_v2_data_pb.RowFilter.toObject(includeInstance, f),
    trueMutationsList: jspb.Message.toObjectList(msg.getTrueMutationsList(),
    google_bigtable_v2_data_pb.Mutation.toObject, includeInstance),
    falseMutationsList: jspb.Message.toObjectList(msg.getFalseMutationsList(),
    google_bigtable_v2_data_pb.Mutation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.CheckAndMutateRowRequest;
  return proto.google.bigtable.v2.CheckAndMutateRowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.CheckAndMutateRowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppProfileId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKey(value);
      break;
    case 6:
      var value = new google_bigtable_v2_data_pb.RowFilter;
      reader.readMessage(value,google_bigtable_v2_data_pb.RowFilter.deserializeBinaryFromReader);
      msg.setPredicateFilter(value);
      break;
    case 4:
      var value = new google_bigtable_v2_data_pb.Mutation;
      reader.readMessage(value,google_bigtable_v2_data_pb.Mutation.deserializeBinaryFromReader);
      msg.addTrueMutations(value);
      break;
    case 5:
      var value = new google_bigtable_v2_data_pb.Mutation;
      reader.readMessage(value,google_bigtable_v2_data_pb.Mutation.deserializeBinaryFromReader);
      msg.addFalseMutations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.CheckAndMutateRowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.CheckAndMutateRowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppProfileId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRowKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPredicateFilter();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_bigtable_v2_data_pb.RowFilter.serializeBinaryToWriter
    );
  }
  f = message.getTrueMutationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      google_bigtable_v2_data_pb.Mutation.serializeBinaryToWriter
    );
  }
  f = message.getFalseMutationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      google_bigtable_v2_data_pb.Mutation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string app_profile_id = 7;
 * @return {string}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getAppProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.setAppProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bytes row_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getRowKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes row_key = 2;
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {string}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getRowKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKey()));
};


/**
 * optional bytes row_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getRowKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.setRowKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional RowFilter predicate_filter = 6;
 * @return {?proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getPredicateFilter = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter} */ (
    jspb.Message.getWrapperField(this, google_bigtable_v2_data_pb.RowFilter, 6));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter|undefined} value
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
*/
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.setPredicateFilter = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.clearPredicateFilter = function() {
  return this.setPredicateFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.hasPredicateFilter = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Mutation true_mutations = 4;
 * @return {!Array<!proto.google.bigtable.v2.Mutation>}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getTrueMutationsList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.Mutation>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_bigtable_v2_data_pb.Mutation, 4));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.Mutation>} value
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
*/
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.setTrueMutationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.bigtable.v2.Mutation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Mutation}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.addTrueMutations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.bigtable.v2.Mutation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.clearTrueMutationsList = function() {
  return this.setTrueMutationsList([]);
};


/**
 * repeated Mutation false_mutations = 5;
 * @return {!Array<!proto.google.bigtable.v2.Mutation>}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.getFalseMutationsList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.Mutation>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_bigtable_v2_data_pb.Mutation, 5));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.Mutation>} value
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
*/
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.setFalseMutationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.google.bigtable.v2.Mutation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Mutation}
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.addFalseMutations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.bigtable.v2.Mutation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowRequest} returns this
 */
proto.google.bigtable.v2.CheckAndMutateRowRequest.prototype.clearFalseMutationsList = function() {
  return this.setFalseMutationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.CheckAndMutateRowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.CheckAndMutateRowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    predicateMatched: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowResponse}
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.CheckAndMutateRowResponse;
  return proto.google.bigtable.v2.CheckAndMutateRowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.CheckAndMutateRowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowResponse}
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPredicateMatched(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.CheckAndMutateRowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.CheckAndMutateRowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPredicateMatched();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool predicate_matched = 1;
 * @return {boolean}
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.prototype.getPredicateMatched = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.v2.CheckAndMutateRowResponse} returns this
 */
proto.google.bigtable.v2.CheckAndMutateRowResponse.prototype.setPredicateMatched = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ReadModifyWriteRowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appProfileId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rowKey: msg.getRowKey_asB64(),
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    google_bigtable_v2_data_pb.ReadModifyWriteRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowRequest}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ReadModifyWriteRowRequest;
  return proto.google.bigtable.v2.ReadModifyWriteRowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowRequest}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppProfileId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKey(value);
      break;
    case 3:
      var value = new google_bigtable_v2_data_pb.ReadModifyWriteRule;
      reader.readMessage(value,google_bigtable_v2_data_pb.ReadModifyWriteRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ReadModifyWriteRowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppProfileId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRowKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_bigtable_v2_data_pb.ReadModifyWriteRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string app_profile_id = 4;
 * @return {string}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.getAppProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.setAppProfileId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes row_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.getRowKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes row_key = 2;
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {string}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.getRowKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKey()));
};


/**
 * optional bytes row_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.getRowKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.setRowKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated ReadModifyWriteRule rules = 3;
 * @return {!Array<!proto.google.bigtable.v2.ReadModifyWriteRule>}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.ReadModifyWriteRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_bigtable_v2_data_pb.ReadModifyWriteRule, 3));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.ReadModifyWriteRule>} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} returns this
*/
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule}
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.bigtable.v2.ReadModifyWriteRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowRequest} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRowRequest.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ReadModifyWriteRowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    row: (f = msg.getRow()) && google_bigtable_v2_data_pb.Row.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowResponse}
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ReadModifyWriteRowResponse;
  return proto.google.bigtable.v2.ReadModifyWriteRowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowResponse}
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_bigtable_v2_data_pb.Row;
      reader.readMessage(value,google_bigtable_v2_data_pb.Row.deserializeBinaryFromReader);
      msg.setRow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ReadModifyWriteRowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_bigtable_v2_data_pb.Row.serializeBinaryToWriter
    );
  }
};


/**
 * optional Row row = 1;
 * @return {?proto.google.bigtable.v2.Row}
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.prototype.getRow = function() {
  return /** @type{?proto.google.bigtable.v2.Row} */ (
    jspb.Message.getWrapperField(this, google_bigtable_v2_data_pb.Row, 1));
};


/**
 * @param {?proto.google.bigtable.v2.Row|undefined} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowResponse} returns this
*/
proto.google.bigtable.v2.ReadModifyWriteRowResponse.prototype.setRow = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRowResponse} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.prototype.clearRow = function() {
  return this.setRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadModifyWriteRowResponse.prototype.hasRow = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.google.bigtable.v2);
