// source: google/bigtable/v2/data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.google.bigtable.v2.Cell', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Column', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ColumnRange', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ColumnRange.EndQualifierCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ColumnRange.StartQualifierCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Family', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Mutation', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Mutation.DeleteFromColumn', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Mutation.DeleteFromFamily', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Mutation.DeleteFromRow', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Mutation.MutationCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Mutation.SetCell', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadModifyWriteRule', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ReadModifyWriteRule.RuleCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.Row', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowFilter', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowFilter.Chain', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowFilter.Condition', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowFilter.FilterCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowFilter.Interleave', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowRange', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowRange.EndKeyCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowRange.StartKeyCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.RowSet', null, global);
goog.exportSymbol('proto.google.bigtable.v2.TimestampRange', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ValueRange', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ValueRange.EndValueCase', null, global);
goog.exportSymbol('proto.google.bigtable.v2.ValueRange.StartValueCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.Row.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Row.displayName = 'proto.google.bigtable.v2.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Family = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.Family.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.Family, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Family.displayName = 'proto.google.bigtable.v2.Family';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Column = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.Column.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.Column, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Column.displayName = 'proto.google.bigtable.v2.Column';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Cell = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.Cell.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.Cell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Cell.displayName = 'proto.google.bigtable.v2.Cell';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.RowRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.v2.RowRange.oneofGroups_);
};
goog.inherits(proto.google.bigtable.v2.RowRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.RowRange.displayName = 'proto.google.bigtable.v2.RowRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.RowSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.RowSet.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.RowSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.RowSet.displayName = 'proto.google.bigtable.v2.RowSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ColumnRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.v2.ColumnRange.oneofGroups_);
};
goog.inherits(proto.google.bigtable.v2.ColumnRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ColumnRange.displayName = 'proto.google.bigtable.v2.ColumnRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.TimestampRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.TimestampRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.TimestampRange.displayName = 'proto.google.bigtable.v2.TimestampRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ValueRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.v2.ValueRange.oneofGroups_);
};
goog.inherits(proto.google.bigtable.v2.ValueRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ValueRange.displayName = 'proto.google.bigtable.v2.ValueRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.RowFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.v2.RowFilter.oneofGroups_);
};
goog.inherits(proto.google.bigtable.v2.RowFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.RowFilter.displayName = 'proto.google.bigtable.v2.RowFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.RowFilter.Chain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.RowFilter.Chain.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.RowFilter.Chain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.RowFilter.Chain.displayName = 'proto.google.bigtable.v2.RowFilter.Chain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.RowFilter.Interleave = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.v2.RowFilter.Interleave.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.v2.RowFilter.Interleave, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.RowFilter.Interleave.displayName = 'proto.google.bigtable.v2.RowFilter.Interleave';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.RowFilter.Condition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.RowFilter.Condition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.RowFilter.Condition.displayName = 'proto.google.bigtable.v2.RowFilter.Condition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Mutation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.v2.Mutation.oneofGroups_);
};
goog.inherits(proto.google.bigtable.v2.Mutation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Mutation.displayName = 'proto.google.bigtable.v2.Mutation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Mutation.SetCell = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.Mutation.SetCell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Mutation.SetCell.displayName = 'proto.google.bigtable.v2.Mutation.SetCell';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.Mutation.DeleteFromColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Mutation.DeleteFromColumn.displayName = 'proto.google.bigtable.v2.Mutation.DeleteFromColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.Mutation.DeleteFromFamily, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Mutation.DeleteFromFamily.displayName = 'proto.google.bigtable.v2.Mutation.DeleteFromFamily';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.Mutation.DeleteFromRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.v2.Mutation.DeleteFromRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.Mutation.DeleteFromRow.displayName = 'proto.google.bigtable.v2.Mutation.DeleteFromRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.v2.ReadModifyWriteRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.v2.ReadModifyWriteRule.oneofGroups_);
};
goog.inherits(proto.google.bigtable.v2.ReadModifyWriteRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.v2.ReadModifyWriteRule.displayName = 'proto.google.bigtable.v2.ReadModifyWriteRule';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.Row.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: msg.getKey_asB64(),
    familiesList: jspb.Message.toObjectList(msg.getFamiliesList(),
    proto.google.bigtable.v2.Family.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Row}
 */
proto.google.bigtable.v2.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Row;
  return proto.google.bigtable.v2.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Row}
 */
proto.google.bigtable.v2.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.Family;
      reader.readMessage(value,proto.google.bigtable.v2.Family.deserializeBinaryFromReader);
      msg.addFamilies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFamiliesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.bigtable.v2.Family.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.Row.prototype.getKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key = 1;
 * This is a type-conversion wrapper around `getKey()`
 * @return {string}
 */
proto.google.bigtable.v2.Row.prototype.getKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKey()));
};


/**
 * optional bytes key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Row.prototype.getKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.Row} returns this
 */
proto.google.bigtable.v2.Row.prototype.setKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated Family families = 2;
 * @return {!Array<!proto.google.bigtable.v2.Family>}
 */
proto.google.bigtable.v2.Row.prototype.getFamiliesList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.Family>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.Family, 2));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.Family>} value
 * @return {!proto.google.bigtable.v2.Row} returns this
*/
proto.google.bigtable.v2.Row.prototype.setFamiliesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.bigtable.v2.Family=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Family}
 */
proto.google.bigtable.v2.Row.prototype.addFamilies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.bigtable.v2.Family, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.Row} returns this
 */
proto.google.bigtable.v2.Row.prototype.clearFamiliesList = function() {
  return this.setFamiliesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.Family.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Family.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Family.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Family} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Family.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.google.bigtable.v2.Column.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Family}
 */
proto.google.bigtable.v2.Family.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Family;
  return proto.google.bigtable.v2.Family.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Family} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Family}
 */
proto.google.bigtable.v2.Family.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.Column;
      reader.readMessage(value,proto.google.bigtable.v2.Column.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Family.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Family.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Family} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Family.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.bigtable.v2.Column.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.Family.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.Family} returns this
 */
proto.google.bigtable.v2.Family.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Column columns = 2;
 * @return {!Array<!proto.google.bigtable.v2.Column>}
 */
proto.google.bigtable.v2.Family.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.Column>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.Column, 2));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.Column>} value
 * @return {!proto.google.bigtable.v2.Family} returns this
*/
proto.google.bigtable.v2.Family.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.bigtable.v2.Column=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Column}
 */
proto.google.bigtable.v2.Family.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.bigtable.v2.Column, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.Family} returns this
 */
proto.google.bigtable.v2.Family.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.Column.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Column.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Column.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Column} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Column.toObject = function(includeInstance, msg) {
  var f, obj = {
    qualifier: msg.getQualifier_asB64(),
    cellsList: jspb.Message.toObjectList(msg.getCellsList(),
    proto.google.bigtable.v2.Cell.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Column}
 */
proto.google.bigtable.v2.Column.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Column;
  return proto.google.bigtable.v2.Column.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Column} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Column}
 */
proto.google.bigtable.v2.Column.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setQualifier(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.Cell;
      reader.readMessage(value,proto.google.bigtable.v2.Cell.deserializeBinaryFromReader);
      msg.addCells(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Column.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Column.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Column} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Column.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQualifier_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCellsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.bigtable.v2.Cell.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes qualifier = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.Column.prototype.getQualifier = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes qualifier = 1;
 * This is a type-conversion wrapper around `getQualifier()`
 * @return {string}
 */
proto.google.bigtable.v2.Column.prototype.getQualifier_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getQualifier()));
};


/**
 * optional bytes qualifier = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getQualifier()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Column.prototype.getQualifier_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getQualifier()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.Column} returns this
 */
proto.google.bigtable.v2.Column.prototype.setQualifier = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated Cell cells = 2;
 * @return {!Array<!proto.google.bigtable.v2.Cell>}
 */
proto.google.bigtable.v2.Column.prototype.getCellsList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.Cell>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.Cell, 2));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.Cell>} value
 * @return {!proto.google.bigtable.v2.Column} returns this
*/
proto.google.bigtable.v2.Column.prototype.setCellsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.bigtable.v2.Cell=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Cell}
 */
proto.google.bigtable.v2.Column.prototype.addCells = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.bigtable.v2.Cell, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.Column} returns this
 */
proto.google.bigtable.v2.Column.prototype.clearCellsList = function() {
  return this.setCellsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.Cell.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Cell.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Cell.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Cell} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Cell.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestampMicros: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: msg.getValue_asB64(),
    labelsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Cell}
 */
proto.google.bigtable.v2.Cell.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Cell;
  return proto.google.bigtable.v2.Cell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Cell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Cell}
 */
proto.google.bigtable.v2.Cell.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampMicros(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Cell.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Cell.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Cell} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Cell.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestampMicros();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional int64 timestamp_micros = 1;
 * @return {number}
 */
proto.google.bigtable.v2.Cell.prototype.getTimestampMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.Cell} returns this
 */
proto.google.bigtable.v2.Cell.prototype.setTimestampMicros = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes value = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.Cell.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.google.bigtable.v2.Cell.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Cell.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.Cell} returns this
 */
proto.google.bigtable.v2.Cell.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated string labels = 3;
 * @return {!Array<string>}
 */
proto.google.bigtable.v2.Cell.prototype.getLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.bigtable.v2.Cell} returns this
 */
proto.google.bigtable.v2.Cell.prototype.setLabelsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.Cell} returns this
 */
proto.google.bigtable.v2.Cell.prototype.addLabels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.Cell} returns this
 */
proto.google.bigtable.v2.Cell.prototype.clearLabelsList = function() {
  return this.setLabelsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.v2.RowRange.oneofGroups_ = [[1,2],[3,4]];

/**
 * @enum {number}
 */
proto.google.bigtable.v2.RowRange.StartKeyCase = {
  START_KEY_NOT_SET: 0,
  START_KEY_CLOSED: 1,
  START_KEY_OPEN: 2
};

/**
 * @return {proto.google.bigtable.v2.RowRange.StartKeyCase}
 */
proto.google.bigtable.v2.RowRange.prototype.getStartKeyCase = function() {
  return /** @type {proto.google.bigtable.v2.RowRange.StartKeyCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.RowRange.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.google.bigtable.v2.RowRange.EndKeyCase = {
  END_KEY_NOT_SET: 0,
  END_KEY_OPEN: 3,
  END_KEY_CLOSED: 4
};

/**
 * @return {proto.google.bigtable.v2.RowRange.EndKeyCase}
 */
proto.google.bigtable.v2.RowRange.prototype.getEndKeyCase = function() {
  return /** @type {proto.google.bigtable.v2.RowRange.EndKeyCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.RowRange.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.RowRange.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.RowRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.RowRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startKeyClosed: msg.getStartKeyClosed_asB64(),
    startKeyOpen: msg.getStartKeyOpen_asB64(),
    endKeyOpen: msg.getEndKeyOpen_asB64(),
    endKeyClosed: msg.getEndKeyClosed_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.RowRange}
 */
proto.google.bigtable.v2.RowRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.RowRange;
  return proto.google.bigtable.v2.RowRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.RowRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.RowRange}
 */
proto.google.bigtable.v2.RowRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStartKeyClosed(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStartKeyOpen(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEndKeyOpen(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEndKeyClosed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.RowRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.RowRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bytes start_key_closed = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.RowRange.prototype.getStartKeyClosed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes start_key_closed = 1;
 * This is a type-conversion wrapper around `getStartKeyClosed()`
 * @return {string}
 */
proto.google.bigtable.v2.RowRange.prototype.getStartKeyClosed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStartKeyClosed()));
};


/**
 * optional bytes start_key_closed = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStartKeyClosed()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowRange.prototype.getStartKeyClosed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStartKeyClosed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.setStartKeyClosed = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.google.bigtable.v2.RowRange.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.clearStartKeyClosed = function() {
  return jspb.Message.setOneofField(this, 1, proto.google.bigtable.v2.RowRange.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowRange.prototype.hasStartKeyClosed = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes start_key_open = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.RowRange.prototype.getStartKeyOpen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes start_key_open = 2;
 * This is a type-conversion wrapper around `getStartKeyOpen()`
 * @return {string}
 */
proto.google.bigtable.v2.RowRange.prototype.getStartKeyOpen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStartKeyOpen()));
};


/**
 * optional bytes start_key_open = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStartKeyOpen()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowRange.prototype.getStartKeyOpen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStartKeyOpen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.setStartKeyOpen = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.v2.RowRange.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.clearStartKeyOpen = function() {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.v2.RowRange.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowRange.prototype.hasStartKeyOpen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes end_key_open = 3;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.RowRange.prototype.getEndKeyOpen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes end_key_open = 3;
 * This is a type-conversion wrapper around `getEndKeyOpen()`
 * @return {string}
 */
proto.google.bigtable.v2.RowRange.prototype.getEndKeyOpen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEndKeyOpen()));
};


/**
 * optional bytes end_key_open = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEndKeyOpen()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowRange.prototype.getEndKeyOpen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEndKeyOpen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.setEndKeyOpen = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.RowRange.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.clearEndKeyOpen = function() {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.RowRange.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowRange.prototype.hasEndKeyOpen = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes end_key_closed = 4;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.RowRange.prototype.getEndKeyClosed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes end_key_closed = 4;
 * This is a type-conversion wrapper around `getEndKeyClosed()`
 * @return {string}
 */
proto.google.bigtable.v2.RowRange.prototype.getEndKeyClosed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEndKeyClosed()));
};


/**
 * optional bytes end_key_closed = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEndKeyClosed()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowRange.prototype.getEndKeyClosed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEndKeyClosed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.setEndKeyClosed = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.RowRange.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowRange} returns this
 */
proto.google.bigtable.v2.RowRange.prototype.clearEndKeyClosed = function() {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.RowRange.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowRange.prototype.hasEndKeyClosed = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.RowSet.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.RowSet.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.RowSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.RowSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowKeysList: msg.getRowKeysList_asB64(),
    rowRangesList: jspb.Message.toObjectList(msg.getRowRangesList(),
    proto.google.bigtable.v2.RowRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.RowSet}
 */
proto.google.bigtable.v2.RowSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.RowSet;
  return proto.google.bigtable.v2.RowSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.RowSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.RowSet}
 */
proto.google.bigtable.v2.RowSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addRowKeys(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.RowRange;
      reader.readMessage(value,proto.google.bigtable.v2.RowRange.deserializeBinaryFromReader);
      msg.addRowRanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.RowSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.RowSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getRowRangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.bigtable.v2.RowRange.serializeBinaryToWriter
    );
  }
};


/**
 * repeated bytes row_keys = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.google.bigtable.v2.RowSet.prototype.getRowKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes row_keys = 1;
 * This is a type-conversion wrapper around `getRowKeysList()`
 * @return {!Array<string>}
 */
proto.google.bigtable.v2.RowSet.prototype.getRowKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getRowKeysList()));
};


/**
 * repeated bytes row_keys = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.google.bigtable.v2.RowSet.prototype.getRowKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getRowKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.google.bigtable.v2.RowSet} returns this
 */
proto.google.bigtable.v2.RowSet.prototype.setRowKeysList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.RowSet} returns this
 */
proto.google.bigtable.v2.RowSet.prototype.addRowKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.RowSet} returns this
 */
proto.google.bigtable.v2.RowSet.prototype.clearRowKeysList = function() {
  return this.setRowKeysList([]);
};


/**
 * repeated RowRange row_ranges = 2;
 * @return {!Array<!proto.google.bigtable.v2.RowRange>}
 */
proto.google.bigtable.v2.RowSet.prototype.getRowRangesList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.RowRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.RowRange, 2));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.RowRange>} value
 * @return {!proto.google.bigtable.v2.RowSet} returns this
*/
proto.google.bigtable.v2.RowSet.prototype.setRowRangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.bigtable.v2.RowRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.RowRange}
 */
proto.google.bigtable.v2.RowSet.prototype.addRowRanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.bigtable.v2.RowRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.RowSet} returns this
 */
proto.google.bigtable.v2.RowSet.prototype.clearRowRangesList = function() {
  return this.setRowRangesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.v2.ColumnRange.oneofGroups_ = [[2,3],[4,5]];

/**
 * @enum {number}
 */
proto.google.bigtable.v2.ColumnRange.StartQualifierCase = {
  START_QUALIFIER_NOT_SET: 0,
  START_QUALIFIER_CLOSED: 2,
  START_QUALIFIER_OPEN: 3
};

/**
 * @return {proto.google.bigtable.v2.ColumnRange.StartQualifierCase}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getStartQualifierCase = function() {
  return /** @type {proto.google.bigtable.v2.ColumnRange.StartQualifierCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.ColumnRange.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.google.bigtable.v2.ColumnRange.EndQualifierCase = {
  END_QUALIFIER_NOT_SET: 0,
  END_QUALIFIER_CLOSED: 4,
  END_QUALIFIER_OPEN: 5
};

/**
 * @return {proto.google.bigtable.v2.ColumnRange.EndQualifierCase}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getEndQualifierCase = function() {
  return /** @type {proto.google.bigtable.v2.ColumnRange.EndQualifierCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.ColumnRange.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ColumnRange.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ColumnRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ColumnRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ColumnRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    familyName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    startQualifierClosed: msg.getStartQualifierClosed_asB64(),
    startQualifierOpen: msg.getStartQualifierOpen_asB64(),
    endQualifierClosed: msg.getEndQualifierClosed_asB64(),
    endQualifierOpen: msg.getEndQualifierOpen_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ColumnRange}
 */
proto.google.bigtable.v2.ColumnRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ColumnRange;
  return proto.google.bigtable.v2.ColumnRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ColumnRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ColumnRange}
 */
proto.google.bigtable.v2.ColumnRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStartQualifierClosed(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStartQualifierOpen(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEndQualifierClosed(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEndQualifierOpen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ColumnRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ColumnRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ColumnRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ColumnRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string family_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.setFamilyName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes start_qualifier_closed = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getStartQualifierClosed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes start_qualifier_closed = 2;
 * This is a type-conversion wrapper around `getStartQualifierClosed()`
 * @return {string}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getStartQualifierClosed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStartQualifierClosed()));
};


/**
 * optional bytes start_qualifier_closed = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStartQualifierClosed()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getStartQualifierClosed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStartQualifierClosed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.setStartQualifierClosed = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.v2.ColumnRange.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.clearStartQualifierClosed = function() {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.v2.ColumnRange.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ColumnRange.prototype.hasStartQualifierClosed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes start_qualifier_open = 3;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getStartQualifierOpen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes start_qualifier_open = 3;
 * This is a type-conversion wrapper around `getStartQualifierOpen()`
 * @return {string}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getStartQualifierOpen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStartQualifierOpen()));
};


/**
 * optional bytes start_qualifier_open = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStartQualifierOpen()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getStartQualifierOpen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStartQualifierOpen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.setStartQualifierOpen = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.ColumnRange.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.clearStartQualifierOpen = function() {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.ColumnRange.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ColumnRange.prototype.hasStartQualifierOpen = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes end_qualifier_closed = 4;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getEndQualifierClosed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes end_qualifier_closed = 4;
 * This is a type-conversion wrapper around `getEndQualifierClosed()`
 * @return {string}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getEndQualifierClosed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEndQualifierClosed()));
};


/**
 * optional bytes end_qualifier_closed = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEndQualifierClosed()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getEndQualifierClosed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEndQualifierClosed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.setEndQualifierClosed = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.ColumnRange.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.clearEndQualifierClosed = function() {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.ColumnRange.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ColumnRange.prototype.hasEndQualifierClosed = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes end_qualifier_open = 5;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getEndQualifierOpen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes end_qualifier_open = 5;
 * This is a type-conversion wrapper around `getEndQualifierOpen()`
 * @return {string}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getEndQualifierOpen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEndQualifierOpen()));
};


/**
 * optional bytes end_qualifier_open = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEndQualifierOpen()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ColumnRange.prototype.getEndQualifierOpen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEndQualifierOpen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.setEndQualifierOpen = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.google.bigtable.v2.ColumnRange.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ColumnRange} returns this
 */
proto.google.bigtable.v2.ColumnRange.prototype.clearEndQualifierOpen = function() {
  return jspb.Message.setOneofField(this, 5, proto.google.bigtable.v2.ColumnRange.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ColumnRange.prototype.hasEndQualifierOpen = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.TimestampRange.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.TimestampRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.TimestampRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.TimestampRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTimestampMicros: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endTimestampMicros: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.TimestampRange}
 */
proto.google.bigtable.v2.TimestampRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.TimestampRange;
  return proto.google.bigtable.v2.TimestampRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.TimestampRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.TimestampRange}
 */
proto.google.bigtable.v2.TimestampRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTimestampMicros(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTimestampMicros(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.TimestampRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.TimestampRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.TimestampRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.TimestampRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTimestampMicros();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEndTimestampMicros();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 start_timestamp_micros = 1;
 * @return {number}
 */
proto.google.bigtable.v2.TimestampRange.prototype.getStartTimestampMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.TimestampRange} returns this
 */
proto.google.bigtable.v2.TimestampRange.prototype.setStartTimestampMicros = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 end_timestamp_micros = 2;
 * @return {number}
 */
proto.google.bigtable.v2.TimestampRange.prototype.getEndTimestampMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.TimestampRange} returns this
 */
proto.google.bigtable.v2.TimestampRange.prototype.setEndTimestampMicros = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.v2.ValueRange.oneofGroups_ = [[1,2],[3,4]];

/**
 * @enum {number}
 */
proto.google.bigtable.v2.ValueRange.StartValueCase = {
  START_VALUE_NOT_SET: 0,
  START_VALUE_CLOSED: 1,
  START_VALUE_OPEN: 2
};

/**
 * @return {proto.google.bigtable.v2.ValueRange.StartValueCase}
 */
proto.google.bigtable.v2.ValueRange.prototype.getStartValueCase = function() {
  return /** @type {proto.google.bigtable.v2.ValueRange.StartValueCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.ValueRange.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.google.bigtable.v2.ValueRange.EndValueCase = {
  END_VALUE_NOT_SET: 0,
  END_VALUE_CLOSED: 3,
  END_VALUE_OPEN: 4
};

/**
 * @return {proto.google.bigtable.v2.ValueRange.EndValueCase}
 */
proto.google.bigtable.v2.ValueRange.prototype.getEndValueCase = function() {
  return /** @type {proto.google.bigtable.v2.ValueRange.EndValueCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.ValueRange.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ValueRange.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ValueRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ValueRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ValueRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startValueClosed: msg.getStartValueClosed_asB64(),
    startValueOpen: msg.getStartValueOpen_asB64(),
    endValueClosed: msg.getEndValueClosed_asB64(),
    endValueOpen: msg.getEndValueOpen_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ValueRange}
 */
proto.google.bigtable.v2.ValueRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ValueRange;
  return proto.google.bigtable.v2.ValueRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ValueRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ValueRange}
 */
proto.google.bigtable.v2.ValueRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStartValueClosed(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStartValueOpen(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEndValueClosed(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEndValueOpen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ValueRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ValueRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ValueRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ValueRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bytes start_value_closed = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ValueRange.prototype.getStartValueClosed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes start_value_closed = 1;
 * This is a type-conversion wrapper around `getStartValueClosed()`
 * @return {string}
 */
proto.google.bigtable.v2.ValueRange.prototype.getStartValueClosed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStartValueClosed()));
};


/**
 * optional bytes start_value_closed = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStartValueClosed()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ValueRange.prototype.getStartValueClosed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStartValueClosed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.setStartValueClosed = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.google.bigtable.v2.ValueRange.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.clearStartValueClosed = function() {
  return jspb.Message.setOneofField(this, 1, proto.google.bigtable.v2.ValueRange.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ValueRange.prototype.hasStartValueClosed = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes start_value_open = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ValueRange.prototype.getStartValueOpen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes start_value_open = 2;
 * This is a type-conversion wrapper around `getStartValueOpen()`
 * @return {string}
 */
proto.google.bigtable.v2.ValueRange.prototype.getStartValueOpen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStartValueOpen()));
};


/**
 * optional bytes start_value_open = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStartValueOpen()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ValueRange.prototype.getStartValueOpen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStartValueOpen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.setStartValueOpen = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.v2.ValueRange.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.clearStartValueOpen = function() {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.v2.ValueRange.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ValueRange.prototype.hasStartValueOpen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes end_value_closed = 3;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ValueRange.prototype.getEndValueClosed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes end_value_closed = 3;
 * This is a type-conversion wrapper around `getEndValueClosed()`
 * @return {string}
 */
proto.google.bigtable.v2.ValueRange.prototype.getEndValueClosed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEndValueClosed()));
};


/**
 * optional bytes end_value_closed = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEndValueClosed()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ValueRange.prototype.getEndValueClosed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEndValueClosed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.setEndValueClosed = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.ValueRange.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.clearEndValueClosed = function() {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.ValueRange.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ValueRange.prototype.hasEndValueClosed = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes end_value_open = 4;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ValueRange.prototype.getEndValueOpen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes end_value_open = 4;
 * This is a type-conversion wrapper around `getEndValueOpen()`
 * @return {string}
 */
proto.google.bigtable.v2.ValueRange.prototype.getEndValueOpen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEndValueOpen()));
};


/**
 * optional bytes end_value_open = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEndValueOpen()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ValueRange.prototype.getEndValueOpen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEndValueOpen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.setEndValueOpen = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.ValueRange.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ValueRange} returns this
 */
proto.google.bigtable.v2.ValueRange.prototype.clearEndValueOpen = function() {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.ValueRange.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ValueRange.prototype.hasEndValueOpen = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.v2.RowFilter.oneofGroups_ = [[1,2,3,16,17,18,4,14,5,6,7,8,9,15,10,11,12,13,19]];

/**
 * @enum {number}
 */
proto.google.bigtable.v2.RowFilter.FilterCase = {
  FILTER_NOT_SET: 0,
  CHAIN: 1,
  INTERLEAVE: 2,
  CONDITION: 3,
  SINK: 16,
  PASS_ALL_FILTER: 17,
  BLOCK_ALL_FILTER: 18,
  ROW_KEY_REGEX_FILTER: 4,
  ROW_SAMPLE_FILTER: 14,
  FAMILY_NAME_REGEX_FILTER: 5,
  COLUMN_QUALIFIER_REGEX_FILTER: 6,
  COLUMN_RANGE_FILTER: 7,
  TIMESTAMP_RANGE_FILTER: 8,
  VALUE_REGEX_FILTER: 9,
  VALUE_RANGE_FILTER: 15,
  CELLS_PER_ROW_OFFSET_FILTER: 10,
  CELLS_PER_ROW_LIMIT_FILTER: 11,
  CELLS_PER_COLUMN_LIMIT_FILTER: 12,
  STRIP_VALUE_TRANSFORMER: 13,
  APPLY_LABEL_TRANSFORMER: 19
};

/**
 * @return {proto.google.bigtable.v2.RowFilter.FilterCase}
 */
proto.google.bigtable.v2.RowFilter.prototype.getFilterCase = function() {
  return /** @type {proto.google.bigtable.v2.RowFilter.FilterCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.RowFilter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.RowFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.RowFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.RowFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    chain: (f = msg.getChain()) && proto.google.bigtable.v2.RowFilter.Chain.toObject(includeInstance, f),
    interleave: (f = msg.getInterleave()) && proto.google.bigtable.v2.RowFilter.Interleave.toObject(includeInstance, f),
    condition: (f = msg.getCondition()) && proto.google.bigtable.v2.RowFilter.Condition.toObject(includeInstance, f),
    sink: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    passAllFilter: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    blockAllFilter: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    rowKeyRegexFilter: msg.getRowKeyRegexFilter_asB64(),
    rowSampleFilter: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    familyNameRegexFilter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    columnQualifierRegexFilter: msg.getColumnQualifierRegexFilter_asB64(),
    columnRangeFilter: (f = msg.getColumnRangeFilter()) && proto.google.bigtable.v2.ColumnRange.toObject(includeInstance, f),
    timestampRangeFilter: (f = msg.getTimestampRangeFilter()) && proto.google.bigtable.v2.TimestampRange.toObject(includeInstance, f),
    valueRegexFilter: msg.getValueRegexFilter_asB64(),
    valueRangeFilter: (f = msg.getValueRangeFilter()) && proto.google.bigtable.v2.ValueRange.toObject(includeInstance, f),
    cellsPerRowOffsetFilter: jspb.Message.getFieldWithDefault(msg, 10, 0),
    cellsPerRowLimitFilter: jspb.Message.getFieldWithDefault(msg, 11, 0),
    cellsPerColumnLimitFilter: jspb.Message.getFieldWithDefault(msg, 12, 0),
    stripValueTransformer: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    applyLabelTransformer: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.RowFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.RowFilter;
  return proto.google.bigtable.v2.RowFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.RowFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.RowFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.v2.RowFilter.Chain;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.RowFilter.Interleave;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.Interleave.deserializeBinaryFromReader);
      msg.setInterleave(value);
      break;
    case 3:
      var value = new proto.google.bigtable.v2.RowFilter.Condition;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.Condition.deserializeBinaryFromReader);
      msg.setCondition(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSink(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPassAllFilter(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlockAllFilter(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKeyRegexFilter(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRowSampleFilter(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyNameRegexFilter(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColumnQualifierRegexFilter(value);
      break;
    case 7:
      var value = new proto.google.bigtable.v2.ColumnRange;
      reader.readMessage(value,proto.google.bigtable.v2.ColumnRange.deserializeBinaryFromReader);
      msg.setColumnRangeFilter(value);
      break;
    case 8:
      var value = new proto.google.bigtable.v2.TimestampRange;
      reader.readMessage(value,proto.google.bigtable.v2.TimestampRange.deserializeBinaryFromReader);
      msg.setTimestampRangeFilter(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValueRegexFilter(value);
      break;
    case 15:
      var value = new proto.google.bigtable.v2.ValueRange;
      reader.readMessage(value,proto.google.bigtable.v2.ValueRange.deserializeBinaryFromReader);
      msg.setValueRangeFilter(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCellsPerRowOffsetFilter(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCellsPerRowLimitFilter(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCellsPerColumnLimitFilter(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripValueTransformer(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplyLabelTransformer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.RowFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.RowFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.bigtable.v2.RowFilter.Chain.serializeBinaryToWriter
    );
  }
  f = message.getInterleave();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.bigtable.v2.RowFilter.Interleave.serializeBinaryToWriter
    );
  }
  f = message.getCondition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.bigtable.v2.RowFilter.Condition.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getColumnRangeFilter();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.bigtable.v2.ColumnRange.serializeBinaryToWriter
    );
  }
  f = message.getTimestampRangeFilter();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.bigtable.v2.TimestampRange.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getValueRangeFilter();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.google.bigtable.v2.ValueRange.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.RowFilter.Chain.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.RowFilter.Chain.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.RowFilter.Chain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.RowFilter.Chain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.Chain.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.google.bigtable.v2.RowFilter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.RowFilter.Chain}
 */
proto.google.bigtable.v2.RowFilter.Chain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.RowFilter.Chain;
  return proto.google.bigtable.v2.RowFilter.Chain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.RowFilter.Chain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.RowFilter.Chain}
 */
proto.google.bigtable.v2.RowFilter.Chain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.v2.RowFilter;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowFilter.Chain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.RowFilter.Chain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.RowFilter.Chain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.Chain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.bigtable.v2.RowFilter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RowFilter filters = 1;
 * @return {!Array<!proto.google.bigtable.v2.RowFilter>}
 */
proto.google.bigtable.v2.RowFilter.Chain.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.RowFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.RowFilter, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.RowFilter>} value
 * @return {!proto.google.bigtable.v2.RowFilter.Chain} returns this
*/
proto.google.bigtable.v2.RowFilter.Chain.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.v2.RowFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.RowFilter.Chain.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.v2.RowFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.RowFilter.Chain} returns this
 */
proto.google.bigtable.v2.RowFilter.Chain.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.v2.RowFilter.Interleave.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.RowFilter.Interleave.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.RowFilter.Interleave.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.RowFilter.Interleave} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.Interleave.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.google.bigtable.v2.RowFilter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.RowFilter.Interleave}
 */
proto.google.bigtable.v2.RowFilter.Interleave.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.RowFilter.Interleave;
  return proto.google.bigtable.v2.RowFilter.Interleave.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.RowFilter.Interleave} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.RowFilter.Interleave}
 */
proto.google.bigtable.v2.RowFilter.Interleave.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.v2.RowFilter;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowFilter.Interleave.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.RowFilter.Interleave.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.RowFilter.Interleave} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.Interleave.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.bigtable.v2.RowFilter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RowFilter filters = 1;
 * @return {!Array<!proto.google.bigtable.v2.RowFilter>}
 */
proto.google.bigtable.v2.RowFilter.Interleave.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.google.bigtable.v2.RowFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.v2.RowFilter, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.v2.RowFilter>} value
 * @return {!proto.google.bigtable.v2.RowFilter.Interleave} returns this
*/
proto.google.bigtable.v2.RowFilter.Interleave.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.v2.RowFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.RowFilter.Interleave.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.v2.RowFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.v2.RowFilter.Interleave} returns this
 */
proto.google.bigtable.v2.RowFilter.Interleave.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.RowFilter.Condition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.RowFilter.Condition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.Condition.toObject = function(includeInstance, msg) {
  var f, obj = {
    predicateFilter: (f = msg.getPredicateFilter()) && proto.google.bigtable.v2.RowFilter.toObject(includeInstance, f),
    trueFilter: (f = msg.getTrueFilter()) && proto.google.bigtable.v2.RowFilter.toObject(includeInstance, f),
    falseFilter: (f = msg.getFalseFilter()) && proto.google.bigtable.v2.RowFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.RowFilter.Condition}
 */
proto.google.bigtable.v2.RowFilter.Condition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.RowFilter.Condition;
  return proto.google.bigtable.v2.RowFilter.Condition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.RowFilter.Condition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.RowFilter.Condition}
 */
proto.google.bigtable.v2.RowFilter.Condition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.v2.RowFilter;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.deserializeBinaryFromReader);
      msg.setPredicateFilter(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.RowFilter;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.deserializeBinaryFromReader);
      msg.setTrueFilter(value);
      break;
    case 3:
      var value = new proto.google.bigtable.v2.RowFilter;
      reader.readMessage(value,proto.google.bigtable.v2.RowFilter.deserializeBinaryFromReader);
      msg.setFalseFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.RowFilter.Condition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.RowFilter.Condition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.RowFilter.Condition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPredicateFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.bigtable.v2.RowFilter.serializeBinaryToWriter
    );
  }
  f = message.getTrueFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.bigtable.v2.RowFilter.serializeBinaryToWriter
    );
  }
  f = message.getFalseFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.bigtable.v2.RowFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional RowFilter predicate_filter = 1;
 * @return {?proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.getPredicateFilter = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.RowFilter, 1));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter.Condition} returns this
*/
proto.google.bigtable.v2.RowFilter.Condition.prototype.setPredicateFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter.Condition} returns this
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.clearPredicateFilter = function() {
  return this.setPredicateFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.hasPredicateFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RowFilter true_filter = 2;
 * @return {?proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.getTrueFilter = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.RowFilter, 2));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter.Condition} returns this
*/
proto.google.bigtable.v2.RowFilter.Condition.prototype.setTrueFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter.Condition} returns this
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.clearTrueFilter = function() {
  return this.setTrueFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.hasTrueFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RowFilter false_filter = 3;
 * @return {?proto.google.bigtable.v2.RowFilter}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.getFalseFilter = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.RowFilter, 3));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter.Condition} returns this
*/
proto.google.bigtable.v2.RowFilter.Condition.prototype.setFalseFilter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter.Condition} returns this
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.clearFalseFilter = function() {
  return this.setFalseFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.Condition.prototype.hasFalseFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Chain chain = 1;
 * @return {?proto.google.bigtable.v2.RowFilter.Chain}
 */
proto.google.bigtable.v2.RowFilter.prototype.getChain = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter.Chain} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.RowFilter.Chain, 1));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter.Chain|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
*/
proto.google.bigtable.v2.RowFilter.prototype.setChain = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearChain = function() {
  return this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasChain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Interleave interleave = 2;
 * @return {?proto.google.bigtable.v2.RowFilter.Interleave}
 */
proto.google.bigtable.v2.RowFilter.prototype.getInterleave = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter.Interleave} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.RowFilter.Interleave, 2));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter.Interleave|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
*/
proto.google.bigtable.v2.RowFilter.prototype.setInterleave = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearInterleave = function() {
  return this.setInterleave(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasInterleave = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Condition condition = 3;
 * @return {?proto.google.bigtable.v2.RowFilter.Condition}
 */
proto.google.bigtable.v2.RowFilter.prototype.getCondition = function() {
  return /** @type{?proto.google.bigtable.v2.RowFilter.Condition} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.RowFilter.Condition, 3));
};


/**
 * @param {?proto.google.bigtable.v2.RowFilter.Condition|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
*/
proto.google.bigtable.v2.RowFilter.prototype.setCondition = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearCondition = function() {
  return this.setCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasCondition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool sink = 16;
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.getSink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setSink = function(value) {
  return jspb.Message.setOneofField(this, 16, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearSink = function() {
  return jspb.Message.setOneofField(this, 16, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasSink = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool pass_all_filter = 17;
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.getPassAllFilter = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setPassAllFilter = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearPassAllFilter = function() {
  return jspb.Message.setOneofField(this, 17, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasPassAllFilter = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool block_all_filter = 18;
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.getBlockAllFilter = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setBlockAllFilter = function(value) {
  return jspb.Message.setOneofField(this, 18, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearBlockAllFilter = function() {
  return jspb.Message.setOneofField(this, 18, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasBlockAllFilter = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bytes row_key_regex_filter = 4;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.RowFilter.prototype.getRowKeyRegexFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes row_key_regex_filter = 4;
 * This is a type-conversion wrapper around `getRowKeyRegexFilter()`
 * @return {string}
 */
proto.google.bigtable.v2.RowFilter.prototype.getRowKeyRegexFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKeyRegexFilter()));
};


/**
 * optional bytes row_key_regex_filter = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKeyRegexFilter()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowFilter.prototype.getRowKeyRegexFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKeyRegexFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setRowKeyRegexFilter = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearRowKeyRegexFilter = function() {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasRowKeyRegexFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double row_sample_filter = 14;
 * @return {number}
 */
proto.google.bigtable.v2.RowFilter.prototype.getRowSampleFilter = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setRowSampleFilter = function(value) {
  return jspb.Message.setOneofField(this, 14, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearRowSampleFilter = function() {
  return jspb.Message.setOneofField(this, 14, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasRowSampleFilter = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string family_name_regex_filter = 5;
 * @return {string}
 */
proto.google.bigtable.v2.RowFilter.prototype.getFamilyNameRegexFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setFamilyNameRegexFilter = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearFamilyNameRegexFilter = function() {
  return jspb.Message.setOneofField(this, 5, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasFamilyNameRegexFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes column_qualifier_regex_filter = 6;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.RowFilter.prototype.getColumnQualifierRegexFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes column_qualifier_regex_filter = 6;
 * This is a type-conversion wrapper around `getColumnQualifierRegexFilter()`
 * @return {string}
 */
proto.google.bigtable.v2.RowFilter.prototype.getColumnQualifierRegexFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColumnQualifierRegexFilter()));
};


/**
 * optional bytes column_qualifier_regex_filter = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColumnQualifierRegexFilter()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowFilter.prototype.getColumnQualifierRegexFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColumnQualifierRegexFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setColumnQualifierRegexFilter = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearColumnQualifierRegexFilter = function() {
  return jspb.Message.setOneofField(this, 6, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasColumnQualifierRegexFilter = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ColumnRange column_range_filter = 7;
 * @return {?proto.google.bigtable.v2.ColumnRange}
 */
proto.google.bigtable.v2.RowFilter.prototype.getColumnRangeFilter = function() {
  return /** @type{?proto.google.bigtable.v2.ColumnRange} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.ColumnRange, 7));
};


/**
 * @param {?proto.google.bigtable.v2.ColumnRange|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
*/
proto.google.bigtable.v2.RowFilter.prototype.setColumnRangeFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearColumnRangeFilter = function() {
  return this.setColumnRangeFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasColumnRangeFilter = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TimestampRange timestamp_range_filter = 8;
 * @return {?proto.google.bigtable.v2.TimestampRange}
 */
proto.google.bigtable.v2.RowFilter.prototype.getTimestampRangeFilter = function() {
  return /** @type{?proto.google.bigtable.v2.TimestampRange} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.TimestampRange, 8));
};


/**
 * @param {?proto.google.bigtable.v2.TimestampRange|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
*/
proto.google.bigtable.v2.RowFilter.prototype.setTimestampRangeFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearTimestampRangeFilter = function() {
  return this.setTimestampRangeFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasTimestampRangeFilter = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes value_regex_filter = 9;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.RowFilter.prototype.getValueRegexFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes value_regex_filter = 9;
 * This is a type-conversion wrapper around `getValueRegexFilter()`
 * @return {string}
 */
proto.google.bigtable.v2.RowFilter.prototype.getValueRegexFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValueRegexFilter()));
};


/**
 * optional bytes value_regex_filter = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValueRegexFilter()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.RowFilter.prototype.getValueRegexFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValueRegexFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setValueRegexFilter = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearValueRegexFilter = function() {
  return jspb.Message.setOneofField(this, 9, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasValueRegexFilter = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ValueRange value_range_filter = 15;
 * @return {?proto.google.bigtable.v2.ValueRange}
 */
proto.google.bigtable.v2.RowFilter.prototype.getValueRangeFilter = function() {
  return /** @type{?proto.google.bigtable.v2.ValueRange} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.ValueRange, 15));
};


/**
 * @param {?proto.google.bigtable.v2.ValueRange|undefined} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
*/
proto.google.bigtable.v2.RowFilter.prototype.setValueRangeFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearValueRangeFilter = function() {
  return this.setValueRangeFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasValueRangeFilter = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 cells_per_row_offset_filter = 10;
 * @return {number}
 */
proto.google.bigtable.v2.RowFilter.prototype.getCellsPerRowOffsetFilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setCellsPerRowOffsetFilter = function(value) {
  return jspb.Message.setOneofField(this, 10, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearCellsPerRowOffsetFilter = function() {
  return jspb.Message.setOneofField(this, 10, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasCellsPerRowOffsetFilter = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 cells_per_row_limit_filter = 11;
 * @return {number}
 */
proto.google.bigtable.v2.RowFilter.prototype.getCellsPerRowLimitFilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setCellsPerRowLimitFilter = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearCellsPerRowLimitFilter = function() {
  return jspb.Message.setOneofField(this, 11, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasCellsPerRowLimitFilter = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 cells_per_column_limit_filter = 12;
 * @return {number}
 */
proto.google.bigtable.v2.RowFilter.prototype.getCellsPerColumnLimitFilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setCellsPerColumnLimitFilter = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearCellsPerColumnLimitFilter = function() {
  return jspb.Message.setOneofField(this, 12, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasCellsPerColumnLimitFilter = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool strip_value_transformer = 13;
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.getStripValueTransformer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setStripValueTransformer = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearStripValueTransformer = function() {
  return jspb.Message.setOneofField(this, 13, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasStripValueTransformer = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string apply_label_transformer = 19;
 * @return {string}
 */
proto.google.bigtable.v2.RowFilter.prototype.getApplyLabelTransformer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.setApplyLabelTransformer = function(value) {
  return jspb.Message.setOneofField(this, 19, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.RowFilter} returns this
 */
proto.google.bigtable.v2.RowFilter.prototype.clearApplyLabelTransformer = function() {
  return jspb.Message.setOneofField(this, 19, proto.google.bigtable.v2.RowFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.RowFilter.prototype.hasApplyLabelTransformer = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.v2.Mutation.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.google.bigtable.v2.Mutation.MutationCase = {
  MUTATION_NOT_SET: 0,
  SET_CELL: 1,
  DELETE_FROM_COLUMN: 2,
  DELETE_FROM_FAMILY: 3,
  DELETE_FROM_ROW: 4
};

/**
 * @return {proto.google.bigtable.v2.Mutation.MutationCase}
 */
proto.google.bigtable.v2.Mutation.prototype.getMutationCase = function() {
  return /** @type {proto.google.bigtable.v2.Mutation.MutationCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.Mutation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Mutation.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Mutation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Mutation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.toObject = function(includeInstance, msg) {
  var f, obj = {
    setCell: (f = msg.getSetCell()) && proto.google.bigtable.v2.Mutation.SetCell.toObject(includeInstance, f),
    deleteFromColumn: (f = msg.getDeleteFromColumn()) && proto.google.bigtable.v2.Mutation.DeleteFromColumn.toObject(includeInstance, f),
    deleteFromFamily: (f = msg.getDeleteFromFamily()) && proto.google.bigtable.v2.Mutation.DeleteFromFamily.toObject(includeInstance, f),
    deleteFromRow: (f = msg.getDeleteFromRow()) && proto.google.bigtable.v2.Mutation.DeleteFromRow.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Mutation}
 */
proto.google.bigtable.v2.Mutation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Mutation;
  return proto.google.bigtable.v2.Mutation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Mutation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Mutation}
 */
proto.google.bigtable.v2.Mutation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.v2.Mutation.SetCell;
      reader.readMessage(value,proto.google.bigtable.v2.Mutation.SetCell.deserializeBinaryFromReader);
      msg.setSetCell(value);
      break;
    case 2:
      var value = new proto.google.bigtable.v2.Mutation.DeleteFromColumn;
      reader.readMessage(value,proto.google.bigtable.v2.Mutation.DeleteFromColumn.deserializeBinaryFromReader);
      msg.setDeleteFromColumn(value);
      break;
    case 3:
      var value = new proto.google.bigtable.v2.Mutation.DeleteFromFamily;
      reader.readMessage(value,proto.google.bigtable.v2.Mutation.DeleteFromFamily.deserializeBinaryFromReader);
      msg.setDeleteFromFamily(value);
      break;
    case 4:
      var value = new proto.google.bigtable.v2.Mutation.DeleteFromRow;
      reader.readMessage(value,proto.google.bigtable.v2.Mutation.DeleteFromRow.deserializeBinaryFromReader);
      msg.setDeleteFromRow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Mutation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Mutation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetCell();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.bigtable.v2.Mutation.SetCell.serializeBinaryToWriter
    );
  }
  f = message.getDeleteFromColumn();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.bigtable.v2.Mutation.DeleteFromColumn.serializeBinaryToWriter
    );
  }
  f = message.getDeleteFromFamily();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.bigtable.v2.Mutation.DeleteFromFamily.serializeBinaryToWriter
    );
  }
  f = message.getDeleteFromRow();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.bigtable.v2.Mutation.DeleteFromRow.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Mutation.SetCell.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Mutation.SetCell} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.SetCell.toObject = function(includeInstance, msg) {
  var f, obj = {
    familyName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnQualifier: msg.getColumnQualifier_asB64(),
    timestampMicros: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Mutation.SetCell}
 */
proto.google.bigtable.v2.Mutation.SetCell.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Mutation.SetCell;
  return proto.google.bigtable.v2.Mutation.SetCell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Mutation.SetCell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Mutation.SetCell}
 */
proto.google.bigtable.v2.Mutation.SetCell.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColumnQualifier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampMicros(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Mutation.SetCell.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Mutation.SetCell} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.SetCell.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnQualifier_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTimestampMicros();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string family_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.Mutation.SetCell} returns this
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.setFamilyName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes column_qualifier = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getColumnQualifier = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes column_qualifier = 2;
 * This is a type-conversion wrapper around `getColumnQualifier()`
 * @return {string}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getColumnQualifier_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColumnQualifier()));
};


/**
 * optional bytes column_qualifier = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColumnQualifier()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getColumnQualifier_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColumnQualifier()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.Mutation.SetCell} returns this
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.setColumnQualifier = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 timestamp_micros = 3;
 * @return {number}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getTimestampMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.Mutation.SetCell} returns this
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.setTimestampMicros = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes value = 4;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes value = 4;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.Mutation.SetCell} returns this
 */
proto.google.bigtable.v2.Mutation.SetCell.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Mutation.DeleteFromColumn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromColumn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.toObject = function(includeInstance, msg) {
  var f, obj = {
    familyName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnQualifier: msg.getColumnQualifier_asB64(),
    timeRange: (f = msg.getTimeRange()) && proto.google.bigtable.v2.TimestampRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromColumn}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Mutation.DeleteFromColumn;
  return proto.google.bigtable.v2.Mutation.DeleteFromColumn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromColumn}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColumnQualifier(value);
      break;
    case 3:
      var value = new proto.google.bigtable.v2.TimestampRange;
      reader.readMessage(value,proto.google.bigtable.v2.TimestampRange.deserializeBinaryFromReader);
      msg.setTimeRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Mutation.DeleteFromColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnQualifier_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTimeRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.bigtable.v2.TimestampRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string family_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromColumn} returns this
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.setFamilyName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes column_qualifier = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.getColumnQualifier = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes column_qualifier = 2;
 * This is a type-conversion wrapper around `getColumnQualifier()`
 * @return {string}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.getColumnQualifier_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColumnQualifier()));
};


/**
 * optional bytes column_qualifier = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColumnQualifier()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.getColumnQualifier_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColumnQualifier()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromColumn} returns this
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.setColumnQualifier = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional TimestampRange time_range = 3;
 * @return {?proto.google.bigtable.v2.TimestampRange}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.getTimeRange = function() {
  return /** @type{?proto.google.bigtable.v2.TimestampRange} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.TimestampRange, 3));
};


/**
 * @param {?proto.google.bigtable.v2.TimestampRange|undefined} value
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromColumn} returns this
*/
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.setTimeRange = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromColumn} returns this
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.clearTimeRange = function() {
  return this.setTimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.Mutation.DeleteFromColumn.prototype.hasTimeRange = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Mutation.DeleteFromFamily.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromFamily} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.toObject = function(includeInstance, msg) {
  var f, obj = {
    familyName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromFamily}
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Mutation.DeleteFromFamily;
  return proto.google.bigtable.v2.Mutation.DeleteFromFamily.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromFamily} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromFamily}
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Mutation.DeleteFromFamily.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromFamily} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string family_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromFamily} returns this
 */
proto.google.bigtable.v2.Mutation.DeleteFromFamily.prototype.setFamilyName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.Mutation.DeleteFromRow.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.Mutation.DeleteFromRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.DeleteFromRow.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromRow}
 */
proto.google.bigtable.v2.Mutation.DeleteFromRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.Mutation.DeleteFromRow;
  return proto.google.bigtable.v2.Mutation.DeleteFromRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.Mutation.DeleteFromRow}
 */
proto.google.bigtable.v2.Mutation.DeleteFromRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.Mutation.DeleteFromRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.Mutation.DeleteFromRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.Mutation.DeleteFromRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.Mutation.DeleteFromRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional SetCell set_cell = 1;
 * @return {?proto.google.bigtable.v2.Mutation.SetCell}
 */
proto.google.bigtable.v2.Mutation.prototype.getSetCell = function() {
  return /** @type{?proto.google.bigtable.v2.Mutation.SetCell} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.Mutation.SetCell, 1));
};


/**
 * @param {?proto.google.bigtable.v2.Mutation.SetCell|undefined} value
 * @return {!proto.google.bigtable.v2.Mutation} returns this
*/
proto.google.bigtable.v2.Mutation.prototype.setSetCell = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.bigtable.v2.Mutation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.Mutation} returns this
 */
proto.google.bigtable.v2.Mutation.prototype.clearSetCell = function() {
  return this.setSetCell(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.Mutation.prototype.hasSetCell = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DeleteFromColumn delete_from_column = 2;
 * @return {?proto.google.bigtable.v2.Mutation.DeleteFromColumn}
 */
proto.google.bigtable.v2.Mutation.prototype.getDeleteFromColumn = function() {
  return /** @type{?proto.google.bigtable.v2.Mutation.DeleteFromColumn} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.Mutation.DeleteFromColumn, 2));
};


/**
 * @param {?proto.google.bigtable.v2.Mutation.DeleteFromColumn|undefined} value
 * @return {!proto.google.bigtable.v2.Mutation} returns this
*/
proto.google.bigtable.v2.Mutation.prototype.setDeleteFromColumn = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.bigtable.v2.Mutation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.Mutation} returns this
 */
proto.google.bigtable.v2.Mutation.prototype.clearDeleteFromColumn = function() {
  return this.setDeleteFromColumn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.Mutation.prototype.hasDeleteFromColumn = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DeleteFromFamily delete_from_family = 3;
 * @return {?proto.google.bigtable.v2.Mutation.DeleteFromFamily}
 */
proto.google.bigtable.v2.Mutation.prototype.getDeleteFromFamily = function() {
  return /** @type{?proto.google.bigtable.v2.Mutation.DeleteFromFamily} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.Mutation.DeleteFromFamily, 3));
};


/**
 * @param {?proto.google.bigtable.v2.Mutation.DeleteFromFamily|undefined} value
 * @return {!proto.google.bigtable.v2.Mutation} returns this
*/
proto.google.bigtable.v2.Mutation.prototype.setDeleteFromFamily = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.bigtable.v2.Mutation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.Mutation} returns this
 */
proto.google.bigtable.v2.Mutation.prototype.clearDeleteFromFamily = function() {
  return this.setDeleteFromFamily(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.Mutation.prototype.hasDeleteFromFamily = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DeleteFromRow delete_from_row = 4;
 * @return {?proto.google.bigtable.v2.Mutation.DeleteFromRow}
 */
proto.google.bigtable.v2.Mutation.prototype.getDeleteFromRow = function() {
  return /** @type{?proto.google.bigtable.v2.Mutation.DeleteFromRow} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.v2.Mutation.DeleteFromRow, 4));
};


/**
 * @param {?proto.google.bigtable.v2.Mutation.DeleteFromRow|undefined} value
 * @return {!proto.google.bigtable.v2.Mutation} returns this
*/
proto.google.bigtable.v2.Mutation.prototype.setDeleteFromRow = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.google.bigtable.v2.Mutation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.v2.Mutation} returns this
 */
proto.google.bigtable.v2.Mutation.prototype.clearDeleteFromRow = function() {
  return this.setDeleteFromRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.Mutation.prototype.hasDeleteFromRow = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.v2.ReadModifyWriteRule.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.RuleCase = {
  RULE_NOT_SET: 0,
  APPEND_VALUE: 3,
  INCREMENT_AMOUNT: 4
};

/**
 * @return {proto.google.bigtable.v2.ReadModifyWriteRule.RuleCase}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getRuleCase = function() {
  return /** @type {proto.google.bigtable.v2.ReadModifyWriteRule.RuleCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.v2.ReadModifyWriteRule.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.v2.ReadModifyWriteRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadModifyWriteRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    familyName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnQualifier: msg.getColumnQualifier_asB64(),
    appendValue: msg.getAppendValue_asB64(),
    incrementAmount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.v2.ReadModifyWriteRule;
  return proto.google.bigtable.v2.ReadModifyWriteRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColumnQualifier(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAppendValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIncrementAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.v2.ReadModifyWriteRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.v2.ReadModifyWriteRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.v2.ReadModifyWriteRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnQualifier_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string family_name = 1;
 * @return {string}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.setFamilyName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes column_qualifier = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getColumnQualifier = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes column_qualifier = 2;
 * This is a type-conversion wrapper around `getColumnQualifier()`
 * @return {string}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getColumnQualifier_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColumnQualifier()));
};


/**
 * optional bytes column_qualifier = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColumnQualifier()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getColumnQualifier_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColumnQualifier()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.setColumnQualifier = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes append_value = 3;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getAppendValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes append_value = 3;
 * This is a type-conversion wrapper around `getAppendValue()`
 * @return {string}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getAppendValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAppendValue()));
};


/**
 * optional bytes append_value = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAppendValue()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getAppendValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAppendValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.setAppendValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.ReadModifyWriteRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.clearAppendValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.v2.ReadModifyWriteRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.hasAppendValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 increment_amount = 4;
 * @return {number}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.getIncrementAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.setIncrementAmount = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.ReadModifyWriteRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.v2.ReadModifyWriteRule} returns this
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.clearIncrementAmount = function() {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.v2.ReadModifyWriteRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.v2.ReadModifyWriteRule.prototype.hasIncrementAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.google.bigtable.v2);
