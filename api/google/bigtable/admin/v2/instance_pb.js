// source: google/bigtable/admin/v2/instance.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_bigtable_admin_v2_common_pb = require('../../../../google/bigtable/admin/v2/common_pb.js');
goog.object.extend(proto, google_bigtable_admin_v2_common_pb);
goog.exportSymbol('proto.google.bigtable.admin.v2.AppProfile', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.AppProfile.RoutingPolicyCase', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Cluster', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Cluster.State', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Instance', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Instance.State', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Instance.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.Instance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.Instance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.Instance.displayName = 'proto.google.bigtable.admin.v2.Instance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.Cluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.Cluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.Cluster.displayName = 'proto.google.bigtable.admin.v2.Cluster';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.AppProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.admin.v2.AppProfile.oneofGroups_);
};
goog.inherits(proto.google.bigtable.admin.v2.AppProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.AppProfile.displayName = 'proto.google.bigtable.admin.v2.AppProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.displayName = 'proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.displayName = 'proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.Instance.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.Instance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.Instance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Instance.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.Instance}
 */
proto.google.bigtable.admin.v2.Instance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.Instance;
  return proto.google.bigtable.admin.v2.Instance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.Instance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.Instance}
 */
proto.google.bigtable.admin.v2.Instance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {!proto.google.bigtable.admin.v2.Instance.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {!proto.google.bigtable.admin.v2.Instance.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.Instance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.Instance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.Instance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Instance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.Instance.State = {
  STATE_NOT_KNOWN: 0,
  READY: 1,
  CREATING: 2
};

/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.Instance.Type = {
  TYPE_UNSPECIFIED: 0,
  PRODUCTION: 1,
  DEVELOPMENT: 2
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.Instance.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.Instance} returns this
 */
proto.google.bigtable.admin.v2.Instance.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.Instance.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.Instance} returns this
 */
proto.google.bigtable.admin.v2.Instance.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional State state = 3;
 * @return {!proto.google.bigtable.admin.v2.Instance.State}
 */
proto.google.bigtable.admin.v2.Instance.prototype.getState = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Instance.State} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Instance.State} value
 * @return {!proto.google.bigtable.admin.v2.Instance} returns this
 */
proto.google.bigtable.admin.v2.Instance.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Type type = 4;
 * @return {!proto.google.bigtable.admin.v2.Instance.Type}
 */
proto.google.bigtable.admin.v2.Instance.prototype.getType = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Instance.Type} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Instance.Type} value
 * @return {!proto.google.bigtable.admin.v2.Instance} returns this
 */
proto.google.bigtable.admin.v2.Instance.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * map<string, string> labels = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.google.bigtable.admin.v2.Instance.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.bigtable.admin.v2.Instance} returns this
 */
proto.google.bigtable.admin.v2.Instance.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.Cluster.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.Cluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.Cluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Cluster.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    location: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    serveNodes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    defaultStorageType: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.Cluster}
 */
proto.google.bigtable.admin.v2.Cluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.Cluster;
  return proto.google.bigtable.admin.v2.Cluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.Cluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.Cluster}
 */
proto.google.bigtable.admin.v2.Cluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 3:
      var value = /** @type {!proto.google.bigtable.admin.v2.Cluster.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServeNodes(value);
      break;
    case 5:
      var value = /** @type {!proto.google.bigtable.admin.v2.StorageType} */ (reader.readEnum());
      msg.setDefaultStorageType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.Cluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.Cluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.Cluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Cluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getServeNodes();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDefaultStorageType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.Cluster.State = {
  STATE_NOT_KNOWN: 0,
  READY: 1,
  CREATING: 2,
  RESIZING: 3,
  DISABLED: 4
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.Cluster.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.Cluster} returns this
 */
proto.google.bigtable.admin.v2.Cluster.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.Cluster.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.Cluster} returns this
 */
proto.google.bigtable.admin.v2.Cluster.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional State state = 3;
 * @return {!proto.google.bigtable.admin.v2.Cluster.State}
 */
proto.google.bigtable.admin.v2.Cluster.prototype.getState = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Cluster.State} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Cluster.State} value
 * @return {!proto.google.bigtable.admin.v2.Cluster} returns this
 */
proto.google.bigtable.admin.v2.Cluster.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 serve_nodes = 4;
 * @return {number}
 */
proto.google.bigtable.admin.v2.Cluster.prototype.getServeNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.admin.v2.Cluster} returns this
 */
proto.google.bigtable.admin.v2.Cluster.prototype.setServeNodes = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional StorageType default_storage_type = 5;
 * @return {!proto.google.bigtable.admin.v2.StorageType}
 */
proto.google.bigtable.admin.v2.Cluster.prototype.getDefaultStorageType = function() {
  return /** @type {!proto.google.bigtable.admin.v2.StorageType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.StorageType} value
 * @return {!proto.google.bigtable.admin.v2.Cluster} returns this
 */
proto.google.bigtable.admin.v2.Cluster.prototype.setDefaultStorageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.admin.v2.AppProfile.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.AppProfile.RoutingPolicyCase = {
  ROUTING_POLICY_NOT_SET: 0,
  MULTI_CLUSTER_ROUTING_USE_ANY: 5,
  SINGLE_CLUSTER_ROUTING: 6
};

/**
 * @return {proto.google.bigtable.admin.v2.AppProfile.RoutingPolicyCase}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.getRoutingPolicyCase = function() {
  return /** @type {proto.google.bigtable.admin.v2.AppProfile.RoutingPolicyCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.admin.v2.AppProfile.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.AppProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.AppProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.AppProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    etag: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    multiClusterRoutingUseAny: (f = msg.getMultiClusterRoutingUseAny()) && proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.toObject(includeInstance, f),
    singleClusterRouting: (f = msg.getSingleClusterRouting()) && proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.AppProfile}
 */
proto.google.bigtable.admin.v2.AppProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.AppProfile;
  return proto.google.bigtable.admin.v2.AppProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.AppProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.AppProfile}
 */
proto.google.bigtable.admin.v2.AppProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEtag(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny;
      reader.readMessage(value,proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.deserializeBinaryFromReader);
      msg.setMultiClusterRoutingUseAny(value);
      break;
    case 6:
      var value = new proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting;
      reader.readMessage(value,proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.deserializeBinaryFromReader);
      msg.setSingleClusterRouting(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.AppProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.AppProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.AppProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEtag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMultiClusterRoutingUseAny();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.serializeBinaryToWriter
    );
  }
  f = message.getSingleClusterRouting();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny}
 */
proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny;
  return proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny}
 */
proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    allowTransactionalWrites: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting}
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting;
  return proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting}
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowTransactionalWrites(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAllowTransactionalWrites();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string cluster_id = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting} returns this
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool allow_transactional_writes = 2;
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.prototype.getAllowTransactionalWrites = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting} returns this
 */
proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting.prototype.setAllowTransactionalWrites = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.AppProfile} returns this
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string etag = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.getEtag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.AppProfile} returns this
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.setEtag = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.AppProfile} returns this
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional MultiClusterRoutingUseAny multi_cluster_routing_use_any = 5;
 * @return {?proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.getMultiClusterRoutingUseAny = function() {
  return /** @type{?proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny, 5));
};


/**
 * @param {?proto.google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny|undefined} value
 * @return {!proto.google.bigtable.admin.v2.AppProfile} returns this
*/
proto.google.bigtable.admin.v2.AppProfile.prototype.setMultiClusterRoutingUseAny = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.google.bigtable.admin.v2.AppProfile.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.AppProfile} returns this
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.clearMultiClusterRoutingUseAny = function() {
  return this.setMultiClusterRoutingUseAny(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.hasMultiClusterRoutingUseAny = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SingleClusterRouting single_cluster_routing = 6;
 * @return {?proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.getSingleClusterRouting = function() {
  return /** @type{?proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting, 6));
};


/**
 * @param {?proto.google.bigtable.admin.v2.AppProfile.SingleClusterRouting|undefined} value
 * @return {!proto.google.bigtable.admin.v2.AppProfile} returns this
*/
proto.google.bigtable.admin.v2.AppProfile.prototype.setSingleClusterRouting = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.google.bigtable.admin.v2.AppProfile.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.AppProfile} returns this
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.clearSingleClusterRouting = function() {
  return this.setSingleClusterRouting(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.AppProfile.prototype.hasSingleClusterRouting = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.google.bigtable.admin.v2);
