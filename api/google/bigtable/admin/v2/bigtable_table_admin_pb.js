// source: google/bigtable/admin/v2/bigtable_table_admin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_bigtable_admin_v2_table_pb = require('../../../../google/bigtable/admin/v2/table_pb.js');
goog.object.extend(proto, google_bigtable_admin_v2_table_pb);
var google_longrunning_operations_pb = require('../../../../google/longrunning/operations_pb.js');
goog.object.extend(proto, google_longrunning_operations_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.google.bigtable.admin.v2.CheckConsistencyRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.CheckConsistencyResponse', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.CreateTableRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.CreateTableRequest.Split', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.DeleteSnapshotRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.DeleteTableRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.DropRowRangeRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.DropRowRangeRequest.TargetCase', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GetSnapshotRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GetTableRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.ListSnapshotsRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.ListSnapshotsResponse', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.ListTablesRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.ListTablesResponse', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.ModCase', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.SnapshotTableMetadata', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.SnapshotTableRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.CreateTableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.admin.v2.CreateTableRequest.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.admin.v2.CreateTableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.CreateTableRequest.displayName = 'proto.google.bigtable.admin.v2.CreateTableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.CreateTableRequest.Split, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.CreateTableRequest.Split.displayName = 'proto.google.bigtable.admin.v2.CreateTableRequest.Split';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.displayName = 'proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.admin.v2.DropRowRangeRequest.oneofGroups_);
};
goog.inherits(proto.google.bigtable.admin.v2.DropRowRangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.DropRowRangeRequest.displayName = 'proto.google.bigtable.admin.v2.DropRowRangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.ListTablesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.ListTablesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.ListTablesRequest.displayName = 'proto.google.bigtable.admin.v2.ListTablesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.ListTablesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.admin.v2.ListTablesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.admin.v2.ListTablesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.ListTablesResponse.displayName = 'proto.google.bigtable.admin.v2.ListTablesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.GetTableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.GetTableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.GetTableRequest.displayName = 'proto.google.bigtable.admin.v2.GetTableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.DeleteTableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.DeleteTableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.DeleteTableRequest.displayName = 'proto.google.bigtable.admin.v2.DeleteTableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.displayName = 'proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.oneofGroups_);
};
goog.inherits(proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.displayName = 'proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.displayName = 'proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.displayName = 'proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.CheckConsistencyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.CheckConsistencyRequest.displayName = 'proto.google.bigtable.admin.v2.CheckConsistencyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.CheckConsistencyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.CheckConsistencyResponse.displayName = 'proto.google.bigtable.admin.v2.CheckConsistencyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.SnapshotTableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.SnapshotTableRequest.displayName = 'proto.google.bigtable.admin.v2.SnapshotTableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.GetSnapshotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.GetSnapshotRequest.displayName = 'proto.google.bigtable.admin.v2.GetSnapshotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.ListSnapshotsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.ListSnapshotsRequest.displayName = 'proto.google.bigtable.admin.v2.ListSnapshotsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.admin.v2.ListSnapshotsResponse.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.admin.v2.ListSnapshotsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.ListSnapshotsResponse.displayName = 'proto.google.bigtable.admin.v2.ListSnapshotsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.DeleteSnapshotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.DeleteSnapshotRequest.displayName = 'proto.google.bigtable.admin.v2.DeleteSnapshotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.SnapshotTableMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.SnapshotTableMetadata.displayName = 'proto.google.bigtable.admin.v2.SnapshotTableMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.displayName = 'proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.admin.v2.CreateTableRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.CreateTableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.CreateTableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tableId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    table: (f = msg.getTable()) && google_bigtable_admin_v2_table_pb.Table.toObject(includeInstance, f),
    initialSplitsList: jspb.Message.toObjectList(msg.getInitialSplitsList(),
    proto.google.bigtable.admin.v2.CreateTableRequest.Split.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.CreateTableRequest;
  return proto.google.bigtable.admin.v2.CreateTableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.CreateTableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableId(value);
      break;
    case 3:
      var value = new google_bigtable_admin_v2_table_pb.Table;
      reader.readMessage(value,google_bigtable_admin_v2_table_pb.Table.deserializeBinaryFromReader);
      msg.setTable(value);
      break;
    case 4:
      var value = new proto.google.bigtable.admin.v2.CreateTableRequest.Split;
      reader.readMessage(value,proto.google.bigtable.admin.v2.CreateTableRequest.Split.deserializeBinaryFromReader);
      msg.addInitialSplits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.CreateTableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.CreateTableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTableId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTable();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_bigtable_admin_v2_table_pb.Table.serializeBinaryToWriter
    );
  }
  f = message.getInitialSplitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.bigtable.admin.v2.CreateTableRequest.Split.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.CreateTableRequest.Split.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.CreateTableRequest.Split} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: msg.getKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest.Split}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.CreateTableRequest.Split;
  return proto.google.bigtable.admin.v2.CreateTableRequest.Split.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.CreateTableRequest.Split} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest.Split}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.CreateTableRequest.Split.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.CreateTableRequest.Split} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.prototype.getKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key = 1;
 * This is a type-conversion wrapper around `getKey()`
 * @return {string}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.prototype.getKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKey()));
};


/**
 * optional bytes key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKey()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.prototype.getKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest.Split} returns this
 */
proto.google.bigtable.admin.v2.CreateTableRequest.Split.prototype.setKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest} returns this
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_id = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.getTableId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest} returns this
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.setTableId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Table table = 3;
 * @return {?proto.google.bigtable.admin.v2.Table}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.getTable = function() {
  return /** @type{?proto.google.bigtable.admin.v2.Table} */ (
    jspb.Message.getWrapperField(this, google_bigtable_admin_v2_table_pb.Table, 3));
};


/**
 * @param {?proto.google.bigtable.admin.v2.Table|undefined} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest} returns this
*/
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.setTable = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest} returns this
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.clearTable = function() {
  return this.setTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.hasTable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Split initial_splits = 4;
 * @return {!Array<!proto.google.bigtable.admin.v2.CreateTableRequest.Split>}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.getInitialSplitsList = function() {
  return /** @type{!Array<!proto.google.bigtable.admin.v2.CreateTableRequest.Split>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.admin.v2.CreateTableRequest.Split, 4));
};


/**
 * @param {!Array<!proto.google.bigtable.admin.v2.CreateTableRequest.Split>} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest} returns this
*/
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.setInitialSplitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.bigtable.admin.v2.CreateTableRequest.Split=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest.Split}
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.addInitialSplits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.bigtable.admin.v2.CreateTableRequest.Split, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.admin.v2.CreateTableRequest} returns this
 */
proto.google.bigtable.admin.v2.CreateTableRequest.prototype.clearInitialSplitsList = function() {
  return this.setInitialSplitsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tableId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourceSnapshot: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest;
  return proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTableId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSourceSnapshot();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest} returns this
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_id = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.getTableId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest} returns this
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.setTableId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source_snapshot = 3;
 * @return {string}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.getSourceSnapshot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest} returns this
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.prototype.setSourceSnapshot = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.TargetCase = {
  TARGET_NOT_SET: 0,
  ROW_KEY_PREFIX: 2,
  DELETE_ALL_DATA_FROM_TABLE: 3
};

/**
 * @return {proto.google.bigtable.admin.v2.DropRowRangeRequest.TargetCase}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.getTargetCase = function() {
  return /** @type {proto.google.bigtable.admin.v2.DropRowRangeRequest.TargetCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.admin.v2.DropRowRangeRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.DropRowRangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.DropRowRangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rowKeyPrefix: msg.getRowKeyPrefix_asB64(),
    deleteAllDataFromTable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.DropRowRangeRequest}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.DropRowRangeRequest;
  return proto.google.bigtable.admin.v2.DropRowRangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.DropRowRangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.DropRowRangeRequest}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRowKeyPrefix(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteAllDataFromTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.DropRowRangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.DropRowRangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.DropRowRangeRequest} returns this
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes row_key_prefix = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.getRowKeyPrefix = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes row_key_prefix = 2;
 * This is a type-conversion wrapper around `getRowKeyPrefix()`
 * @return {string}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.getRowKeyPrefix_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRowKeyPrefix()));
};


/**
 * optional bytes row_key_prefix = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowKeyPrefix()`
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.getRowKeyPrefix_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRowKeyPrefix()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.bigtable.admin.v2.DropRowRangeRequest} returns this
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.setRowKeyPrefix = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.admin.v2.DropRowRangeRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.DropRowRangeRequest} returns this
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.clearRowKeyPrefix = function() {
  return jspb.Message.setOneofField(this, 2, proto.google.bigtable.admin.v2.DropRowRangeRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.hasRowKeyPrefix = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool delete_all_data_from_table = 3;
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.getDeleteAllDataFromTable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.admin.v2.DropRowRangeRequest} returns this
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.setDeleteAllDataFromTable = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.admin.v2.DropRowRangeRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.DropRowRangeRequest} returns this
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.clearDeleteAllDataFromTable = function() {
  return jspb.Message.setOneofField(this, 3, proto.google.bigtable.admin.v2.DropRowRangeRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.DropRowRangeRequest.prototype.hasDeleteAllDataFromTable = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.ListTablesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.ListTablesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListTablesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    view: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.ListTablesRequest}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.ListTablesRequest;
  return proto.google.bigtable.admin.v2.ListTablesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.ListTablesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.ListTablesRequest}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = /** @type {!proto.google.bigtable.admin.v2.Table.View} */ (reader.readEnum());
      msg.setView(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.ListTablesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.ListTablesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListTablesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ListTablesRequest} returns this
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Table.View view = 2;
 * @return {!proto.google.bigtable.admin.v2.Table.View}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.getView = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Table.View} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Table.View} value
 * @return {!proto.google.bigtable.admin.v2.ListTablesRequest} returns this
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.admin.v2.ListTablesRequest} returns this
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ListTablesRequest} returns this
 */
proto.google.bigtable.admin.v2.ListTablesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.admin.v2.ListTablesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.ListTablesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.ListTablesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListTablesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tablesList: jspb.Message.toObjectList(msg.getTablesList(),
    google_bigtable_admin_v2_table_pb.Table.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.ListTablesResponse}
 */
proto.google.bigtable.admin.v2.ListTablesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.ListTablesResponse;
  return proto.google.bigtable.admin.v2.ListTablesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.ListTablesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.ListTablesResponse}
 */
proto.google.bigtable.admin.v2.ListTablesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_bigtable_admin_v2_table_pb.Table;
      reader.readMessage(value,google_bigtable_admin_v2_table_pb.Table.deserializeBinaryFromReader);
      msg.addTables(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.ListTablesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.ListTablesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListTablesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_bigtable_admin_v2_table_pb.Table.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Table tables = 1;
 * @return {!Array<!proto.google.bigtable.admin.v2.Table>}
 */
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.getTablesList = function() {
  return /** @type{!Array<!proto.google.bigtable.admin.v2.Table>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_bigtable_admin_v2_table_pb.Table, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.admin.v2.Table>} value
 * @return {!proto.google.bigtable.admin.v2.ListTablesResponse} returns this
*/
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.setTablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.admin.v2.Table=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.admin.v2.Table}
 */
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.addTables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.admin.v2.Table, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.admin.v2.ListTablesResponse} returns this
 */
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.clearTablesList = function() {
  return this.setTablesList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ListTablesResponse} returns this
 */
proto.google.bigtable.admin.v2.ListTablesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.GetTableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.GetTableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.GetTableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GetTableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    view: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.GetTableRequest}
 */
proto.google.bigtable.admin.v2.GetTableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.GetTableRequest;
  return proto.google.bigtable.admin.v2.GetTableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.GetTableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.GetTableRequest}
 */
proto.google.bigtable.admin.v2.GetTableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.google.bigtable.admin.v2.Table.View} */ (reader.readEnum());
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.GetTableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.GetTableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.GetTableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GetTableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.GetTableRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.GetTableRequest} returns this
 */
proto.google.bigtable.admin.v2.GetTableRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Table.View view = 2;
 * @return {!proto.google.bigtable.admin.v2.Table.View}
 */
proto.google.bigtable.admin.v2.GetTableRequest.prototype.getView = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Table.View} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Table.View} value
 * @return {!proto.google.bigtable.admin.v2.GetTableRequest} returns this
 */
proto.google.bigtable.admin.v2.GetTableRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.DeleteTableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.DeleteTableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.DeleteTableRequest}
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.DeleteTableRequest;
  return proto.google.bigtable.admin.v2.DeleteTableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.DeleteTableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.DeleteTableRequest}
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.DeleteTableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.DeleteTableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.DeleteTableRequest} returns this
 */
proto.google.bigtable.admin.v2.DeleteTableRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modificationsList: jspb.Message.toObjectList(msg.getModificationsList(),
    proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest;
  return proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification;
      reader.readMessage(value,proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.deserializeBinaryFromReader);
      msg.addModifications(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.ModCase = {
  MOD_NOT_SET: 0,
  CREATE: 2,
  UPDATE: 3,
  DROP: 4
};

/**
 * @return {proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.ModCase}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.getModCase = function() {
  return /** @type {proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.ModCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    create: (f = msg.getCreate()) && google_bigtable_admin_v2_table_pb.ColumnFamily.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && google_bigtable_admin_v2_table_pb.ColumnFamily.toObject(includeInstance, f),
    drop: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification;
  return proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_bigtable_admin_v2_table_pb.ColumnFamily;
      reader.readMessage(value,google_bigtable_admin_v2_table_pb.ColumnFamily.deserializeBinaryFromReader);
      msg.setCreate(value);
      break;
    case 3:
      var value = new google_bigtable_admin_v2_table_pb.ColumnFamily;
      reader.readMessage(value,google_bigtable_admin_v2_table_pb.ColumnFamily.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDrop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_bigtable_admin_v2_table_pb.ColumnFamily.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_bigtable_admin_v2_table_pb.ColumnFamily.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} returns this
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ColumnFamily create = 2;
 * @return {?proto.google.bigtable.admin.v2.ColumnFamily}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.getCreate = function() {
  return /** @type{?proto.google.bigtable.admin.v2.ColumnFamily} */ (
    jspb.Message.getWrapperField(this, google_bigtable_admin_v2_table_pb.ColumnFamily, 2));
};


/**
 * @param {?proto.google.bigtable.admin.v2.ColumnFamily|undefined} value
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} returns this
*/
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.setCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} returns this
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.clearCreate = function() {
  return this.setCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.hasCreate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ColumnFamily update = 3;
 * @return {?proto.google.bigtable.admin.v2.ColumnFamily}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.getUpdate = function() {
  return /** @type{?proto.google.bigtable.admin.v2.ColumnFamily} */ (
    jspb.Message.getWrapperField(this, google_bigtable_admin_v2_table_pb.ColumnFamily, 3));
};


/**
 * @param {?proto.google.bigtable.admin.v2.ColumnFamily|undefined} value
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} returns this
*/
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} returns this
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool drop = 4;
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.getDrop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} returns this
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.setDrop = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification} returns this
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.clearDrop = function() {
  return jspb.Message.setOneofField(this, 4, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.prototype.hasDrop = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest} returns this
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Modification modifications = 2;
 * @return {!Array<!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification>}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.getModificationsList = function() {
  return /** @type{!Array<!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification, 2));
};


/**
 * @param {!Array<!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification>} value
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest} returns this
*/
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.setModificationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification}
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.addModifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest} returns this
 */
proto.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.prototype.clearModificationsList = function() {
  return this.setModificationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest;
  return proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest} returns this
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistencyToken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse;
  return proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistencyToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistencyToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string consistency_token = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.prototype.getConsistencyToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse} returns this
 */
proto.google.bigtable.admin.v2.GenerateConsistencyTokenResponse.prototype.setConsistencyToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.CheckConsistencyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.CheckConsistencyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consistencyToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.CheckConsistencyRequest}
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.CheckConsistencyRequest;
  return proto.google.bigtable.admin.v2.CheckConsistencyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.CheckConsistencyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.CheckConsistencyRequest}
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsistencyToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.CheckConsistencyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.CheckConsistencyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsistencyToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.CheckConsistencyRequest} returns this
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consistency_token = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.prototype.getConsistencyToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.CheckConsistencyRequest} returns this
 */
proto.google.bigtable.admin.v2.CheckConsistencyRequest.prototype.setConsistencyToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.CheckConsistencyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.CheckConsistencyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistent: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.CheckConsistencyResponse}
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.CheckConsistencyResponse;
  return proto.google.bigtable.admin.v2.CheckConsistencyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.CheckConsistencyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.CheckConsistencyResponse}
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConsistent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.CheckConsistencyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.CheckConsistencyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistent();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool consistent = 1;
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.prototype.getConsistent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.bigtable.admin.v2.CheckConsistencyResponse} returns this
 */
proto.google.bigtable.admin.v2.CheckConsistencyResponse.prototype.setConsistent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.SnapshotTableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.SnapshotTableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cluster: jspb.Message.getFieldWithDefault(msg, 2, ""),
    snapshotId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ttl: (f = msg.getTtl()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.SnapshotTableRequest;
  return proto.google.bigtable.admin.v2.SnapshotTableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.SnapshotTableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCluster(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotId(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTtl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.SnapshotTableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.SnapshotTableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCluster();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSnapshotId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTtl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cluster = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.getCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.setCluster = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string snapshot_id = 3;
 * @return {string}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.getSnapshotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.setSnapshotId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Duration ttl = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.getTtl = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest} returns this
*/
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.setTtl = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.clearTtl = function() {
  return this.setTtl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.hasTtl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableRequest} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.GetSnapshotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.GetSnapshotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.GetSnapshotRequest}
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.GetSnapshotRequest;
  return proto.google.bigtable.admin.v2.GetSnapshotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.GetSnapshotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.GetSnapshotRequest}
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.GetSnapshotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.GetSnapshotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.GetSnapshotRequest} returns this
 */
proto.google.bigtable.admin.v2.GetSnapshotRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.ListSnapshotsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.ListSnapshotsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsRequest}
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.ListSnapshotsRequest;
  return proto.google.bigtable.admin.v2.ListSnapshotsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.ListSnapshotsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsRequest}
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.ListSnapshotsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.ListSnapshotsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsRequest} returns this
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsRequest} returns this
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsRequest} returns this
 */
proto.google.bigtable.admin.v2.ListSnapshotsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.ListSnapshotsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.ListSnapshotsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshotsList: jspb.Message.toObjectList(msg.getSnapshotsList(),
    google_bigtable_admin_v2_table_pb.Snapshot.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsResponse}
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.ListSnapshotsResponse;
  return proto.google.bigtable.admin.v2.ListSnapshotsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.ListSnapshotsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsResponse}
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_bigtable_admin_v2_table_pb.Snapshot;
      reader.readMessage(value,google_bigtable_admin_v2_table_pb.Snapshot.deserializeBinaryFromReader);
      msg.addSnapshots(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.ListSnapshotsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.ListSnapshotsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_bigtable_admin_v2_table_pb.Snapshot.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Snapshot snapshots = 1;
 * @return {!Array<!proto.google.bigtable.admin.v2.Snapshot>}
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.getSnapshotsList = function() {
  return /** @type{!Array<!proto.google.bigtable.admin.v2.Snapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_bigtable_admin_v2_table_pb.Snapshot, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.admin.v2.Snapshot>} value
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsResponse} returns this
*/
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.setSnapshotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.admin.v2.Snapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.admin.v2.Snapshot}
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.addSnapshots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.admin.v2.Snapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsResponse} returns this
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.clearSnapshotsList = function() {
  return this.setSnapshotsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.ListSnapshotsResponse} returns this
 */
proto.google.bigtable.admin.v2.ListSnapshotsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.DeleteSnapshotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.DeleteSnapshotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.DeleteSnapshotRequest}
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.DeleteSnapshotRequest;
  return proto.google.bigtable.admin.v2.DeleteSnapshotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.DeleteSnapshotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.DeleteSnapshotRequest}
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.DeleteSnapshotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.DeleteSnapshotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.DeleteSnapshotRequest} returns this
 */
proto.google.bigtable.admin.v2.DeleteSnapshotRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.SnapshotTableMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    originalRequest: (f = msg.getOriginalRequest()) && proto.google.bigtable.admin.v2.SnapshotTableRequest.toObject(includeInstance, f),
    requestTime: (f = msg.getRequestTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    finishTime: (f = msg.getFinishTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.SnapshotTableMetadata;
  return proto.google.bigtable.admin.v2.SnapshotTableMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.admin.v2.SnapshotTableRequest;
      reader.readMessage(value,proto.google.bigtable.admin.v2.SnapshotTableRequest.deserializeBinaryFromReader);
      msg.setOriginalRequest(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRequestTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinishTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.SnapshotTableMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginalRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.bigtable.admin.v2.SnapshotTableRequest.serializeBinaryToWriter
    );
  }
  f = message.getRequestTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFinishTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional SnapshotTableRequest original_request = 1;
 * @return {?proto.google.bigtable.admin.v2.SnapshotTableRequest}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.getOriginalRequest = function() {
  return /** @type{?proto.google.bigtable.admin.v2.SnapshotTableRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.SnapshotTableRequest, 1));
};


/**
 * @param {?proto.google.bigtable.admin.v2.SnapshotTableRequest|undefined} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} returns this
*/
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.setOriginalRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.clearOriginalRequest = function() {
  return this.setOriginalRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.hasOriginalRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp request_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.getRequestTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} returns this
*/
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.setRequestTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.clearRequestTime = function() {
  return this.setRequestTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.hasRequestTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp finish_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.getFinishTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} returns this
*/
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.setFinishTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.SnapshotTableMetadata} returns this
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.clearFinishTime = function() {
  return this.setFinishTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.SnapshotTableMetadata.prototype.hasFinishTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    originalRequest: (f = msg.getOriginalRequest()) && proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.toObject(includeInstance, f),
    requestTime: (f = msg.getRequestTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    finishTime: (f = msg.getFinishTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata;
  return proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest;
      reader.readMessage(value,proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.deserializeBinaryFromReader);
      msg.setOriginalRequest(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRequestTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinishTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginalRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest.serializeBinaryToWriter
    );
  }
  f = message.getRequestTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFinishTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional CreateTableFromSnapshotRequest original_request = 1;
 * @return {?proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.getOriginalRequest = function() {
  return /** @type{?proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest, 1));
};


/**
 * @param {?proto.google.bigtable.admin.v2.CreateTableFromSnapshotRequest|undefined} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} returns this
*/
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.setOriginalRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} returns this
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.clearOriginalRequest = function() {
  return this.setOriginalRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.hasOriginalRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp request_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.getRequestTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} returns this
*/
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.setRequestTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} returns this
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.clearRequestTime = function() {
  return this.setRequestTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.hasRequestTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp finish_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.getFinishTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} returns this
*/
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.setFinishTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata} returns this
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.clearFinishTime = function() {
  return this.setFinishTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.prototype.hasFinishTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.google.bigtable.admin.v2);
