// source: google/bigtable/admin/v2/table.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.google.bigtable.admin.v2.ColumnFamily', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GcRule', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GcRule.Intersection', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GcRule.RuleCase', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.GcRule.Union', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Snapshot', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Snapshot.State', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Table', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Table.ClusterState', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Table.ClusterState.ReplicationState', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Table.TimestampGranularity', null, global);
goog.exportSymbol('proto.google.bigtable.admin.v2.Table.View', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.Table = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.Table, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.Table.displayName = 'proto.google.bigtable.admin.v2.Table';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.Table.ClusterState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.Table.ClusterState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.Table.ClusterState.displayName = 'proto.google.bigtable.admin.v2.Table.ClusterState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.ColumnFamily = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.ColumnFamily, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.ColumnFamily.displayName = 'proto.google.bigtable.admin.v2.ColumnFamily';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.GcRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.bigtable.admin.v2.GcRule.oneofGroups_);
};
goog.inherits(proto.google.bigtable.admin.v2.GcRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.GcRule.displayName = 'proto.google.bigtable.admin.v2.GcRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.GcRule.Intersection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.admin.v2.GcRule.Intersection.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.admin.v2.GcRule.Intersection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.GcRule.Intersection.displayName = 'proto.google.bigtable.admin.v2.GcRule.Intersection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.GcRule.Union = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.bigtable.admin.v2.GcRule.Union.repeatedFields_, null);
};
goog.inherits(proto.google.bigtable.admin.v2.GcRule.Union, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.GcRule.Union.displayName = 'proto.google.bigtable.admin.v2.GcRule.Union';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.v2.Snapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.v2.Snapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.v2.Snapshot.displayName = 'proto.google.bigtable.admin.v2.Snapshot';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.Table.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.Table.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.Table} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Table.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clusterStatesMap: (f = msg.getClusterStatesMap()) ? f.toObject(includeInstance, proto.google.bigtable.admin.v2.Table.ClusterState.toObject) : [],
    columnFamiliesMap: (f = msg.getColumnFamiliesMap()) ? f.toObject(includeInstance, proto.google.bigtable.admin.v2.ColumnFamily.toObject) : [],
    granularity: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.Table}
 */
proto.google.bigtable.admin.v2.Table.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.Table;
  return proto.google.bigtable.admin.v2.Table.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.Table} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.Table}
 */
proto.google.bigtable.admin.v2.Table.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = msg.getClusterStatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.bigtable.admin.v2.Table.ClusterState.deserializeBinaryFromReader, "", new proto.google.bigtable.admin.v2.Table.ClusterState());
         });
      break;
    case 3:
      var value = msg.getColumnFamiliesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.bigtable.admin.v2.ColumnFamily.deserializeBinaryFromReader, "", new proto.google.bigtable.admin.v2.ColumnFamily());
         });
      break;
    case 4:
      var value = /** @type {!proto.google.bigtable.admin.v2.Table.TimestampGranularity} */ (reader.readEnum());
      msg.setGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.Table.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.Table.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.Table} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Table.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClusterStatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.bigtable.admin.v2.Table.ClusterState.serializeBinaryToWriter);
  }
  f = message.getColumnFamiliesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.bigtable.admin.v2.ColumnFamily.serializeBinaryToWriter);
  }
  f = message.getGranularity();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.Table.TimestampGranularity = {
  TIMESTAMP_GRANULARITY_UNSPECIFIED: 0,
  MILLIS: 1
};

/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.Table.View = {
  VIEW_UNSPECIFIED: 0,
  NAME_ONLY: 1,
  SCHEMA_VIEW: 2,
  REPLICATION_VIEW: 3,
  FULL: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.Table.ClusterState.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.Table.ClusterState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.Table.ClusterState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Table.ClusterState.toObject = function(includeInstance, msg) {
  var f, obj = {
    replicationState: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.Table.ClusterState}
 */
proto.google.bigtable.admin.v2.Table.ClusterState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.Table.ClusterState;
  return proto.google.bigtable.admin.v2.Table.ClusterState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.Table.ClusterState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.Table.ClusterState}
 */
proto.google.bigtable.admin.v2.Table.ClusterState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.bigtable.admin.v2.Table.ClusterState.ReplicationState} */ (reader.readEnum());
      msg.setReplicationState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.Table.ClusterState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.Table.ClusterState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.Table.ClusterState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Table.ClusterState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplicationState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.Table.ClusterState.ReplicationState = {
  STATE_NOT_KNOWN: 0,
  INITIALIZING: 1,
  PLANNED_MAINTENANCE: 2,
  UNPLANNED_MAINTENANCE: 3,
  READY: 4
};

/**
 * optional ReplicationState replication_state = 1;
 * @return {!proto.google.bigtable.admin.v2.Table.ClusterState.ReplicationState}
 */
proto.google.bigtable.admin.v2.Table.ClusterState.prototype.getReplicationState = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Table.ClusterState.ReplicationState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Table.ClusterState.ReplicationState} value
 * @return {!proto.google.bigtable.admin.v2.Table.ClusterState} returns this
 */
proto.google.bigtable.admin.v2.Table.ClusterState.prototype.setReplicationState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.Table.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.Table} returns this
 */
proto.google.bigtable.admin.v2.Table.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, ClusterState> cluster_states = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.bigtable.admin.v2.Table.ClusterState>}
 */
proto.google.bigtable.admin.v2.Table.prototype.getClusterStatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.bigtable.admin.v2.Table.ClusterState>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.google.bigtable.admin.v2.Table.ClusterState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.bigtable.admin.v2.Table} returns this
 */
proto.google.bigtable.admin.v2.Table.prototype.clearClusterStatesMap = function() {
  this.getClusterStatesMap().clear();
  return this;};


/**
 * map<string, ColumnFamily> column_families = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.bigtable.admin.v2.ColumnFamily>}
 */
proto.google.bigtable.admin.v2.Table.prototype.getColumnFamiliesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.bigtable.admin.v2.ColumnFamily>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.bigtable.admin.v2.ColumnFamily));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.bigtable.admin.v2.Table} returns this
 */
proto.google.bigtable.admin.v2.Table.prototype.clearColumnFamiliesMap = function() {
  this.getColumnFamiliesMap().clear();
  return this;};


/**
 * optional TimestampGranularity granularity = 4;
 * @return {!proto.google.bigtable.admin.v2.Table.TimestampGranularity}
 */
proto.google.bigtable.admin.v2.Table.prototype.getGranularity = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Table.TimestampGranularity} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Table.TimestampGranularity} value
 * @return {!proto.google.bigtable.admin.v2.Table} returns this
 */
proto.google.bigtable.admin.v2.Table.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.ColumnFamily.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.ColumnFamily.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.ColumnFamily} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ColumnFamily.toObject = function(includeInstance, msg) {
  var f, obj = {
    gcRule: (f = msg.getGcRule()) && proto.google.bigtable.admin.v2.GcRule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.ColumnFamily}
 */
proto.google.bigtable.admin.v2.ColumnFamily.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.ColumnFamily;
  return proto.google.bigtable.admin.v2.ColumnFamily.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.ColumnFamily} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.ColumnFamily}
 */
proto.google.bigtable.admin.v2.ColumnFamily.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.admin.v2.GcRule;
      reader.readMessage(value,proto.google.bigtable.admin.v2.GcRule.deserializeBinaryFromReader);
      msg.setGcRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.ColumnFamily.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.ColumnFamily.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.ColumnFamily} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.ColumnFamily.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGcRule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.bigtable.admin.v2.GcRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional GcRule gc_rule = 1;
 * @return {?proto.google.bigtable.admin.v2.GcRule}
 */
proto.google.bigtable.admin.v2.ColumnFamily.prototype.getGcRule = function() {
  return /** @type{?proto.google.bigtable.admin.v2.GcRule} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.GcRule, 1));
};


/**
 * @param {?proto.google.bigtable.admin.v2.GcRule|undefined} value
 * @return {!proto.google.bigtable.admin.v2.ColumnFamily} returns this
*/
proto.google.bigtable.admin.v2.ColumnFamily.prototype.setGcRule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.ColumnFamily} returns this
 */
proto.google.bigtable.admin.v2.ColumnFamily.prototype.clearGcRule = function() {
  return this.setGcRule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.ColumnFamily.prototype.hasGcRule = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.bigtable.admin.v2.GcRule.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.GcRule.RuleCase = {
  RULE_NOT_SET: 0,
  MAX_NUM_VERSIONS: 1,
  MAX_AGE: 2,
  INTERSECTION: 3,
  UNION: 4
};

/**
 * @return {proto.google.bigtable.admin.v2.GcRule.RuleCase}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.getRuleCase = function() {
  return /** @type {proto.google.bigtable.admin.v2.GcRule.RuleCase} */(jspb.Message.computeOneofCase(this, proto.google.bigtable.admin.v2.GcRule.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.GcRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.GcRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GcRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxNumVersions: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxAge: (f = msg.getMaxAge()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    intersection: (f = msg.getIntersection()) && proto.google.bigtable.admin.v2.GcRule.Intersection.toObject(includeInstance, f),
    union: (f = msg.getUnion()) && proto.google.bigtable.admin.v2.GcRule.Union.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.GcRule}
 */
proto.google.bigtable.admin.v2.GcRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.GcRule;
  return proto.google.bigtable.admin.v2.GcRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.GcRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.GcRule}
 */
proto.google.bigtable.admin.v2.GcRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxNumVersions(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMaxAge(value);
      break;
    case 3:
      var value = new proto.google.bigtable.admin.v2.GcRule.Intersection;
      reader.readMessage(value,proto.google.bigtable.admin.v2.GcRule.Intersection.deserializeBinaryFromReader);
      msg.setIntersection(value);
      break;
    case 4:
      var value = new proto.google.bigtable.admin.v2.GcRule.Union;
      reader.readMessage(value,proto.google.bigtable.admin.v2.GcRule.Union.deserializeBinaryFromReader);
      msg.setUnion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.GcRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.GcRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GcRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxAge();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getIntersection();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.bigtable.admin.v2.GcRule.Intersection.serializeBinaryToWriter
    );
  }
  f = message.getUnion();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.bigtable.admin.v2.GcRule.Union.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.GcRule.Intersection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.GcRule.Intersection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.toObject = function(includeInstance, msg) {
  var f, obj = {
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.google.bigtable.admin.v2.GcRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.GcRule.Intersection}
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.GcRule.Intersection;
  return proto.google.bigtable.admin.v2.GcRule.Intersection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.GcRule.Intersection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.GcRule.Intersection}
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.admin.v2.GcRule;
      reader.readMessage(value,proto.google.bigtable.admin.v2.GcRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.GcRule.Intersection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.GcRule.Intersection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.bigtable.admin.v2.GcRule.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GcRule rules = 1;
 * @return {!Array<!proto.google.bigtable.admin.v2.GcRule>}
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.google.bigtable.admin.v2.GcRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.admin.v2.GcRule, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.admin.v2.GcRule>} value
 * @return {!proto.google.bigtable.admin.v2.GcRule.Intersection} returns this
*/
proto.google.bigtable.admin.v2.GcRule.Intersection.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.admin.v2.GcRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.admin.v2.GcRule}
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.admin.v2.GcRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.admin.v2.GcRule.Intersection} returns this
 */
proto.google.bigtable.admin.v2.GcRule.Intersection.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.bigtable.admin.v2.GcRule.Union.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.GcRule.Union.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.GcRule.Union.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.GcRule.Union} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GcRule.Union.toObject = function(includeInstance, msg) {
  var f, obj = {
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.google.bigtable.admin.v2.GcRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.GcRule.Union}
 */
proto.google.bigtable.admin.v2.GcRule.Union.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.GcRule.Union;
  return proto.google.bigtable.admin.v2.GcRule.Union.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.GcRule.Union} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.GcRule.Union}
 */
proto.google.bigtable.admin.v2.GcRule.Union.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.bigtable.admin.v2.GcRule;
      reader.readMessage(value,proto.google.bigtable.admin.v2.GcRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.GcRule.Union.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.GcRule.Union.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.GcRule.Union} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.GcRule.Union.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.bigtable.admin.v2.GcRule.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GcRule rules = 1;
 * @return {!Array<!proto.google.bigtable.admin.v2.GcRule>}
 */
proto.google.bigtable.admin.v2.GcRule.Union.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.google.bigtable.admin.v2.GcRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.bigtable.admin.v2.GcRule, 1));
};


/**
 * @param {!Array<!proto.google.bigtable.admin.v2.GcRule>} value
 * @return {!proto.google.bigtable.admin.v2.GcRule.Union} returns this
*/
proto.google.bigtable.admin.v2.GcRule.Union.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.bigtable.admin.v2.GcRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.bigtable.admin.v2.GcRule}
 */
proto.google.bigtable.admin.v2.GcRule.Union.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.bigtable.admin.v2.GcRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.bigtable.admin.v2.GcRule.Union} returns this
 */
proto.google.bigtable.admin.v2.GcRule.Union.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};


/**
 * optional int32 max_num_versions = 1;
 * @return {number}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.getMaxNumVersions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
 */
proto.google.bigtable.admin.v2.GcRule.prototype.setMaxNumVersions = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.google.bigtable.admin.v2.GcRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
 */
proto.google.bigtable.admin.v2.GcRule.prototype.clearMaxNumVersions = function() {
  return jspb.Message.setOneofField(this, 1, proto.google.bigtable.admin.v2.GcRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.hasMaxNumVersions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration max_age = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.getMaxAge = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
*/
proto.google.bigtable.admin.v2.GcRule.prototype.setMaxAge = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.bigtable.admin.v2.GcRule.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
 */
proto.google.bigtable.admin.v2.GcRule.prototype.clearMaxAge = function() {
  return this.setMaxAge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.hasMaxAge = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Intersection intersection = 3;
 * @return {?proto.google.bigtable.admin.v2.GcRule.Intersection}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.getIntersection = function() {
  return /** @type{?proto.google.bigtable.admin.v2.GcRule.Intersection} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.GcRule.Intersection, 3));
};


/**
 * @param {?proto.google.bigtable.admin.v2.GcRule.Intersection|undefined} value
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
*/
proto.google.bigtable.admin.v2.GcRule.prototype.setIntersection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.bigtable.admin.v2.GcRule.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
 */
proto.google.bigtable.admin.v2.GcRule.prototype.clearIntersection = function() {
  return this.setIntersection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.hasIntersection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Union union = 4;
 * @return {?proto.google.bigtable.admin.v2.GcRule.Union}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.getUnion = function() {
  return /** @type{?proto.google.bigtable.admin.v2.GcRule.Union} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.GcRule.Union, 4));
};


/**
 * @param {?proto.google.bigtable.admin.v2.GcRule.Union|undefined} value
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
*/
proto.google.bigtable.admin.v2.GcRule.prototype.setUnion = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.google.bigtable.admin.v2.GcRule.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.GcRule} returns this
 */
proto.google.bigtable.admin.v2.GcRule.prototype.clearUnion = function() {
  return this.setUnion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.GcRule.prototype.hasUnion = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.v2.Snapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.v2.Snapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Snapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceTable: (f = msg.getSourceTable()) && proto.google.bigtable.admin.v2.Table.toObject(includeInstance, f),
    dataSizeBytes: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deleteTime: (f = msg.getDeleteTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 6, 0),
    description: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.v2.Snapshot}
 */
proto.google.bigtable.admin.v2.Snapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.v2.Snapshot;
  return proto.google.bigtable.admin.v2.Snapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.v2.Snapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.v2.Snapshot}
 */
proto.google.bigtable.admin.v2.Snapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.bigtable.admin.v2.Table;
      reader.readMessage(value,proto.google.bigtable.admin.v2.Table.deserializeBinaryFromReader);
      msg.setSourceTable(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDataSizeBytes(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeleteTime(value);
      break;
    case 6:
      var value = /** @type {!proto.google.bigtable.admin.v2.Snapshot.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.v2.Snapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.v2.Snapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.v2.Snapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceTable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.bigtable.admin.v2.Table.serializeBinaryToWriter
    );
  }
  f = message.getDataSizeBytes();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeleteTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.bigtable.admin.v2.Snapshot.State = {
  STATE_NOT_KNOWN: 0,
  READY: 1,
  CREATING: 2
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Table source_table = 2;
 * @return {?proto.google.bigtable.admin.v2.Table}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.getSourceTable = function() {
  return /** @type{?proto.google.bigtable.admin.v2.Table} */ (
    jspb.Message.getWrapperField(this, proto.google.bigtable.admin.v2.Table, 2));
};


/**
 * @param {?proto.google.bigtable.admin.v2.Table|undefined} value
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
*/
proto.google.bigtable.admin.v2.Snapshot.prototype.setSourceTable = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.clearSourceTable = function() {
  return this.setSourceTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.hasSourceTable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 data_size_bytes = 3;
 * @return {number}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.getDataSizeBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.setDataSizeBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp create_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
*/
proto.google.bigtable.admin.v2.Snapshot.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp delete_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.getDeleteTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
*/
proto.google.bigtable.admin.v2.Snapshot.prototype.setDeleteTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.clearDeleteTime = function() {
  return this.setDeleteTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.hasDeleteTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional State state = 6;
 * @return {!proto.google.bigtable.admin.v2.Snapshot.State}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.getState = function() {
  return /** @type {!proto.google.bigtable.admin.v2.Snapshot.State} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.google.bigtable.admin.v2.Snapshot.State} value
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.v2.Snapshot} returns this
 */
proto.google.bigtable.admin.v2.Snapshot.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.google.bigtable.admin.v2);
