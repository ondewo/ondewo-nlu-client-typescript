// source: google/bigtable/admin/cluster/v1/bigtable_cluster_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_longrunning_operations_pb = require('../../../../../google/longrunning/operations_pb.js');
goog.object.extend(proto, google_longrunning_operations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.google.bigtable.admin.cluster.v1.Cluster', null, global);
goog.exportSymbol('proto.google.bigtable.admin.cluster.v1.StorageType', null, global);
goog.exportSymbol('proto.google.bigtable.admin.cluster.v1.Zone', null, global);
goog.exportSymbol('proto.google.bigtable.admin.cluster.v1.Zone.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.cluster.v1.Zone = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.cluster.v1.Zone, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.cluster.v1.Zone.displayName = 'proto.google.bigtable.admin.cluster.v1.Zone';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.bigtable.admin.cluster.v1.Cluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.bigtable.admin.cluster.v1.Cluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.bigtable.admin.cluster.v1.Cluster.displayName = 'proto.google.bigtable.admin.cluster.v1.Cluster';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.cluster.v1.Zone.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.cluster.v1.Zone} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.cluster.v1.Zone.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.cluster.v1.Zone}
 */
proto.google.bigtable.admin.cluster.v1.Zone.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.cluster.v1.Zone;
  return proto.google.bigtable.admin.cluster.v1.Zone.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.cluster.v1.Zone} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.cluster.v1.Zone}
 */
proto.google.bigtable.admin.cluster.v1.Zone.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {!proto.google.bigtable.admin.cluster.v1.Zone.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.cluster.v1.Zone.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.cluster.v1.Zone} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.cluster.v1.Zone.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.bigtable.admin.cluster.v1.Zone.Status = {
  UNKNOWN: 0,
  OK: 1,
  PLANNED_MAINTENANCE: 2,
  EMERGENCY_MAINENANCE: 3
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Zone} returns this
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Zone} returns this
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Status status = 3;
 * @return {!proto.google.bigtable.admin.cluster.v1.Zone.Status}
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.getStatus = function() {
  return /** @type {!proto.google.bigtable.admin.cluster.v1.Zone.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.google.bigtable.admin.cluster.v1.Zone.Status} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Zone} returns this
 */
proto.google.bigtable.admin.cluster.v1.Zone.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.toObject = function(opt_includeInstance) {
  return proto.google.bigtable.admin.cluster.v1.Cluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.bigtable.admin.cluster.v1.Cluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.cluster.v1.Cluster.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currentOperation: (f = msg.getCurrentOperation()) && google_longrunning_operations_pb.Operation.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serveNodes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    defaultStorageType: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.bigtable.admin.cluster.v1.Cluster;
  return proto.google.bigtable.admin.cluster.v1.Cluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.bigtable.admin.cluster.v1.Cluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_longrunning_operations_pb.Operation;
      reader.readMessage(value,google_longrunning_operations_pb.Operation.deserializeBinaryFromReader);
      msg.setCurrentOperation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServeNodes(value);
      break;
    case 8:
      var value = /** @type {!proto.google.bigtable.admin.cluster.v1.StorageType} */ (reader.readEnum());
      msg.setDefaultStorageType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.bigtable.admin.cluster.v1.Cluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.bigtable.admin.cluster.v1.Cluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.bigtable.admin.cluster.v1.Cluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrentOperation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_longrunning_operations_pb.Operation.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServeNodes();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDefaultStorageType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster} returns this
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.longrunning.Operation current_operation = 3;
 * @return {?proto.google.longrunning.Operation}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.getCurrentOperation = function() {
  return /** @type{?proto.google.longrunning.Operation} */ (
    jspb.Message.getWrapperField(this, google_longrunning_operations_pb.Operation, 3));
};


/**
 * @param {?proto.google.longrunning.Operation|undefined} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster} returns this
*/
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.setCurrentOperation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster} returns this
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.clearCurrentOperation = function() {
  return this.setCurrentOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.hasCurrentOperation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string display_name = 4;
 * @return {string}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster} returns this
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 serve_nodes = 5;
 * @return {number}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.getServeNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster} returns this
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.setServeNodes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional StorageType default_storage_type = 8;
 * @return {!proto.google.bigtable.admin.cluster.v1.StorageType}
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.getDefaultStorageType = function() {
  return /** @type {!proto.google.bigtable.admin.cluster.v1.StorageType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.google.bigtable.admin.cluster.v1.StorageType} value
 * @return {!proto.google.bigtable.admin.cluster.v1.Cluster} returns this
 */
proto.google.bigtable.admin.cluster.v1.Cluster.prototype.setDefaultStorageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * @enum {number}
 */
proto.google.bigtable.admin.cluster.v1.StorageType = {
  STORAGE_UNSPECIFIED: 0,
  STORAGE_SSD: 1,
  STORAGE_HDD: 2
};

goog.object.extend(exports, proto.google.bigtable.admin.cluster.v1);
